%!PS-Adobe-3.0 EPSF-3.0
%%Title: 022.eps
%%Creator: XCircuit v3.7 rev55
%%CreationDate: Wed Nov  5 15:58:25 2014
%%Pages: 1
%%BoundingBox: 68 68 480 168
%%DocumentNeededResources: font Helvetica Helvetica-Bold Helvetica-Oblique 
%%+ font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def

/analog::resistor {
begingate
1 1.000 0 64 0 36 2 polygon
1 1.000 0 -64 0 -36 2 polygon
1 1.000 0 -36 14 -30 -14 -18 14 -6 -14 6 14 18 -14 30 0 36 8 polygon
1.000 0.000 0.000 scb
(r.1) {/Times-Roman cf} 2 9 0 1.000 0 64 pinlabel
(r.2) {/Times-Roman cf} 2 13 0 1.000 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:R%i %pr.1 %pr.2 1.0K) {/Times-Roman cf} 2 0 0 1.000 -208 -160 infolabel
(sim:r %pr.1 %pr.2) {/Times-Roman cf} 2 0 0 1.000 -208 -208 infolabel
endgate
} def

/analog::source {
% hidden
begingate
1 1.000 0 0 32 0.000 360.000 xcarc
1 1.000 0 32 0 64 2 polygon
1 1.000 0 -32 0 -64 2 polygon
endgate
} def

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/analog::isource {
begingate
1.000 0 0 0 analog::source
1 0.750 0 20 0 -8 2 polygon
0.800 /sv 180 0 -20 generic::arrowhead
1.000 0.000 0.000 scb
(i.p) {/Times-Roman cf} 2 9 0 1.000 0 64 pinlabel
(i.m) {/Times-Roman cf} 2 13 0 1.000 0 -64 pinlabel
endgate
} def

/analog::inductor {
begingate
1 1.000 20 -22 20 -38 0 -42 0 -18 spline
1 1.000 -20 -14 -20 -26 0 -22 0 -18 spline
1 1.000 20 38 20 22 0 18 0 42 spline
1 1.000 20 18 20 2 0 -2 0 22 spline
1 1.000 20 -2 20 -18 0 -22 0 2 spline
1 1.000 -20 26 -20 14 0 18 0 22 spline
1 1.000 -20 6 -20 -6 0 -2 0 2 spline
1 1.000 0 -42 0 -64 2 polygon
1 1.000 0 42 0 64 2 polygon
1.000 0.000 0.000 scb
(l.1) {/Times-Roman cf} 2 9 0 1.000 0 64 pinlabel
(l.2) {/Times-Roman cf} 2 13 0 1.000 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:L%i %pl.1 %pl.2 1.0U) {/Times-Roman cf} 2 0 0 1.000 -208 -160 infolabel
(sim:l %pl.1 %pl.2) {/Times-Roman cf} 2 0 0 1.000 -208 -208 infolabel
endgate
} def

/generic::jumper {
% trivial
begingate
1 1.000 0 0 10 -90.000 90.000 xcarc
1 1.000 0 10 0 16 2 polygon
1 1.000 0 -10 0 -16 2 polygon
1.000 0.000 0.000 scb
(a) {/Times-Roman cf} 2 1 0 1.000 0 16 pinlabel
(a) {/Times-Roman cf} 2 13 0 1.000 0 -16 pinlabel
endgate
} def

/::Arrow {
begingate
1.000 0.000 0.000 scb
1 1.000 8 24 8 -40 2 polygon
1 1.000 0 -32 8 -40 16 -32 3 polygon
endgate
} def


%%EndSetup

%%Page: 021.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
0.5000 inchscale
2.6000 setlinewidth 1104 608 translate

1 1.000 -400 64 -400 96 2 polygon
1.000 0 -400 96 generic::dot
1 1.000 -400 96 -416 160 2 polygon
1.000 0 -416 144 generic::dot
1.000 0 -384 144 generic::dot
1 1.000 -416 144 -560 144 2 polygon
1 1.000 -240 144 -384 144 2 polygon
1 1.000 -624 64 -624 144 -560 144 3 polygon
1 1.000 -176 64 -176 144 -240 144 3 polygon
1.000 0 -176 0 analog::resistor
1 1.000 -624 -64 -624 -144 -176 -144 -176 -64 4 polygon
1.000 0 -400 -144 generic::dot
1 1.000 -400 -144 -400 -64 2 polygon
(R) {/Times-Roman cf} 2 16 0 1.000 -224 -16 label
0.000 0.000 1.000 scb
1 2.000 -416 56 -416 40 2 polygon
1 2.000 -424 48 -408 48 2 polygon
1 2.000 -424 -48 -408 -48 2 polygon
sce
( switch in "charge" position) {/Helvetica cf} (Step 1:) {/Helvetica-Bold cf} 4 
16 0 1.000 -720 240 label
1 1.000 352 64 352 96 2 polygon
1.000 0 352 96 generic::dot
1.000 0 336 144 generic::dot
1.000 0 368 144 generic::dot
1 1.000 336 144 192 144 2 polygon
1 1.000 512 144 368 144 2 polygon
1 1.000 128 64 128 144 192 144 3 polygon
1 1.000 576 64 576 144 512 144 3 polygon
1.000 0 576 0 analog::resistor
1 1.000 128 -64 128 -144 576 -144 576 -64 4 polygon
1.000 0 352 -144 generic::dot
1 1.000 352 -144 352 -64 2 polygon
(R) {/Times-Roman cf} 2 16 0 1.000 528 -16 label
( switch in "neutral" position) {/Helvetica cf} (Step 2:) {/Helvetica-Bold cf} 
4 16 0 1.000 32 240 label
1 1.000 352 96 352 160 2 polygon
1.000 0.000 0.000 scb
1 1.000 -376 -48 -376 -112 2 polygon
1 1.000 -384 -104 -376 -112 -368 -104 3 polygon
sce
1 1.000 1104 64 1104 96 2 polygon
1.000 0 1104 96 generic::dot
1.000 0 1088 144 generic::dot
1.000 0 1120 144 generic::dot
1 1.000 1088 144 944 144 2 polygon
1 1.000 1264 144 1120 144 2 polygon
1 1.000 880 64 880 144 944 144 3 polygon
1 1.000 1328 64 1328 144 1264 144 3 polygon
1.000 0 1328 0 analog::resistor
1 1.000 880 -64 880 -144 1328 -144 1328 -64 4 polygon
1.000 0 1104 -144 generic::dot
1 1.000 1104 -144 1104 -64 2 polygon
(R) {/Times-Roman cf} 2 16 0 1.000 1280 -16 label
( switch in "discharge" position) {/Helvetica cf} (Step 3:) 
{/Helvetica-Bold cf} 4 16 0 1.000 784 240 label
1 1.000 1104 96 1120 160 2 polygon
0.000 0.000 1.000 scb
1 2.000 1344 -40 1344 -56 2 polygon
1 2.000 1336 48 1352 48 2 polygon
1 2.000 1336 -48 1352 -48 2 polygon
sce
-1.000 180 -624 0 analog::isource
(I) {/Times-Roman cf} 2 16 0 1.000 -688 -16 label
(I) {/Times-Roman cf} 2 16 0 1.000 64 -16 label
(I) {/Times-Roman cf} 2 16 0 1.000 816 -16 label
-1.000 180 128 0 analog::isource
-1.000 180 880 0 analog::isource
1.000 0 -400 0 analog::inductor
(L) {/Times-Roman cf} 2 16 0 1.000 -464 -16 label
(L) {/Times-Roman cf} 2 16 0 1.000 288 -16 label
1.000 0 352 0 analog::inductor
(L) {/Times-Roman cf} 2 16 0 1.000 1040 -16 label
1.000 0 1104 0 analog::inductor
1.000 0 -400 160 generic::dot
1.000 0 352 160 generic::dot
1.000 0 1104 160 generic::dot
0.604 0.604 0.604 scb
0 3.000 -720 224 -720 -224 -128 -224 -128 224 4 polygon
sce
1 1.000 -400 160 -400 192 -320 192 -320 160 4 polygon
1.000 0 -320 144 generic::jumper
1 1.000 -320 128 -320 -144 2 polygon
1.000 0 -320 -144 generic::dot
0.604 0.604 0.604 scb
0 3.000 32 224 32 -224 624 -224 624 224 4 polygon
0 3.000 784 224 784 -224 1376 -224 1376 224 4 polygon
1.000 0.000 0.000 scb
1 1.000 376 104 376 40 2 polygon
1 1.000 368 48 376 40 384 48 3 polygon
1 1.000 376 -48 376 -112 2 polygon
1 1.000 368 -104 376 -112 384 -104 3 polygon
sce
1 1.000 352 160 352 192 432 192 432 160 4 polygon
1.000 0 432 144 generic::jumper
1 1.000 432 128 432 -144 2 polygon
1.000 0 432 -144 generic::dot
1 1.000 1104 160 1104 192 1184 192 1184 160 4 polygon
1.000 0 1184 144 generic::jumper
1 1.000 1184 128 1184 -144 2 polygon
1.000 0 1184 -144 generic::dot
1.000 0.000 0.000 scb
1 1.000 448 -96 448 -32 2 polygon
1 1.000 440 -40 448 -32 456 -40 3 polygon
1 1.000 448 32 448 96 2 polygon
1 1.000 440 88 448 96 456 88 3 polygon
0.000 0.000 1.000 scb
(Inductor acts as a load) {/Helvetica-Oblique cf} 2 16 0 1.000 -608 -192 label
(Inductor holds its "charge") {/Helvetica-Oblique cf} 2 16 0 1.000 128 -192 
label
(Inductor acts as a source) {/Helvetica-Oblique cf} 2 16 0 1.000 880 -192 label
1.000 0.000 0.000 scb
1 1.000 1128 104 1128 40 2 polygon
1 1.000 1120 48 1128 40 1136 48 3 polygon
1 1.000 1128 -48 1128 -112 2 polygon
1 1.000 1120 -104 1128 -112 1136 -104 3 polygon
0.000 0.000 1.000 scb
1 2.000 1088 -40 1088 -56 2 polygon
1 2.000 1080 48 1096 48 2 polygon
1 2.000 1080 -48 1096 -48 2 polygon
1 2.000 -640 56 -640 40 2 polygon
1 2.000 -648 48 -632 48 2 polygon
1 2.000 -648 -48 -632 -48 2 polygon
sce
1.000 0 -384 80 ::Arrow
1.000 270 -528 120 ::Arrow
-1.000 90 -512 -136 ::Arrow
-1.000 180 -616 -88 ::Arrow
-1.000 180 -616 80 ::Arrow
-1.000 90 1256 120 ::Arrow
1.000 270 1240 -136 ::Arrow
1.000 180 1320 -88 ::Arrow
1.000 180 1320 80 ::Arrow
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
