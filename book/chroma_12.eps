%!PS-Adobe-3.0 EPSF-3.0
%%Title: chroma_12.eps
%%Creator: XCircuit v3.7 rev26
%%CreationDate: Mon Dec 19 09:07:20 2011
%%Pages: 1
%%BoundingBox: 68 68 448 226
%%DocumentNeededResources: font Helvetica Helvetica-Bold Helvetica-Oblique 
%%+ font Helvetica-BoldOblique Times-Roman Courier-Bold 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/generic::jumper {
% trivial
begingate
1 1.000 0 0 10 -90.000 90.000 xcarc
1 1.000 0 10 0 16 2 polygon
1 1.000 0 -10 0 -16 2 polygon
1.000 0.000 0.000 scb
(a) {/Times-Roman cf} 2 1 0 1.000 0 16 pinlabel
(a) {/Times-Roman cf} 2 13 0 1.000 0 -16 pinlabel
endgate
} def

/::_arc {
begingate
1 6.000 -24 8 10 28 50 28 -48 -28 spline
endgate
} def

/::valve_slots {
begingate
1.000 0 -66 84 ::_arc
-1.000 /sv 180 -66 -84 ::_arc
-1.000 /sv 60 80 0 ::_arc
endgate
} def

/::samplevalve_body {
begingate
1 1.000 0 0 160 0.000 360.000 xcarc
1 1.000 -98 56 12 0.000 360.000 xcarc
1 1.000 0 112 12 0.000 360.000 xcarc
1 1.000 96 58 12 0.000 360.000 xcarc
1 1.000 96 -56 12 0.000 360.000 xcarc
1 1.000 0 -112 12 0.000 360.000 xcarc
1 1.000 -114 -56 -110 -56 2 polygon
1 1.000 -98 -56 12 0.000 360.000 xcarc
endgate
} def


%%EndSetup

%%Page: i00667x01.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
0.5000 inchscale
2.6000 setlinewidth 1344 1440 translate

1 1.000 -592 -680 -736 -680 2 polygon
1.000 90 -592 -680 generic::arrowhead
(Sample in) {/Helvetica cf} 2 16 0 1.000 -936 -688 label
1 1.000 -736 -792 -592 -792 2 polygon
-1.000 /sv 270 -747 -792 generic::arrowhead
(To waste) {/Helvetica cf} 2 16 0 1.000 -936 -808 label
1 1.000 -480 -608 -480 -612 2 polygon
1 1.000 -368 -680 -372 -680 2 polygon
1 1.000 -592 -680 -590 -680 2 polygon
1 1.000 -480 -860 -480 -864 2 polygon
1 1.000 -368 -792 -372 -792 2 polygon
1 1.000 -480 -608 -480 -480 -160 -480 3 polygon
1 1.000 -480 -864 -480 -992 -160 -992 3 polygon
1 1.000 -368 -792 -64 -792 2 polygon
1.000 0 -160 -680 generic::jumper
1.000 0 -160 -792 generic::jumper
1 1.000 -160 -696 -160 -776 2 polygon
1 1.000 -160 -480 -160 -664 2 polygon
1 1.000 -160 -808 -160 -992 2 polygon
-1.000 /sv 270 -371 -792 generic::arrowhead
-1.000 /sv 240 -472 -752 ::valve_slots
1.000 90 805 -792 generic::arrowhead
0.604 0.604 0.604 scb
1.000 0 -480 -736 ::samplevalve_body
0.824 0.706 0.549 scb
496 1.000 -96 -768 -96 -592 192 -592 192 -768 4 polygon
sce
0 1.000 -96 -768 -96 -592 192 -592 192 -768 4 polygon
1 1.000 -368 -680 -64 -680 2 polygon
1 1.000 -64 -584 -16 -584 -16 -680 -64 -680 spline
1 1.000 -32 -776 -16 -776 -16 -680 -32 -680 spline
1 1.000 -32 -584 16 -584 16 -680 -32 -680 spline
1 1.000 0 -776 16 -776 16 -680 0 -680 spline
1 1.000 0 -584 48 -584 48 -680 0 -680 spline
1 1.000 32 -776 48 -776 48 -680 32 -680 spline
1 1.000 32 -584 80 -584 80 -680 32 -680 spline
1 1.000 64 -776 80 -776 80 -680 64 -680 spline
1 1.000 64 -584 112 -584 112 -680 64 -680 spline
1 1.000 96 -776 112 -776 112 -680 96 -680 spline
1 1.000 96 -584 144 -584 144 -680 96 -680 spline
1 1.000 128 -776 144 -776 144 -680 128 -680 spline
-1.000 /sv 90 144 -680 generic::jumper
1 1.000 160 -680 224 -680 2 polygon
1 1.000 -48 -928 -48 -880 2 polygon
1 1.000 -64 -880 -32 -880 -64 -832 -32 -832 -64 -880 5 polygon
1 1.000 -48 -856 -8 -856 2 polygon
1 1.000 -8 -840 -8 -872 2 polygon
1 1.000 -48 -832 -48 -792 -64 -792 3 polygon
(Carrier gas) {/Helvetica cf} 2 16 0 1.000 -136 -968 label
0.604 0.604 0.604 scb
1.000 0 448 -736 ::samplevalve_body
sce
-1.000 /sv 300 440 -752 ::valve_slots
1 1.000 224 -680 336 -680 2 polygon
0.824 0.706 0.549 scb
496 1.000 352 -512 352 -336 640 -336 640 -512 4 polygon
sce
0 1.000 352 -512 352 -336 640 -336 640 -512 4 polygon
1 1.000 392 -328 440 -328 440 -424 392 -424 spline
1 1.000 424 -520 440 -520 440 -424 424 -424 spline
1 1.000 424 -328 472 -328 472 -424 424 -424 spline
1 1.000 456 -520 472 -520 472 -424 456 -424 spline
1 1.000 456 -328 504 -328 504 -424 456 -424 spline
1 1.000 488 -520 504 -520 504 -424 488 -424 spline
1 1.000 488 -328 536 -328 536 -424 488 -424 spline
1 1.000 520 -520 536 -520 536 -424 520 -424 spline
1 1.000 520 -328 568 -328 568 -424 520 -424 spline
1 1.000 552 -520 568 -520 568 -424 552 -424 spline
1 1.000 552 -328 600 -328 600 -424 552 -424 spline
1 1.000 584 -520 600 -520 600 -424 584 -424 spline
-1.000 /sv 90 600 -424 generic::jumper
(Column 1) {/Helvetica cf} 2 16 0 1.000 -40 -568 label
(Column 2) {/Helvetica cf} 2 16 0 1.000 416 -312 label
1 1.000 448 -612 448 -544 288 -544 288 -424 392 -424 5 polygon
1 1.000 616 -424 704 -424 704 -544 544 -544 544 -666 5 polygon
1 1.000 288 -960 416 -960 2 polygon
1 1.000 336 -952 368 -952 384 -936 320 -936 spline
1 1.000 336 -968 368 -968 384 -984 320 -984 spline
1 1.000 416 -960 448 -960 448 -860 3 polygon
1 1.000 288 -960 256 -960 256 -792 336 -792 4 polygon
(Restriction) {/Helvetica cf} 2 16 0 1.000 256 -1024 label
1 1.000 556 -792 704 -792 2 polygon
(To waste) {/Helvetica cf} 2 16 0 1.000 824 -808 label
0.000 0.000 1.000 scb
(1) {/Courier-Bold cf} 2 16 0 0.500 -704 -652 label
(2) {/Courier-Bold cf} 2 16 0 0.500 -688 -652 label
(3) {/Courier-Bold cf} 2 16 0 0.500 -672 -652 label
(4) {/Courier-Bold cf} 2 16 0 0.500 -704 -672 label
(5) {/Courier-Bold cf} 2 16 0 0.500 -688 -672 label
(6) {/Courier-Bold cf} 2 16 0 0.500 -672 -672 label
(1) {/Courier-Bold cf} 2 16 0 0.500 -704 -816 label
(2) {/Courier-Bold cf} 2 16 0 0.500 -688 -816 label
(3) {/Courier-Bold cf} 2 16 0 0.500 -672 -816 label
(4) {/Courier-Bold cf} 2 16 0 0.500 -704 -836 label
(5) {/Courier-Bold cf} 2 16 0 0.500 -688 -836 label
(6) {/Courier-Bold cf} 2 16 0 0.500 -672 -836 label
1.000 0.000 0.000 scb
(Normal) {/Helvetica-BoldOblique cf} 2 16 0 1.000 384 -744 label
sce
-1.000 /sv 360 -48 -880 generic::arrowhead
0.933 0.604 0.000 scb
496 1.000 648 -760 648 -824 712 -824 712 -760 4 polygon
sce
0 1.000 648 -760 648 -824 712 -824 712 -760 4 polygon
1 1.000 784 -792 712 -792 2 polygon
(Detector) {/Helvetica cf} 2 16 0 1.000 608 -864 label
0 1.000 -960 -256 -960 -1056 1024 -1056 1024 -256 4 polygon
0.000 0.000 1.000 scb
(1) {/Courier-Bold cf} 2 16 0 0.500 -88 -716 label
(2) {/Courier-Bold cf} 2 16 0 0.500 -72 -716 label
(3) {/Courier-Bold cf} 2 16 0 0.500 -56 -716 label
(4) {/Courier-Bold cf} 2 16 0 0.500 -88 -736 label
(5) {/Courier-Bold cf} 2 16 0 0.500 -72 -736 label
(6) {/Courier-Bold cf} 2 16 0 0.500 -56 -736 label
1.000 0.000 0.000 scb
(Sampling) {/Helvetica-BoldOblique cf} 2 16 0 1.000 -560 -744 label
sce
(injecting sample into column 1) {/Helvetica-Oblique cf} (Step 1: ) 
{/Helvetica-Bold cf} 4 16 0 1.500 -928 -336 label
0.180 0.545 0.341 scb
1 1.000 -288 -664 -224 -664 2 polygon
1 1.000 -232 -656 -224 -664 -232 -672 3 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
