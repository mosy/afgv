%!PS-Adobe-3.0 EPSF-3.0
%%Title: cont09.eps
%%Creator: XCircuit v3.4 rev27
%%CreationDate: Thu Dec 27 16:25:28 2007
%%Pages: 1
%%BoundingBox: 68 68 409 275
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.3
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--7/13/05  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.3 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate
	0 0 moveto neg rotate dup scale cvx exec image grestore } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def


%%EndSetup

%%Page: 8400x020.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 32.00 4.00 gridspace
0.7500 inchscale
2.6000 setlinewidth 864 576 translate

0.800 0.800 0.800 scb
1 1.00 -480 384 -480 -256 2 polygon
1 1.00 -448 384 -448 -256 2 polygon
1 1.00 -416 384 -416 -256 2 polygon
1 1.00 -384 384 -384 -256 2 polygon
1 1.00 -352 384 -352 -256 2 polygon
1 1.00 -320 384 -320 -256 2 polygon
1 1.00 -288 384 -288 -256 2 polygon
1 1.00 -256 384 -256 -256 2 polygon
1 1.00 -224 384 -224 -256 2 polygon
1 1.00 -192 384 -192 -256 2 polygon
1 1.00 -160 384 -160 -256 2 polygon
1 1.00 -128 384 -128 -256 2 polygon
1 1.00 -96 384 -96 -256 2 polygon
1 1.00 -64 384 -64 -256 2 polygon
1 1.00 -32 384 -32 -256 2 polygon
1 1.00 0 384 0 -256 2 polygon
1 1.00 32 384 32 -256 2 polygon
1 1.00 64 384 64 -256 2 polygon
1 1.00 96 384 96 -256 2 polygon
1 1.00 128 384 128 -256 2 polygon
1 1.00 160 384 160 -256 2 polygon
1 1.00 192 384 192 -256 2 polygon
1 1.00 224 384 224 -256 2 polygon
1 1.00 256 384 256 -256 2 polygon
1 1.00 288 384 288 -256 2 polygon
1 1.00 320 384 320 -256 2 polygon
1 1.00 352 384 352 -256 2 polygon
1 1.00 384 384 384 -256 2 polygon
1 1.00 416 384 416 -256 2 polygon
1 1.00 448 384 448 -256 2 polygon
1 1.00 480 384 480 -256 2 polygon
1 1.00 512 384 512 -256 2 polygon
1 1.00 544 384 544 -256 2 polygon
1 1.00 576 384 576 -256 2 polygon
1 1.00 -512 384 576 384 2 polygon
1 1.00 -512 352 576 352 2 polygon
1 1.00 -512 320 576 320 2 polygon
1 1.00 -512 288 576 288 2 polygon
1 1.00 -512 256 576 256 2 polygon
1 1.00 -512 224 576 224 2 polygon
1 1.00 -512 192 576 192 2 polygon
1 1.00 -512 160 576 160 2 polygon
1 1.00 -512 128 576 128 2 polygon
1 1.00 -512 96 576 96 2 polygon
1 1.00 -512 64 576 64 2 polygon
1 1.00 -512 32 576 32 2 polygon
1 1.00 -512 0 576 0 2 polygon
1 1.00 -512 -32 576 -32 2 polygon
1 1.00 -512 -64 576 -64 2 polygon
1 1.00 -512 -96 576 -96 2 polygon
1 1.00 -512 -128 576 -128 2 polygon
1 1.00 -512 -160 576 -160 2 polygon
1 1.00 -512 -192 576 -192 2 polygon
1 1.00 -512 -224 576 -224 2 polygon
sce
1 1.00 -512 384 -512 -256 576 -256 3 polygon
(Time) {/Helvetica cf} 2 16 0 1.00 -64 -320 label
1.00 90 80 -304 arrow
(0) {/Times-Roman cf} 2 16 0 0.50 -536 -264 label
(5) {/Times-Roman cf} 2 16 0 0.50 -536 -232 label
(10) {/Times-Roman cf} 2 16 0 0.50 -544 -200 label
(15) {/Times-Roman cf} 2 16 0 0.50 -544 -168 label
(20) {/Times-Roman cf} 2 16 0 0.50 -544 -136 label
(25) {/Times-Roman cf} 2 16 0 0.50 -544 -104 label
(30) {/Times-Roman cf} 2 16 0 0.50 -544 -72 label
(35) {/Times-Roman cf} 2 16 0 0.50 -544 -40 label
(40) {/Times-Roman cf} 2 16 0 0.50 -544 -8 label
(45) {/Times-Roman cf} 2 16 0 0.50 -544 24 label
(50) {/Times-Roman cf} 2 16 0 0.50 -544 56 label
(55) {/Times-Roman cf} 2 16 0 0.50 -544 88 label
(60) {/Times-Roman cf} 2 16 0 0.50 -544 120 label
(65) {/Times-Roman cf} 2 16 0 0.50 -544 152 label
(70) {/Times-Roman cf} 2 16 0 0.50 -544 184 label
(75) {/Times-Roman cf} 2 16 0 0.50 -544 216 label
(80) {/Times-Roman cf} 2 16 0 0.50 -544 248 label
(85) {/Times-Roman cf} 2 16 0 0.50 -544 280 label
(90) {/Times-Roman cf} 2 16 0 0.50 -544 312 label
(95) {/Times-Roman cf} 2 16 0 0.50 -544 344 label
(100) {/Times-Roman cf} 2 16 0 0.50 -552 376 label
(%) {/Times-Roman cf} 2 16 0 1.00 -608 64 label
1.000 0.000 0.000 scb
(SP) {/Helvetica cf} 2 16 0 1.00 -196 212 label
0.000 0.000 1.000 scb
(PV) {/Helvetica cf} 2 16 0 1.00 -6 260 label
1.000 0.000 0.000 scb
1 1.00 -512 64 -144 64 -144 208 576 208 4 polygon
0.000 0.000 1.000 scb
1 1.00 -512 68 -488 68 -476 64 -472 64 -464 60 -456 60 -444 64 -440 64 -436 64 
-424 64 -420 64 -412 64 -408 64 -404 64 -392 64 -388 64 -384 64 -376 68 -364 68 
-356 68 -348 64 -340 60 -332 60 -320 60 -316 60 -312 64 -304 64 -300 64 -292 64 
-280 64 -276 64 -272 64 -264 64 -260 60 -256 60 -252 60 -240 60 -236 60 -232 64 
-228 64 -220 64 -212 60 -204 60 -200 60 -192 60 -184 60 -176 60 -172 64 -168 64 
-160 64 -152 64 -148 64 -144 64 -140 68 -128 68 -124 72 -120 72 -116 76 -112 80 
-108 84 -104 88 -100 92 -96 100 -92 104 -88 108 -84 112 -80 120 -80 124 -76 124 
-72 132 -68 132 -68 136 -64 140 -60 148 -60 152 -60 156 -60 160 -56 168 -52 172 
-52 176 -52 180 -48 184 -44 192 -40 192 -40 196 -36 204 -32 204 -32 208 -28 216 
-24 220 -20 224 -16 228 -12 228 -8 236 0 240 4 240 8 244 16 248 20 248 24 248 
28 248 32 244 36 244 36 240 44 236 48 232 52 228 60 220 64 216 68 208 72 208 76 
200 76 196 80 196 84 192 88 188 92 184 96 184 100 180 104 180 108 176 112 176 
124 176 128 172 136 172 140 172 148 176 152 176 156 180 164 180 168 188 176 192 
180 196 184 200 188 204 188 208 192 212 200 216 204 216 208 220 216 224 220 228 
224 228 232 228 236 232 240 232 252 232 256 232 260 232 264 232 272 228 276 228 
280 224 284 220 288 216 300 208 304 204 308 204 312 204 316 200 324 200 328 200 
332 196 336 192 340 192 344 192 348 192 356 192 364 192 368 192 372 192 376 192 
380 192 396 192 404 196 412 200 416 200 420 204 428 204 432 208 440 212 444 212 
444 216 448 216 452 220 460 220 464 220 476 224 480 224 488 224 500 220 512 220 
520 216 528 216 536 212 544 208 552 204 564 204 572 204 576 204 200 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
