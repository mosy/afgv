%!PS-Adobe-3.0 EPSF-3.0
%%Title: cont11.eps
%%Creator: XCircuit v3.7 rev55
%%CreationDate: Mon Apr  7 19:46:19 2014
%%Pages: 1
%%BoundingBox: 68 68 409 275
%%DocumentNeededResources: font Helvetica Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/::arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/::arrow {
% trivial
begingate
1 0.800 0 -40 0 20 2 polygon
1.000 0 0 40 ::arrowhead
endgate
} def


%%EndSetup

%%Page: 8400x020.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 32.00 2.00 gridspace
0.7500 inchscale
2.6000 setlinewidth 864 576 translate

0.800 0.800 0.800 scb
1 1.000 -480 384 -480 -256 2 polygon
1 1.000 -448 384 -448 -256 2 polygon
1 1.000 -416 384 -416 -256 2 polygon
1 1.000 -384 384 -384 -256 2 polygon
1 1.000 -352 384 -352 -256 2 polygon
1 1.000 -320 384 -320 -256 2 polygon
1 1.000 -288 384 -288 -256 2 polygon
1 1.000 -256 384 -256 -256 2 polygon
1 1.000 -224 384 -224 -256 2 polygon
1 1.000 -192 384 -192 -256 2 polygon
1 1.000 -160 384 -160 -256 2 polygon
1 1.000 -128 384 -128 -256 2 polygon
1 1.000 -96 384 -96 -256 2 polygon
1 1.000 -64 384 -64 -256 2 polygon
1 1.000 -32 384 -32 -256 2 polygon
1 1.000 0 384 0 -256 2 polygon
1 1.000 32 384 32 -256 2 polygon
1 1.000 64 384 64 -256 2 polygon
1 1.000 96 384 96 -256 2 polygon
1 1.000 128 384 128 -256 2 polygon
1 1.000 160 384 160 -256 2 polygon
1 1.000 192 384 192 -256 2 polygon
1 1.000 224 384 224 -256 2 polygon
1 1.000 256 384 256 -256 2 polygon
1 1.000 288 384 288 -256 2 polygon
1 1.000 320 384 320 -256 2 polygon
1 1.000 352 384 352 -256 2 polygon
1 1.000 384 384 384 -256 2 polygon
1 1.000 416 384 416 -256 2 polygon
1 1.000 448 384 448 -256 2 polygon
1 1.000 480 384 480 -256 2 polygon
1 1.000 512 384 512 -256 2 polygon
1 1.000 544 384 544 -256 2 polygon
1 1.000 576 384 576 -256 2 polygon
1 1.000 -512 384 576 384 2 polygon
1 1.000 -512 352 576 352 2 polygon
1 1.000 -512 320 576 320 2 polygon
1 1.000 -512 288 576 288 2 polygon
1 1.000 -512 256 576 256 2 polygon
1 1.000 -512 224 576 224 2 polygon
1 1.000 -512 192 576 192 2 polygon
1 1.000 -512 160 576 160 2 polygon
1 1.000 -512 128 576 128 2 polygon
1 1.000 -512 96 576 96 2 polygon
1 1.000 -512 64 576 64 2 polygon
1 1.000 -512 32 576 32 2 polygon
1 1.000 -512 0 576 0 2 polygon
1 1.000 -512 -32 576 -32 2 polygon
1 1.000 -512 -64 576 -64 2 polygon
1 1.000 -512 -96 576 -96 2 polygon
1 1.000 -512 -128 576 -128 2 polygon
1 1.000 -512 -160 576 -160 2 polygon
1 1.000 -512 -192 576 -192 2 polygon
1 1.000 -512 -224 576 -224 2 polygon
sce
1 1.000 -512 384 -512 -256 576 -256 3 polygon
(Time) {/Helvetica cf} 2 16 0 1.000 -64 -320 label
1.000 90 80 -304 ::arrow
(0) {/Times-Roman cf} 2 16 0 0.500 -536 -264 label
(5) {/Times-Roman cf} 2 16 0 0.500 -536 -232 label
(10) {/Times-Roman cf} 2 16 0 0.500 -544 -200 label
(15) {/Times-Roman cf} 2 16 0 0.500 -544 -168 label
(20) {/Times-Roman cf} 2 16 0 0.500 -544 -136 label
(25) {/Times-Roman cf} 2 16 0 0.500 -544 -104 label
(30) {/Times-Roman cf} 2 16 0 0.500 -544 -72 label
(35) {/Times-Roman cf} 2 16 0 0.500 -544 -40 label
(40) {/Times-Roman cf} 2 16 0 0.500 -544 -8 label
(45) {/Times-Roman cf} 2 16 0 0.500 -544 24 label
(50) {/Times-Roman cf} 2 16 0 0.500 -544 56 label
(55) {/Times-Roman cf} 2 16 0 0.500 -544 88 label
(60) {/Times-Roman cf} 2 16 0 0.500 -544 120 label
(65) {/Times-Roman cf} 2 16 0 0.500 -544 152 label
(70) {/Times-Roman cf} 2 16 0 0.500 -544 184 label
(75) {/Times-Roman cf} 2 16 0 0.500 -544 216 label
(80) {/Times-Roman cf} 2 16 0 0.500 -544 248 label
(85) {/Times-Roman cf} 2 16 0 0.500 -544 280 label
(90) {/Times-Roman cf} 2 16 0 0.500 -544 312 label
(95) {/Times-Roman cf} 2 16 0 0.500 -544 344 label
(100) {/Times-Roman cf} 2 16 0 0.500 -552 376 label
(%) {/Times-Roman cf} 2 16 0 1.000 -608 64 label
1.000 0.000 0.000 scb
(SP) {/Helvetica cf} 2 16 0 1.000 -196 212 label
0.000 0.000 1.000 scb
(PV) {/Helvetica cf} 2 16 0 1.000 52 240 label
1.000 0.000 0.000 scb
1 1.000 -512 64 -144 64 -144 208 576 208 4 polygon
0.000 0.000 1.000 scb
1 1.000 -512 66 -506 62 -504 62 -496 62 -494 62 -488 62 -484 62 -476 60 -468 60 
-464 60 -458 62 -452 64 -448 66 -436 66 -430 66 -420 62 -408 58 -400 62 -392 62 
-388 64 -384 66 -376 66 -364 62 -352 62 -344 62 -340 62 -328 60 -318 62 -316 64 
-312 64 -300 66 -288 66 -284 66 -276 64 -268 62 -256 60 -250 60 -240 62 -232 64 
-222 66 -210 64 -204 62 -194 60 -190 60 -184 62 -180 62 -176 64 -168 64 -156 60 
-150 62 -148 62 -142 62 -138 64 -136 64 -130 64 -126 64 -122 64 -116 66 -112 66 
-108 68 -104 70 -92 78 -82 86 -76 88 -62 98 -54 106 -44 114 -38 120 -16 152 -8 
162 0 174 4 180 12 190 14 194 20 200 28 208 32 210 42 216 48 218 52 222 64 222 
78 224 82 224 96 224 102 220 110 218 120 214 124 212 132 210 138 206 148 202 
154 200 172 194 178 194 182 194 186 194 196 192 200 190 220 190 224 190 232 190 
236 192 250 194 266 196 272 196 282 198 292 198 302 198 304 198 318 196 320 196 
324 196 330 194 338 194 348 194 352 194 362 192 374 190 392 190 394 190 408 190 
420 192 432 192 440 192 444 194 452 194 456 194 464 194 480 194 482 194 484 194 
492 194 500 194 508 194 512 192 524 192 528 192 544 192 546 192 552 192 562 194 
568 194 576 194 143 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
