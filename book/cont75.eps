%!PS-Adobe-3.0 EPSF-3.0
%%Title: cont75.eps
%%Creator: XCircuit v3.6 rev164
%%CreationDate: Sun Jan  2 10:23:23 2011
%%Pages: 1
%%BoundingBox: 68 68 484 293
%%DocumentNeededResources: font Helvetica Helvetica-Oblique Times-Roman Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.3
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--7/13/05  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.3 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate
	0 0 moveto neg rotate dup scale cvx exec image grestore } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/liec_exp::motor_large {
begingate
0.604 0.604 0.604 scb
240 1.000 -376 216 -376 -168 264 -168 264 216 4 polygon
0.800 0.800 0.800 scb
240 1.000 -56 184 -56 -8 200 -8 200 184 4 polygon
sce
0 1.000 -56 184 -56 -8 200 -8 200 184 4 polygon
0.400 0.400 0.400 scb
240 1.000 312 56 312 -8 456 -8 456 56 4 polygon
0.604 0.604 0.604 scb
241 1.000 360 184 360 -136 264 -168 264 216 spline
sce
1 1.000 360 184 360 -136 264 -168 264 216 spline
1 1.000 -376 216 264 216 2 polygon
1 1.000 -376 -168 264 -168 2 polygon
1 1.000 264 216 264 -168 2 polygon
1 1.000 -376 216 -376 -168 2 polygon
1 1.000 336 56 456 56 456 -8 336 -8 4 polygon
1 1.000 456 24 424 24 424 16 456 16 4 polygon
0.604 0.604 0.604 scb
241 1.000 -312 -168 -312 -216 -328 -232 -248 -232 -264 -216 -264 -168 -312 -168 
7 polygon
sce
1 1.000 -312 -168 -312 -216 -328 -232 -248 -232 -264 -216 -264 -168 -312 -168 
7 polygon
0.604 0.604 0.604 scb
241 1.000 152 -168 152 -216 136 -232 216 -232 200 -216 200 -168 152 -168 
7 polygon
sce
1 1.000 152 -168 152 -216 136 -232 216 -232 200 -216 200 -168 152 -168 
7 polygon
0.604 0.604 0.604 scb
240 1.000 -376 232 -376 -184 -456 -184 -456 232 4 polygon
sce
0 1.000 -376 232 -376 -184 -456 -184 -456 232 4 polygon
0.400 0.400 0.400 scb
1 1.000 -360 200 248 200 2 polygon
1 1.000 -360 -24 248 -24 2 polygon
1 1.000 -360 -56 248 -56 2 polygon
1 1.000 -360 -88 248 -88 2 polygon
1 1.000 -360 -120 248 -120 2 polygon
1 1.000 -360 -152 248 -152 2 polygon
1 1.000 -360 8 -72 8 2 polygon
1 1.000 -360 40 -72 40 2 polygon
1 1.000 -360 72 -72 72 2 polygon
1 1.000 -360 104 -72 104 2 polygon
1 1.000 -360 136 -72 136 2 polygon
1 1.000 -360 168 -72 168 2 polygon
1 1.000 216 168 248 168 2 polygon
1 1.000 216 136 248 136 2 polygon
1 1.000 216 104 248 104 2 polygon
1 1.000 216 72 248 72 2 polygon
1 1.000 216 40 248 40 2 polygon
1 1.000 216 8 248 8 2 polygon
endgate
} def

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/generic::arrow {
% nonetwork
begingate
1 0.800 0 -40 0 20 2 polygon
1.000 0 0 40 generic::arrowhead
endgate
} def

/analog::opamp {
begingate
0 1.000 -80 -80 -80 80 80 0 3 polygon
(-) {/Symbol cf} 2 5 0 1.000 -61 42 label
(+) {/Symbol cf} 2 5 0 1.000 -61 -50 label
1.000 0.000 0.000 scb
(in.m) {/Times-Roman cf} 2 7 0 1.000 -80 48 pinlabel
(in.p) {/Times-Roman cf} 2 7 0 1.000 -80 -48 pinlabel
(out) {/Times-Roman cf} 2 4 0 1.000 80 0 pinlabel
endgate
} def


%%EndSetup

%%Page: cont75 1
%%PageOrientation: Portrait
/pgsave save def bop
% 32.00 8.00 gridspace
0.7500 inchscale
2.6000 setlinewidth 1248 880 translate

0.250 0 112 -16 liec_exp::motor_large
(Electric motor) {/Helvetica cf} 2 16 0 0.750 0 56 label
0.800 0.800 0.800 scb
496 1.000 208 16 208 -32 304 -32 304 16 4 polygon
sce
0 1.000 208 16 208 -32 304 -32 304 16 4 polygon
1 1.000 192 -448 288 -288 2 polygon
1 1.000 384 -448 288 -288 2 polygon
0.824 0.706 0.549 scb
496 1.000 192 -448 192 -464 384 -464 384 -448 4 polygon
sce
0 1.000 192 -448 192 -464 384 -464 384 -448 4 polygon
1 1.000 288 -256 288 16 2 polygon
1 1.000 284 16 284 -32 2 polygon
1 1.000 280 16 280 -32 2 polygon
1 1.000 276 16 276 -32 2 polygon
1 1.000 272 16 272 -32 2 polygon
1 1.000 268 16 268 -32 2 polygon
1 1.000 264 16 264 -32 2 polygon
1 1.000 260 16 260 -32 2 polygon
1 1.000 256 16 256 -32 2 polygon
1 1.000 252 16 252 -32 2 polygon
1 1.000 248 16 248 -32 2 polygon
1 1.000 244 16 244 -32 2 polygon
1 1.000 240 16 240 -32 2 polygon
1 1.000 236 16 236 -32 2 polygon
1 1.000 232 16 232 -32 2 polygon
1 1.000 228 16 228 -32 2 polygon
1 1.000 224 16 224 -32 2 polygon
1 1.000 220 16 220 -32 2 polygon
1 1.000 216 16 216 -32 2 polygon
1 1.000 -12 -74 196 -74 2 polygon
1 1.000 178 -76 170 -92 2 polygon
1 1.000 162 -76 154 -92 2 polygon
1 1.000 146 -76 138 -92 2 polygon
1 1.000 130 -76 122 -92 2 polygon
1 1.000 114 -76 106 -92 2 polygon
1 1.000 98 -76 90 -92 2 polygon
1 1.000 82 -76 74 -92 2 polygon
1 1.000 66 -76 58 -92 2 polygon
1 1.000 50 -76 42 -92 2 polygon
1 1.000 34 -76 26 -92 2 polygon
1 1.000 18 -76 10 -92 2 polygon
1 1.000 2 -76 -6 -92 2 polygon
(Elevator platform) {/Helvetica cf} 2 16 0 1.000 144 -512 label
0.647 0.165 0.165 scb
(Winch drum) {/Helvetica cf} 2 16 0 0.700 116 -136 label
0.604 0.604 0.604 scb
496 1.000 320 8 320 -24 368 -24 368 8 4 polygon
sce
0 1.000 320 8 320 -24 368 -24 368 8 4 polygon
0.400 0.400 0.400 scb
496 1.000 304 -4 304 -12 320 -12 320 -4 4 polygon
sce
0 1.000 304 -4 304 -12 320 -12 320 -4 4 polygon
0.000 0.000 1.000 scb
1.000 150 328 48 generic::arrow
(Tachogenerator) {/Helvetica cf} 2 16 0 0.500 216 120 label
0.824 0.706 0.549 scb
496 1.000 -320 64 -320 -80 -160 -80 -160 64 4 polygon
sce
0 1.000 -320 64 -320 -80 -160 -80 -160 64 4 polygon
-0.500 180 -232 -8 analog::opamp
1 1.000 -80 16 -80 -32 -96 -32 -96 16 spline
1 1.000 -112 16 -112 -32 -96 -32 -96 16 spline
3 1.000 -96 -32 -96 -128 -352 -128 -352 -32 -272 -32 5 polygon
0.000 0.000 1.000 scb
(Current feedback) {/Helvetica-Oblique cf} 2 16 0 0.700 -320 -160 label
1.000 0.000 0.000 scb
(PID) {/Helvetica cf} 2 16 0 0.500 -256 -16 label
0.824 0.706 0.549 scb
496 1.000 -576 64 -576 -80 -416 -80 -416 64 4 polygon
sce
0 1.000 -576 64 -576 -80 -416 -80 -416 64 4 polygon
-0.500 180 -488 -8 analog::opamp
1 1.000 408 -608 400 -624 2 polygon
1 1.000 392 -608 384 -624 2 polygon
1 1.000 376 -608 368 -624 2 polygon
1 1.000 360 -608 352 -624 2 polygon
1 1.000 344 -608 336 -624 2 polygon
1 1.000 328 -608 320 -624 2 polygon
1 1.000 312 -608 304 -624 2 polygon
1 1.000 296 -608 288 -624 2 polygon
1 1.000 280 -608 272 -624 2 polygon
1 1.000 264 -608 256 -624 2 polygon
1 1.000 248 -608 240 -624 2 polygon
1 1.000 232 -608 224 -624 2 polygon
1 1.000 216 -608 208 -624 2 polygon
1 1.000 200 -608 192 -624 2 polygon
1 1.000 184 -608 176 -624 2 polygon
1 1.000 168 -608 160 -624 2 polygon
0.824 0.706 0.549 scb
496 1.000 272 -544 272 -608 304 -608 304 -544 4 polygon
sce
0 1.000 272 -544 272 -608 304 -608 304 -544 4 polygon
0.000 0.000 1.000 scb
(Position sensor) {/Helvetica cf} 2 16 0 0.500 320 -584 label
(Velocity feedback) {/Helvetica-Oblique cf} 2 16 0 0.700 -320 -256 label
0.824 0.706 0.549 scb
496 1.000 -832 64 -832 -80 -672 -80 -672 64 4 polygon
sce
0 1.000 -832 64 -832 -80 -672 -80 -672 64 4 polygon
-0.500 180 -744 -8 analog::opamp
1 1.000 288 -256 288 -288 2 polygon
0.000 0.000 1.000 scb
(Position feedback) {/Helvetica-Oblique cf} 2 16 0 0.700 -312 -608 label
sce
3 1.000 -896 16 -784 16 2 polygon
(Position) {/Helvetica cf} 2 16 0 0.500 -984 32 label
(command) {/Helvetica cf} 2 16 0 0.500 -992 8 label
(signal) {/Helvetica cf} 2 16 0 0.500 -976 -16 label
5 1.000 288 -536 288 -464 2 polygon
3 1.000 -192 -8 -4 -8 2 polygon
1.000 0.000 0.000 scb
(PI) {/Helvetica cf} 2 16 0 0.500 -504 -16 label
(PI) {/Helvetica cf} 2 16 0 0.500 -760 -16 label
sce
3 1.000 -448 -8 -368 -8 -368 16 -272 16 4 polygon
3 1.000 -704 -8 -624 -8 -624 16 -528 16 4 polygon
3 1.000 344 -24 344 -224 -624 -224 -624 -32 -528 -32 5 polygon
3 1.000 272 -576 -880 -576 -880 -32 -784 -32 4 polygon
0.647 0.165 0.165 scb
1.000 30 240 -72 generic::arrow
0.000 0.000 1.000 scb
(\(velocity sensor\)) {/Helvetica cf} 2 16 0 0.500 216 96 label
sce
1 1.000 416 -608 160 -608 2 polygon
(controller) {/Helvetica cf} 2 16 0 0.750 -304 80 label
(Power) {/Helvetica cf} 2 16 0 0.750 -288 112 label
(controller) {/Helvetica cf} 2 16 0 0.750 -560 80 label
(controller) {/Helvetica cf} 2 16 0 0.750 -816 80 label
(Position) {/Helvetica cf} 2 16 0 0.750 -808 112 label
(Velocity) {/Helvetica cf} 2 16 0 0.750 -552 112 label
0.000 0.000 1.000 scb
1.000 195 -80 64 generic::arrow
(Hall effect device) {/Helvetica cf} 2 16 0 0.500 -128 136 label
(\(current sensor\)) {/Helvetica cf} 2 16 0 0.500 -120 112 label
sce
1.000 270 -352 -128 generic::arrowhead
1.000 270 -352 -224 generic::arrowhead
1.000 270 -352 -576 generic::arrowhead
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
