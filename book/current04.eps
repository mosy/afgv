%!PS-Adobe-3.0 EPSF-3.0
%%Title: current04.eps
%%Creator: XCircuit v3.7 rev55
%%CreationDate: Thu Sep 25 06:46:45 2014
%%Pages: 1
%%BoundingBox: 68 68 496 279
%%DocumentNeededResources: font Helvetica Helvetica-Bold Helvetica-BoldOblique 
%%+ font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def

/analog::resistor {
begingate
1 1.000 0 64 0 36 2 polygon
1 1.000 0 -64 0 -36 2 polygon
1 1.000 0 -36 14 -30 -14 -18 14 -6 -14 6 14 18 -14 30 0 36 8 polygon
1.000 0.000 0.000 scb
(r.1) {/Times-Roman cf} 2 9 0 1.000 0 64 pinlabel
(r.2) {/Times-Roman cf} 2 13 0 1.000 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:R%i %pr.1 %pr.2 1.0K) {/Times-Roman cf} 2 0 0 1.000 -208 -160 infolabel
(sim:r %pr.1 %pr.2) {/Times-Roman cf} 2 0 0 1.000 -208 -208 infolabel
endgate
} def

/generic::arrow {
% nonetwork
begingate
1 0.800 0 -40 0 20 2 polygon
1.000 0 0 40 generic::arrowhead
endgate
} def


%%EndSetup

%%Page: current03 1
%%PageOrientation: Portrait
/pgsave save def bop
0.7500 inchscale
2.6000 setlinewidth 1000 416 translate

0.824 0.706 0.549 scb
240 1.000 -112 160 -112 -64 128 -64 128 160 4 polygon
sce
0 1.000 -112 160 -112 -64 128 -64 128 160 4 polygon
0.604 0.604 0.604 scb
241 1.000 104 48 16 0.000 360.000 xcarc
sce
1 1.000 104 48 16 0.000 360.000 xcarc
1 1.000 112 60 92 40 2 polygon
1 1.000 116 56 96 36 2 polygon
0.604 0.604 0.604 scb
241 1.000 104 -32 16 0.000 360.000 xcarc
sce
1 1.000 104 -32 16 0.000 360.000 xcarc
1 1.000 112 -20 92 -40 2 polygon
1 1.000 116 -24 96 -44 2 polygon
0.604 0.604 0.604 scb
241 1.000 -88 48 16 0.000 360.000 xcarc
sce
1 1.000 -88 48 16 0.000 360.000 xcarc
1 1.000 -80 60 -100 40 2 polygon
1 1.000 -76 56 -96 36 2 polygon
0.604 0.604 0.604 scb
241 1.000 -88 -32 16 0.000 360.000 xcarc
sce
1 1.000 -88 -32 16 0.000 360.000 xcarc
1 1.000 -80 -20 -100 -40 2 polygon
1 1.000 -76 -24 -96 -44 2 polygon
0.604 0.604 0.604 scb
241 1.000 -48 128 16 0.000 360.000 xcarc
sce
1 1.000 -48 128 16 0.000 360.000 xcarc
1 1.000 -40 140 -60 120 2 polygon
1 1.000 -36 136 -56 116 2 polygon
0.604 0.604 0.604 scb
241 1.000 0 128 16 0.000 360.000 xcarc
sce
1 1.000 0 128 16 0.000 360.000 xcarc
1 1.000 8 140 -12 120 2 polygon
1 1.000 12 136 -8 116 2 polygon
0.604 0.604 0.604 scb
241 1.000 48 128 16 0.000 360.000 xcarc
sce
1 1.000 48 128 16 0.000 360.000 xcarc
1 1.000 56 140 36 120 2 polygon
1 1.000 60 136 40 116 2 polygon
1 2.000 -48 144 -48 272 2 polygon
1 2.000 0 144 0 272 2 polygon
1 2.000 48 144 48 272 2 polygon
(To source of) {/Helvetica cf} 2 16 0 1.000 -112 352 label
(3-phase AC power) {/Helvetica cf} 2 16 0 1.000 -160 304 label
1 2.000 120 48 448 48 2 polygon
1 2.000 120 -32 464 -32 2 polygon
0.604 0.604 0.604 scb
241 1.000 592 32 160 0.000 360.000 xcarc
sce
1 1.000 592 32 160 0.000 360.000 xcarc
0.604 0.604 0.604 scb
241 1.000 496 -96 432 -160 752 -160 688 -96 496 -96 5 polygon
sce
1 1.000 496 -96 432 -160 752 -160 688 -96 496 -96 5 polygon
241 1.000 592 32 16 0.000 360.000 xcarc
0.604 0.604 0.604 scb
1 1.000 -384 64 -144 64 2 polygon
sce
(Motor) {/Helvetica cf} 2 16 0 1.000 -20 12 label
(drive) {/Helvetica cf} 2 16 0 1.000 -16 -24 label
(Input) {/Helvetica-Bold cf} 2 16 0 0.700 -100 72 label
(Output) {/Helvetica-Bold cf} 2 16 0 0.700 32 72 label
0.824 0.706 0.549 scb
496 1.000 -728 512 -728 -160 -408 -160 -408 512 4 polygon
sce
0 1.000 -728 512 -728 -160 -408 -160 -408 512 4 polygon
(Controller) {/Helvetica cf} 2 16 0 1.000 -664 536 label
0.750 /sv 0 -520 40 generic::arrowhead
1 1.000 -520 24 -520 0 2 polygon
1 1.000 -488 16 -520 64 -552 16 3 polygon
1 1.000 -488 16 -520 -32 -552 16 3 polygon
1 1.000 -520 64 -520 112 -440 112 -440 64 4 polygon
1 1.000 -520 -32 -520 -80 -440 -80 -440 -32 4 polygon
(Dependent) {/Helvetica cf} 2 16 0 0.750 -696 40 label
(current) {/Helvetica cf} 2 16 0 0.750 -672 8 label
(source) {/Helvetica cf} 2 16 0 0.750 -672 -24 label
0.361 0.675 0.933 scb
496 1.000 -696 208 -696 144 -632 144 -632 208 4 polygon
sce
0 1.000 -696 208 -696 144 -632 144 -632 208 4 polygon
(M) {ss} (/) {ns} (A) {Ss} {/Helvetica cf} 7 16 0 1.000 -692 164 label
(PV) {/Helvetica cf} 2 16 0 1.000 -472 432 label
(SP) {/Helvetica cf} 2 16 0 1.000 -472 320 label
0 3.000 -696 480 -696 416 -664 416 -664 480 4 polygon
1 3.000 -696 448 -664 448 2 polygon
0 3.000 -648 480 -648 416 -616 416 -616 480 4 polygon
1 3.000 -648 448 -616 448 2 polygon
0 3.000 -600 480 -600 416 -568 416 -568 480 4 polygon
1 3.000 -600 448 -568 448 2 polygon
0 3.000 -536 480 -536 416 -504 416 -504 480 4 polygon
1 3.000 -536 448 -504 448 2 polygon
1.000 0 -552 416 generic::dot
0 1.000 -712 496 -712 400 -488 400 -488 496 4 polygon
0 3.000 -696 368 -696 304 -664 304 -664 368 4 polygon
1 3.000 -696 336 -664 336 2 polygon
0 3.000 -648 368 -648 304 -616 304 -616 368 4 polygon
1 3.000 -648 336 -616 336 2 polygon
0 3.000 -600 368 -600 304 -568 304 -568 368 4 polygon
1 3.000 -600 336 -568 336 2 polygon
0 3.000 -536 368 -536 304 -504 304 -504 368 4 polygon
1 3.000 -536 336 -504 336 2 polygon
1.000 0 -552 304 generic::dot
0 1.000 -712 384 -712 288 -488 288 -488 384 4 polygon
0.000 0.000 1.000 scb
496 1.000 -712 272 -712 240 -584 240 -584 272 4 polygon
sce
(Out) {/Helvetica cf} 2 16 0 0.800 -472 248 label
0 1.000 -712 272 -712 240 -488 240 -488 272 4 polygon
0.361 0.675 0.933 scb
496 1.000 -592 208 -592 144 -528 144 -528 208 4 polygon
0.180 0.545 0.341 scb
497 1.000 -536 168 -536 184 -552 184 -552 200 -584 176 -552 152 -552 168 -536 
168 8 polygon
sce
0 1.000 -592 208 -592 144 -528 144 -528 208 4 polygon
0.361 0.675 0.933 scb
496 1.000 -440 208 -440 144 -504 144 -504 208 4 polygon
0.180 0.545 0.341 scb
497 1.000 -496 168 -496 184 -480 184 -480 200 -448 176 -480 152 -480 168 -496 
168 8 polygon
sce
0 1.000 -440 208 -440 144 -504 144 -504 208 4 polygon
0.604 0.604 0.604 scb
1 1.000 -368 64 -368 -48 -384 -48 -384 64 spline
1 1.000 -400 64 -400 -48 -384 -48 -384 64 spline
1 1.000 -128 64 -128 -48 -144 -48 -144 64 spline
1 1.000 -160 64 -160 -48 -144 -48 -144 64 spline
1 1.000 -384 -48 -144 -48 2 polygon
241 1.000 -440 -32 16 0.000 360.000 xcarc
sce
1 1.000 -440 -32 16 0.000 360.000 xcarc
1 1.000 -432 -20 -452 -40 2 polygon
1 1.000 -428 -24 -448 -44 2 polygon
0.604 0.604 0.604 scb
241 1.000 -440 48 16 0.000 360.000 xcarc
sce
1 1.000 -440 48 16 0.000 360.000 xcarc
1 1.000 -432 60 -452 40 2 polygon
1 1.000 -428 56 -448 36 2 polygon
0.500 /sv 0 -48 8 analog::resistor
1 1.000 -72 48 -48 48 -48 40 3 polygon
1 1.000 -72 -32 -48 -32 -48 -24 3 polygon
(DC motor) {/Helvetica cf} 2 16 0 1.000 504 96 label
1 1.000 -88 24 -88 8 2 polygon
1 1.000 -96 16 -80 16 2 polygon
1 1.000 -472 56 -472 40 2 polygon
1 1.000 -480 48 -464 48 2 polygon
1 1.000 -480 -32 -464 -32 2 polygon
1 1.000 -96 -8 -80 -8 2 polygon
1.000 0.000 0.000 scb
(Acts as an electrical source) {/Helvetica-BoldOblique cf} 2 16 0 0.750 -744 
-112 label
(Acts as an electrical load) {/Helvetica-BoldOblique cf} 2 16 0 0.750 -152 -104 
label
1.000 30 -560 -56 generic::arrow
1.000 330 -16 -48 generic::arrow
sce
(2-wire cable) {/Helvetica cf} 2 16 0 0.700 -336 0 label
1 1.000 -424 48 -104 48 2 polygon
1 1.000 -424 -32 -104 -32 2 polygon
(Output) {/Helvetica cf} 2 16 0 0.500 -480 0 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
