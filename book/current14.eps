%!PS-Adobe-3.0 EPSF-3.0
%%Title: current14.eps
%%Creator: XCircuit v3.7 rev55
%%CreationDate: Thu Sep 25 07:00:06 2014
%%Pages: 1
%%BoundingBox: 68 68 490 288
%%DocumentNeededResources: font Helvetica Helvetica-BoldOblique Times-Roman 
%%+ font Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/generic::arrow {
% nonetwork
begingate
1 0.800 0 -40 0 20 2 polygon
1.000 0 0 40 generic::arrowhead
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def

/analog::resistor {
begingate
1 1.000 0 64 0 36 2 polygon
1 1.000 0 -64 0 -36 2 polygon
1 1.000 0 -36 14 -30 -14 -18 14 -6 -14 6 14 18 -14 30 0 36 8 polygon
1.000 0.000 0.000 scb
(r.1) {/Times-Roman cf} 2 9 0 1.000 0 64 pinlabel
(r.2) {/Times-Roman cf} 2 13 0 1.000 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:R%i %pr.1 %pr.2 1.0K) {/Times-Roman cf} 2 0 0 1.000 -208 -160 infolabel
(sim:r %pr.1 %pr.2) {/Times-Roman cf} 2 0 0 1.000 -208 -208 infolabel
endgate
} def

/::battery {
begingate
1 1.000 -32 32 32 32 2 polygon
1 1.000 0 64 0 32 2 polygon
1 1.000 -16 12 16 12 2 polygon
1 1.000 -16 -28 16 -28 2 polygon
1 1.000 -32 -8 32 -8 2 polygon
1 1.000 0 -64 0 -28 2 polygon
1.000 0.000 0.000 scb
(b.p) {/Times-Roman cf} 2 9 0 1.000 0 64 pinlabel
(b.m) {/Times-Roman cf} 2 13 0 1.000 0 -64 pinlabel
endgate
} def

/::meter_movement {
begingate
256 1.000 -52 44 -52 -32 36 -32 36 44 4 polygon
1 1.000 -24 36 8 36 32 16 -48 16 spline
1 1.000 -8 0 -32 32 2 polygon
1.000 0 -32 -16 generic::dot
1 1.000 -32 -16 -32 -48 2 polygon
1.000 0 16 -16 generic::dot
1 1.000 16 -16 16 -48 2 polygon
endgate
} def


%%EndSetup

%%Page: current03.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
0.7500 inchscale
2.6000 setlinewidth 1344 368 translate

1.000 0.000 0.000 scb
1.000 45 -56 -56 generic::arrow
0.824 0.706 0.549 scb
496 1.000 0 592 0 -80 320 -80 320 592 4 polygon
sce
0 1.000 0 592 0 -80 320 -80 320 592 4 polygon
0.604 0.604 0.604 scb
497 1.000 32 32 16 0.000 360.000 xcarc
sce
1 1.000 32 32 16 0.000 360.000 xcarc
1 1.000 40 44 18 28 2 polygon
1 1.000 22 20 46 36 2 polygon
0.604 0.604 0.604 scb
497 1.000 32 -32 16 0.000 360.000 xcarc
sce
1 1.000 32 -32 16 0.000 360.000 xcarc
1 1.000 40 -20 18 -36 2 polygon
1 1.000 22 -44 46 -28 2 polygon
(Controller) {/Helvetica cf} 2 16 0 1.000 64 616 label
0.361 0.675 0.933 scb
496 1.000 32 288 32 224 96 224 96 288 4 polygon
sce
0 1.000 32 288 32 224 96 224 96 288 4 polygon
(M) {ss} (/) {ns} (A) {Ss} {/Helvetica cf} 7 16 0 1.000 36 244 label
(PV) {/Helvetica cf} 2 16 0 1.000 256 512 label
(SP) {/Helvetica cf} 2 16 0 1.000 256 400 label
0 3.000 32 560 32 496 64 496 64 560 4 polygon
1 3.000 32 528 64 528 2 polygon
0 3.000 80 560 80 496 112 496 112 560 4 polygon
1 3.000 80 528 112 528 2 polygon
0 3.000 128 560 128 496 160 496 160 560 4 polygon
1 3.000 128 528 160 528 2 polygon
0 3.000 192 560 192 496 224 496 224 560 4 polygon
1 3.000 192 528 224 528 2 polygon
1.000 0 176 496 generic::dot
0 1.000 16 576 16 480 240 480 240 576 4 polygon
0 3.000 32 448 32 384 64 384 64 448 4 polygon
1 3.000 32 416 64 416 2 polygon
0 3.000 80 448 80 384 112 384 112 448 4 polygon
1 3.000 80 416 112 416 2 polygon
0 3.000 128 448 128 384 160 384 160 448 4 polygon
1 3.000 128 416 160 416 2 polygon
0 3.000 192 448 192 384 224 384 224 448 4 polygon
1 3.000 192 416 224 416 2 polygon
1.000 0 176 384 generic::dot
0 1.000 16 464 16 368 240 368 240 464 4 polygon
0.000 0.000 1.000 scb
496 1.000 16 352 16 320 144 320 144 352 4 polygon
sce
(Out) {/Helvetica cf} 2 16 0 0.800 256 328 label
0 1.000 16 352 16 320 240 320 240 352 4 polygon
0.361 0.675 0.933 scb
496 1.000 136 288 136 224 200 224 200 288 4 polygon
0.180 0.545 0.341 scb
497 1.000 192 248 192 264 176 264 176 280 144 256 176 232 176 248 192 248 8 
polygon
sce
0 1.000 136 288 136 224 200 224 200 288 4 polygon
0.361 0.675 0.933 scb
496 1.000 288 288 288 224 224 224 224 288 4 polygon
0.180 0.545 0.341 scb
497 1.000 232 248 232 264 248 264 248 280 280 256 248 232 248 248 232 248 8 
polygon
sce
0 1.000 288 288 288 224 224 224 224 288 4 polygon
1 1.000 16 68 16 52 2 polygon
1 1.000 8 60 24 60 2 polygon
1 1.000 8 -56 24 -56 2 polygon
0.500 /sv 0 -16 0 analog::resistor
1 1.000 -16 32 16 32 2 polygon
1 1.000 -16 -32 16 -32 2 polygon
0.824 0.706 0.549 scb
497 1.000 -864 96 128 0.000 360.000 xcarc
sce
1 1.000 -864 96 128 0.000 360.000 xcarc
0.604 0.604 0.604 scb
497 1.000 -800 144 16 0.000 360.000 xcarc
sce
1 1.000 -800 144 16 0.000 360.000 xcarc
1 1.000 -792 156 -814 140 2 polygon
1 1.000 -810 132 -786 148 2 polygon
0.604 0.604 0.604 scb
497 1.000 -800 48 16 0.000 360.000 xcarc
sce
1 1.000 -800 48 16 0.000 360.000 xcarc
1 1.000 -792 60 -814 44 2 polygon
1 1.000 -810 36 -786 52 2 polygon
-0.750 /sv 180 -864 80 generic::arrowhead
1 1.000 -864 96 -864 112 2 polygon
1 1.000 -896 96 -864 144 -832 96 -864 48 -896 96 5 polygon
1 1.000 -864 144 -864 192 -800 192 -800 160 4 polygon
1 1.000 -864 48 -864 0 -800 0 -800 32 4 polygon
1.000 270 160 96 ::battery
0.545 0.353 0.169 scb
496 1.000 80 48 80 -48 256 -48 256 48 4 polygon
sce
(Voltage-sensing) {/Helvetica cf} 2 16 0 0.500 96 16 label
(analog-to-digital) {/Helvetica cf} 2 16 0 0.500 96 -8 label
(converter) {/Helvetica cf} 2 16 0 0.500 128 -32 label
0 1.000 80 48 80 -48 256 -48 256 48 4 polygon
1 1.000 48 32 80 32 2 polygon
1 1.000 48 -32 80 -32 2 polygon
1 1.000 -832 152 -832 136 2 polygon
1 1.000 -840 144 -824 144 2 polygon
1 1.000 -840 48 -824 48 2 polygon
(2-wire cable) {/Helvetica cf} 2 16 0 1.000 -416 80 label
(2-wire transmitter) {/Helvetica cf} 2 16 0 1.000 -1040 240 label
0.400 0.400 0.400 scb
1 1.000 -496 160 -496 32 -512 32 -512 160 spline
1 1.000 -528 160 -528 32 -512 32 -512 160 spline
1 1.000 -80 160 -80 32 -96 32 -96 160 spline
1 1.000 -112 160 -112 32 -96 32 -96 160 spline
0.604 0.604 0.604 scb
497 1.000 32 96 16 0.000 360.000 xcarc
sce
1 1.000 32 96 16 0.000 360.000 xcarc
1 1.000 40 108 18 92 2 polygon
1 1.000 22 84 46 100 2 polygon
1 1.000 48 96 96 96 2 polygon
1.000 0 64 -32 generic::dot
1 1.000 64 -32 64 -64 288 -64 288 96 224 96 5 polygon
1 1.000 16 96 -64 144 -128 144 3 polygon
1 1.000 -128 144 -544 144 2 polygon
(+V) {/Helvetica cf} 2 16 0 0.750 8 120 label
(W) {/Symbol cf} (250 ) {/Helvetica cf} 4 16 0 0.700 -112 -8 label
(20 VDC) {/Helvetica cf} 2 16 0 0.700 100 144 label
0.824 0.706 0.549 scb
496 1.000 -688 464 -688 272 -496 272 -496 464 4 polygon
sce
0 1.000 -688 464 -688 272 -496 272 -496 464 4 polygon
0.604 0.604 0.604 scb
497 1.000 -544 304 16 0.000 360.000 xcarc
sce
1 1.000 -544 304 16 0.000 360.000 xcarc
1 1.000 -536 316 -558 300 2 polygon
1 1.000 -554 292 -530 308 2 polygon
0.604 0.604 0.604 scb
497 1.000 -640 304 16 0.000 360.000 xcarc
sce
1 1.000 -640 304 16 0.000 360.000 xcarc
1 1.000 -632 316 -654 300 2 polygon
1 1.000 -650 292 -626 308 2 polygon
1 1.000 -544 144 -544 288 2 polygon
1 1.000 -784 144 -640 144 -640 288 3 polygon
1 1.000 -544 48 -784 48 2 polygon
(Indicator) {/Helvetica cf} 2 16 0 1.000 -672 480 label
0.500 /sv 90 -592 336 analog::resistor
1 1.000 -624 336 -640 320 2 polygon
1 1.000 -560 336 -544 320 2 polygon
1.000 0 -584 408 ::meter_movement
1 1.000 -616 360 -640 360 -640 320 3 polygon
1 1.000 -568 360 -544 360 -544 320 3 polygon
(W) {/Symbol cf} (250 ) {/Helvetica cf} 4 16 0 0.500 -620 308 label
0.400 0.400 0.400 scb
1 1.000 -512 160 -96 160 2 polygon
1 1.000 -512 32 -96 32 2 polygon
sce
1 1.000 -512 312 -512 296 2 polygon
1 1.000 -520 304 -504 304 2 polygon
1 1.000 -680 304 -664 304 2 polygon
1.000 0.000 0.000 scb
1.000 30 -912 32 generic::arrow
(Acts as an electrical load) {/Helvetica-BoldOblique cf} 2 16 0 0.750 -1088 -32 
label
1.000 270 -488 328 generic::arrow
(Acts as an electrical load) {/Helvetica-BoldOblique cf} 2 16 0 0.750 -432 320 
label
(Acts as an electrical load) {/Helvetica-BoldOblique cf} 2 16 0 0.750 -416 -112 
label
1.000 225 224 144 generic::arrow
(Acts as an electrical source) {/Helvetica-BoldOblique cf} 2 16 0 0.750 8 184 
label
sce
(PV input) {/Helvetica cf} 2 16 0 0.500 0 -8 label
1 1.000 16 32 -16 48 -544 48 3 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
