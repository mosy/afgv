%!PS-Adobe-3.0 EPSF-3.0
%%Title: machine_10.eps
%%Creator: XCircuit v3.7 rev26
%%CreationDate: Thu Dec 27 08:42:15 2012
%%Pages: 1
%%BoundingBox: 68 68 354 274
%%DocumentNeededResources: font Helvetica Helvetica-Oblique Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/::gear_tooth {
begingate
0.604 0.604 0.604 scb
497 1.000 -8 -8 0 8 8 -8 -8 -8 4 polygon
sce
1 1.000 -8 -8 0 8 8 -8 3 polygon
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def


%%EndSetup

%%Page: 6300x001.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 32.00 8.00 gridspace
0.7500 inchscale
2.6000 setlinewidth 950 1321 translate

1.000 270 11 -709 ::gear_tooth
1.000 345 62 -642 ::gear_tooth
1.000 330 45 -649 ::gear_tooth
1.000 315 31 -660 ::gear_tooth
1.000 300 20 -674 ::gear_tooth
1.000 285 13 -691 ::gear_tooth
1.000 360 80 -640 ::gear_tooth
1.000 15 98 -642 ::gear_tooth
1.000 30 115 -649 ::gear_tooth
1.000 45 129 -660 ::gear_tooth
1.000 60 140 -674 ::gear_tooth
1.000 75 147 -690 ::gear_tooth
1.000 90 149 -708 ::gear_tooth
1.000 255 13 -727 ::gear_tooth
1.000 240 20 -744 ::gear_tooth
1.000 225 31 -758 ::gear_tooth
1.000 210 45 -769 ::gear_tooth
1.000 195 62 -776 ::gear_tooth
1.000 180 80 -778 ::gear_tooth
1.000 165 98 -776 ::gear_tooth
1.000 150 115 -769 ::gear_tooth
1.000 135 129 -758 ::gear_tooth
1.000 120 140 -744 ::gear_tooth
1.000 105 147 -727 ::gear_tooth
0.604 0.604 0.604 scb
497 1.000 80 -709 60 0.000 360.000 xcarc
sce
1.000 0 80 -709 generic::dot
1 1.000 80 -709 60 0.000 360.000 xcarc
0.604 0.604 0.604 scb
497 1.000 -340 -712 336 1.000 361.000 xcarc
sce
-1.000 330 -517 -415 ::gear_tooth
-1.000 331 -500 -406 ::gear_tooth
-1.000 333 -485 -399 ::gear_tooth
-1.000 335 -470 -392 ::gear_tooth
-1.000 338 -454 -386 ::gear_tooth
-1.000 342 -438 -381 ::gear_tooth
-1.000 343 -422 -377 ::gear_tooth
-1.000 347 -405 -374 ::gear_tooth
-1.000 350 -389 -371 ::gear_tooth
-1.000 353 -372 -369 ::gear_tooth
-1.000 356 -355 -368 ::gear_tooth
-1.000 360 -338 -368 ::gear_tooth
-1.000 3 -321 -368 ::gear_tooth
-1.000 5 -304 -369 ::gear_tooth
-1.000 8 -287 -372 ::gear_tooth
-1.000 10 -270 -375 ::gear_tooth
-1.000 13 -253 -378 ::gear_tooth
-1.000 15 -237 -383 ::gear_tooth
-1.000 18 -220 -388 ::gear_tooth
-1.000 21 -204 -395 ::gear_tooth
-1.000 24 -189 -401 ::gear_tooth
-1.000 27 -174 -409 ::gear_tooth
-1.000 30 -159 -418 ::gear_tooth
-1.000 33 -145 -428 ::gear_tooth
-1.000 36 -131 -438 ::gear_tooth
-1.000 39 -117 -449 ::gear_tooth
-1.000 42 -105 -461 ::gear_tooth
-1.000 45 -92 -473 ::gear_tooth
-1.000 48 -80 -486 ::gear_tooth
-1.000 51 -69 -500 ::gear_tooth
-1.000 54 -59 -513 ::gear_tooth
-1.000 56 -49 -527 ::gear_tooth
-1.000 59 -41 -541 ::gear_tooth
-1.000 62 -33 -556 ::gear_tooth
-1.000 65 -26 -571 ::gear_tooth
-1.000 68 -19 -587 ::gear_tooth
-1.000 71 -14 -603 ::gear_tooth
-1.000 74 -9 -619 ::gear_tooth
-1.000 76 -5 -635 ::gear_tooth
-1.000 79 -1 -651 ::gear_tooth
-1.000 81 1 -668 ::gear_tooth
-1.000 84 3 -684 ::gear_tooth
-1.000 87 4 -700 ::gear_tooth
-1.000 90 5 -717 ::gear_tooth
-1.000 93 4 -734 ::gear_tooth
-1.000 96 2 -751 ::gear_tooth
-1.000 98 0 -767 ::gear_tooth
-1.000 101 -3 -783 ::gear_tooth
-1.000 103 -7 -800 ::gear_tooth
-1.000 107 -12 -816 ::gear_tooth
-1.000 110 -17 -832 ::gear_tooth
-1.000 113 -24 -848 ::gear_tooth
-1.000 115 -31 -863 ::gear_tooth
-1.000 118 -38 -878 ::gear_tooth
-1.000 120 -47 -893 ::gear_tooth
-1.000 123 -56 -908 ::gear_tooth
-1.000 127 -66 -922 ::gear_tooth
-1.000 130 -77 -935 ::gear_tooth
-1.000 133 -88 -947 ::gear_tooth
-1.000 135 -99 -959 ::gear_tooth
-1.000 138 -111 -970 ::gear_tooth
-1.000 140 -124 -980 ::gear_tooth
-1.000 143 -137 -990 ::gear_tooth
-1.000 145 -150 -999 ::gear_tooth
-1.000 147 -163 -1008 ::gear_tooth
-1.000 150 -177 -1016 ::gear_tooth
-1.000 153 -192 -1024 ::gear_tooth
-1.000 156 -207 -1031 ::gear_tooth
-1.000 159 -222 -1037 ::gear_tooth
-1.000 163 -238 -1042 ::gear_tooth
-1.000 166 -255 -1047 ::gear_tooth
-1.000 169 -271 -1051 ::gear_tooth
-1.000 172 -287 -1054 ::gear_tooth
-1.000 175 -303 -1056 ::gear_tooth
-1.000 179 -319 -1057 ::gear_tooth
-1.000 181 -335 -1057 ::gear_tooth
-1.000 182 -351 -1057 ::gear_tooth
-1.000 184 -367 -1056 ::gear_tooth
-1.000 187 -384 -1054 ::gear_tooth
-1.000 189 -401 -1052 ::gear_tooth
-1.000 192 -418 -1049 ::gear_tooth
-1.000 195 -435 -1044 ::gear_tooth
-1.000 198 -451 -1039 ::gear_tooth
-1.000 201 -467 -1033 ::gear_tooth
-1.000 203 -482 -1027 ::gear_tooth
-1.000 206 -497 -1020 ::gear_tooth
-1.000 209 -512 -1012 ::gear_tooth
-1.000 212 -527 -1003 ::gear_tooth
-1.000 215 -541 -993 ::gear_tooth
-1.000 218 -555 -983 ::gear_tooth
-1.000 221 -568 -972 ::gear_tooth
-1.000 225 -580 -961 ::gear_tooth
-1.000 228 -592 -949 ::gear_tooth
-1.000 230 -603 -936 ::gear_tooth
-1.000 233 -614 -923 ::gear_tooth
-1.000 235 -624 -909 ::gear_tooth
-1.000 237 -633 -895 ::gear_tooth
-1.000 240 -642 -881 ::gear_tooth
-1.000 243 -650 -866 ::gear_tooth
-1.000 246 -657 -851 ::gear_tooth
-1.000 249 -663 -835 ::gear_tooth
-1.000 252 -668 -818 ::gear_tooth
-1.000 254 -673 -801 ::gear_tooth
-1.000 257 -677 -784 ::gear_tooth
-1.000 259 -681 -767 ::gear_tooth
-1.000 262 -683 -750 ::gear_tooth
-1.000 265 -685 -733 ::gear_tooth
-1.000 268 -685 -715 ::gear_tooth
-1.000 271 -685 -697 ::gear_tooth
-1.000 274 -684 -679 ::gear_tooth
-1.000 277 -681 -661 ::gear_tooth
-1.000 280 -678 -643 ::gear_tooth
-1.000 283 -674 -626 ::gear_tooth
-1.000 286 -669 -608 ::gear_tooth
-1.000 289 -663 -591 ::gear_tooth
-1.000 292 -656 -574 ::gear_tooth
-1.000 294 -649 -557 ::gear_tooth
-1.000 298 -641 -541 ::gear_tooth
-1.000 301 -632 -527 ::gear_tooth
-1.000 304 -622 -512 ::gear_tooth
-1.000 308 -611 -498 ::gear_tooth
-1.000 311 -599 -485 ::gear_tooth
-1.000 314 -587 -472 ::gear_tooth
-1.000 317 -575 -460 ::gear_tooth
-1.000 321 -562 -447 ::gear_tooth
-1.000 323 -548 -436 ::gear_tooth
-1.000 325 -532 -425 ::gear_tooth
1.000 0 -344 -713 generic::dot
225 1.000 -340 -712 336 1.000 361.000 xcarc
(Gear #2) {/Helvetica cf} 2 16 0 1.000 40 -618 label
(Gear #1) {/Helvetica cf} 2 16 0 1.000 -418 -580 label
1.000 0.000 0.000 scb
1 1.000 -304 -640 -272 -672 -272 -712 -344 -640 spline
-1.000 180 -272 -736 generic::arrowhead
1 1.000 40 -696 56 -672 80 -672 40 -712 spline
-1.000 180 40 -728 generic::arrowhead
sce
(Slow-turning,) {/Helvetica-Oblique cf} 2 16 0 1.000 -464 -848 label
(high-torque) {/Helvetica-Oblique cf} 2 16 0 1.000 -456 -888 label
(Fast-turning,) {/Helvetica-Oblique cf} 2 16 0 1.000 64 -824 label
(low-torque) {/Helvetica-Oblique cf} 2 16 0 1.000 80 -864 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
