%!PS-Adobe-3.0 EPSF-3.0
%%Title: motor_43.eps
%%Creator: XCircuit v3.7 rev55
%%CreationDate: Sat Apr 11 16:39:29 2015
%%Pages: 1
%%BoundingBox: 68 68 504 243
%%DocumentNeededResources: font Helvetica Helvetica-Bold Helvetica-Oblique 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/::currentloop {
begingate
1.000 0.000 0.000 scb
1 1.000 -16 16 48 16 32 0 -32 0 spline
1 1.000 16 -16 -48 -16 -32 0 32 0 spline
-1.000 255 -16 8 generic::arrowhead
-1.000 75 16 -8 generic::arrowhead
endgate
} def

/::currentloop2 {
begingate
1.000 0.000 0.000 scb
1 1.000 -16 16 48 16 32 0 -32 0 spline
1 1.000 16 -16 -48 -16 -32 0 32 0 spline
1.000 75 8 12 generic::arrowhead
1.000 255 -4 -12 generic::arrowhead
endgate
} def


%%EndSetup

%%Page: motor_43 1
%%PageOrientation: Portrait
/pgsave save def bop
0.6000 inchscale
2.6000 setlinewidth 1807 653 translate

0.898 0.898 0.898 scb
241 1.000 -1488 -32 -1392 64 -656 64 -752 -32 -1488 -32 5 polygon
sce
1 1.000 -1488 -32 -1392 64 -656 64 -752 -32 -1488 -32 5 polygon
0.824 0.706 0.549 scb
240 1.000 -1056 32 -1056 160 -992 160 -992 32 4 polygon
241 1.000 -1056 160 -1024 192 -960 192 -992 160 -1056 160 5 polygon
241 1.000 -960 192 -992 160 -992 32 -960 64 -960 192 5 polygon
sce
0 1.000 -1056 32 -1056 160 -992 160 -992 32 4 polygon
1 1.000 -1056 160 -1024 192 -960 192 -992 160 -1056 160 5 polygon
1 1.000 -960 192 -992 160 -992 32 -960 64 -960 192 5 polygon
(N) {/Helvetica-Bold cf} 2 16 0 1.000 -1040 48 label
(S) {/Helvetica-Bold cf} 2 16 0 1.000 -1040 120 label
0.000 0.933 0.000 scb
241 1.000 -896 112 -896 144 -816 144 -816 160 -752 128 -816 96 -816 112 -896 
112 8 polygon
(Motion) {/Helvetica-Oblique cf} 2 16 0 1.000 -944 160 label
sce
(Aluminum foil) {/Helvetica cf} 2 16 0 1.000 -1408 8 label
0.800 0.800 0.800 scb
241 1.000 -74 58 -85 54 -94 50 -102 46 -110 41 -120 34 -128 27 -135 21 -142 13 
-148 5 -153 -2 -159 -12 -163 -21 -167 -31 -171 -42 -174 -55 -176 -73 -176 -88 
-174 -103 -171 -118 -165 -135 -158 -150 -151 -161 -143 -172 -132 -184 -121 -193 
-110 -201 -100 -207 -87 -213 -69 -219 -55 -222 -39 -224 -25 -224 -9 -222 5 -219 
21 -214 37 -206 52 -197 63 -188 73 -179 82 -168 91 -155 97 -144 102 -132 106 
-122 98 -124 82 -127 68 -128 57 -128 40 -126 26 -123 14 -119 2 -114 -9 -108 -19 
-102 -31 -92 -40 -84 -49 -73 -56 -64 -64 -50 -70 -36 -75 -22 -78 -9 -80 11 -80 
21 -79 34 -77 44 -75 54 -74 58 69 polygon
0.898 0.898 0.898 scb
241 1.000 -121 33 -28 127 -17 135 -2 144 12 150 27 155 39 158 56 160 71 160 89 
158 105 154 117 150 130 144 142 137 152 130 158 125 170 113 178 104 185 94 191 
84 195 76 200 64 203 53 206 41 207 31 208 20 208 12 207 0 205 -13 203 -22 199 
-34 193 -48 189 -56 183 -65 178 -72 170 -81 160 -92 140 -112 96 -156 63 -188 79 
-172 85 -164 93 -152 99 -140 103 -130 107 -118 110 -104 111 -95 112 -86 112 -75 
111 -63 109 -51 106 -39 102 -27 97 -16 91 -5 84 5 76 15 65 26 56 34 43 43 30 50 
18 55 6 59 -7 62 -17 63 -29 64 -38 64 -49 63 -56 62 -70 59 -82 55 -94 50 -107 
43 -121 33 75 polygon
sce
1 1.000 -32 -80 144 0.000 360.000 xcarc
1 1.000 -74 56 -76 46 -78 36 -79 25 -79 14 -78 0 -76 -13 -71 -30 -64 -48 -55 
-64 -42 -81 -28 -93 -13 -105 1 -112 15 -118 29 -123 45 -126 60 -127 77 -127 89 
-125 106 -121 21 polygon
1 1.000 -123 33 -27 129 2 polygon
1 1.000 -27 129 -18 136 -8 142 6 149 19 154 37 159 54 161 69 161 84 160 100 157 
118 151 133 144 146 136 157 128 169 116 180 104 188 91 196 76 202 62 205 49 209 
29 209 7 207 -10 203 -26 196 -45 190 -56 180 -71 170 -83 64 -188 29 polygon
0.824 0.706 0.549 scb
240 1.000 -16 112 -16 240 48 240 48 112 4 polygon
241 1.000 -16 240 16 272 80 272 48 240 -16 240 5 polygon
241 1.000 80 272 48 240 48 112 80 144 80 272 5 polygon
sce
0 1.000 -16 112 -16 240 48 240 48 112 4 polygon
1 1.000 -16 240 16 272 80 272 48 240 -16 240 5 polygon
1 1.000 80 272 48 240 48 112 80 144 80 272 5 polygon
(N) {/Helvetica-Bold cf} 2 16 0 1.000 0 128 label
(S) {/Helvetica-Bold cf} 2 16 0 1.000 0 200 label
0.000 0.933 0.000 scb
(Motion) {/Helvetica-Oblique cf} 2 16 30 1.000 160 208 label
241 1.000 224 80 208 72 272 24 272 104 256 96 248 112 236 132 224 144 208 160 
180 180 164 188 148 192 116 200 112 176 132 172 148 164 160 156 172 148 180 140 
196 124 208 108 220 92 224 80 23 polygon
sce
(foil loop) {/Helvetica cf} 2 16 0 1.000 -360 -112 label
(Aluminum) {/Helvetica cf} 2 16 0 1.000 -376 -72 label
(Aluminum foil will be "dragged along" linearly) {/Helvetica-Oblique cf} 2 16 0 
1.000 -1488 -112 label
(in the same direction as the moving magnet) {/Helvetica-Oblique cf} 2 16 0 
1.000 -1488 -152 label
(Aluminum foil will be "dragged along" rotationally) {/Helvetica-Oblique cf} 2 
16 0 1.000 -448 -288 label
(in the same direction as the moving magnet) {/Helvetica-Oblique cf} 2 16 0 
1.000 -416 -328 label
(Demonstration of Lenz's Law between a moving) {/Helvetica-Bold cf} 2 16 0 
1.000 -1024 384 label
(magnet and a strip of conductive metal ) {/Helvetica-Bold cf} 2 16 0 1.000 
-960 336 label
1.000 0.000 0.000 scb
(induced current) {/Helvetica-Oblique cf} 2 16 0 0.500 -1008 -16 label
(induced current) {/Helvetica-Oblique cf} 2 16 0 0.500 -1168 -16 label
sce
1.000 0 -944 16 ::currentloop
1.000 30 96 96 ::currentloop
1.000 0.000 0.000 scb
(induced current) {/Helvetica-Oblique cf} 2 16 0 0.500 32 64 label
sce
1.000 0 -1104 16 ::currentloop2
1.000 0.000 0.000 scb
1 1.000 -20 128 -8 116 -36 92 -44 112 spline
1 1.000 -44 84 -80 60 -76 80 -36 92 spline
1.000 225 -44 84 generic::arrowhead
sce
(N) {/Helvetica-Bold cf} 2 16 0 1.000 -944 48 label
(S) {/Helvetica-Bold cf} 2 16 0 1.000 -944 -64 label
(S) {/Helvetica-Bold cf} 2 16 0 1.000 -1120 48 label
(N) {/Helvetica-Bold cf} 2 16 0 1.000 -1120 -64 label
(N) {/Helvetica-Bold cf} 2 16 0 1.000 120 112 label
(S) {/Helvetica-Bold cf} 2 16 0 1.000 32 0 label
(N) {/Helvetica-Bold cf} 2 16 0 1.000 -40 24 label
(S) {/Helvetica-Bold cf} 2 16 0 1.000 -88 112 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
