%!PS-Adobe-3.0 EPSF-3.0
%%Title: 7100x026.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Tue Sep 24 07:19:42 2002
%%Pages: 1
%%BoundingBox: 68 68 420 247
%%DocumentNeededResources: font Helvetica font Helvetica-Oblique 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%Page: 7100x024.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 1604 1380 offsets
0.3500 inchscale
2.6000 setlinewidth

0.600 0.600 0.600 scb
241  1.00 1156 1652 1220 1572 1284 1636 1348 1556 1412 1620 1476 1540 1540 1604 
1604 1524 1668 1588 1732 1508 1796 1572 1860 1492 1924 1556 1988 1476 2052 1540 
2116 1460 2180 1524 2244 1444 2244 1412 3140 1412 3140 1732 1092 1732 1092 1684 
1124 1684 1156 1652 25 polygon
sce
1  1.00 1092 1732 1092 1684 1124 1684 1156 1652 1220 1572 1284 1636 1348 1556 
1412 1620 1476 1540 1540 1604 1604 1524 1668 1588 1732 1508 1796 1572 1860 1492 
1924 1556 1988 1476 2052 1540 2116 1460 2180 1524 2244 1444 2244 1412 3140 1412 
3140 1732 1092 1732 25 polygon
(Fitting wall) {/Helvetica 1.000 cf} 2 16 0 2324 1572 label
0.600 0.600 0.600 scb
241  1.00 1156 628 1220 708 1284 644 1348 724 1412 660 1476 740 1540 676 1604 
756 1668 692 1732 772 1796 708 1860 788 1924 724 1988 804 2052 740 2116 820 
2180 756 2244 836 2244 868 3140 868 3140 548 1092 548 1092 596 1124 596 1156 
628 25 polygon
sce
1  1.00 1092 548 1092 596 1124 596 1156 628 1220 708 1284 644 1348 724 1412 660 
1476 740 1540 676 1604 756 1668 692 1732 772 1796 708 1860 788 1924 724 1988 
804 2052 740 2116 820 2180 756 2244 836 2244 868 3140 868 3140 548 1092 548 
25 polygon
(Fitting wall) {/Helvetica 1.000 cf} 2 28 0 2324 708 label
1  1.00 3140 1412 3140 1156 3108 1124 3172 1092 3140 1060 3140 868 6 polygon
1  1.00 1092 1684 1092 1636 2 polygon
1  1.00 1092 644 1092 596 2 polygon
0.600 0.600 0.600 scb
241  1.00 580 1636 1284 1636 1348 1556 1412 1620 1476 1540 1540 1604 1604 1524 
1668 1588 1732 1508 1796 1572 1860 1492 1924 1556 1988 1476 2052 1540 2116 1460 
2180 1524 2244 1444 2244 1412 580 1412 580 1636 20 polygon
241  1.00 580 644 1284 644 1348 724 1412 660 1476 740 1540 676 1604 756 1668 
692 1732 772 1796 708 1860 788 1924 724 1988 804 2052 740 2116 820 2180 756 
2244 836 2244 868 580 868 580 644 20 polygon
sce
1  1.00 580 1636 580 1412 2244 1412 2244 1444 2180 1524 2116 1460 2052 1540 
1988 1476 1924 1556 1860 1492 1796 1572 1732 1508 1668 1588 1604 1524 1540 1604 
1476 1540 1412 1620 1348 1556 1284 1636 580 1636 20 polygon
1  1.00 580 644 580 868 2244 868 2244 836 2180 756 2116 820 2052 740 1988 804 
1924 724 1860 788 1796 708 1732 772 1668 692 1604 756 1540 676 1476 740 1412 
660 1348 724 1284 644 580 644 20 polygon
1  1.00 580 1412 580 1156 548 1124 612 1092 580 1060 580 868 6 polygon
(Pipe wall) {/Helvetica 1.000 cf} 2 16 0 708 1508 label
(Pipe wall) {/Helvetica 1.000 cf} 2 16 0 708 740 label
1  1.00 2244 1412 2244 868 2 polygon
(Threads fully engaged -- pressure-tight seal established) {/Helvetica-Oblique 2.000 cf} 2 16 0 852 1796 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
