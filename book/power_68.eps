%!PS-Adobe-3.0 EPSF-3.0
%%Title: power_68.eps
%%Creator: XCircuit v3.7 rev26
%%CreationDate: Wed Apr  4 01:54:05 2012
%%Pages: 1
%%BoundingBox: 68 68 378 272
%%DocumentNeededResources: font Helvetica Helvetica-Oblique 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup


%%EndSetup

%%Page: power_67.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
0.7500 inchscale
2.6000 setlinewidth -8 400 translate

1 1.500 736 256 744 264 752 256 3 polygon
1 1.500 760 256 768 264 776 256 3 polygon
1 1.500 784 256 792 264 800 256 3 polygon
1 1.500 832 256 840 264 848 256 3 polygon
1 1.500 856 256 864 264 872 256 3 polygon
1 1.500 880 256 888 264 896 256 3 polygon
1 1.500 736 200 744 208 752 200 3 polygon
1 1.500 760 200 768 208 776 200 3 polygon
1 1.500 784 200 792 208 800 200 3 polygon
1 1.500 832 200 840 208 848 200 3 polygon
1 1.500 856 200 864 208 872 200 3 polygon
1 1.500 880 200 888 208 896 200 3 polygon
1 1.000 664 200 672 208 680 200 3 polygon
1 1.000 688 200 696 208 704 200 3 polygon
1 1.000 616 200 624 208 632 200 3 polygon
1 1.000 640 200 648 208 656 200 3 polygon
1 1.000 616 204 624 212 632 204 3 polygon
1 1.000 640 204 648 212 656 204 3 polygon
1 1.000 664 204 672 212 680 204 3 polygon
1 1.000 688 204 696 212 704 204 3 polygon
1.000 0.000 0.000 scb
(3-phase power in \("line"\)) {/Helvetica cf} 2 16 0 0.750 984 360 label
0.000 0.000 1.000 scb
(3-phase power out \("load"\)) {/Helvetica cf} 2 16 0 0.750 984 296 label
1.000 0.000 0.000 scb
1 1.000 960 392 968 392 968 344 960 344 4 polygon
1 1.000 968 368 976 368 2 polygon
0.000 0.000 1.000 scb
1 1.000 960 328 968 328 968 280 960 280 4 polygon
1 1.000 968 304 976 304 2 polygon
0.627 0.125 0.941 scb
1 1.000 520 300 512 300 2 polygon
(To control circuits) {/Helvetica cf} 2 16 0 0.750 264 292 label
sce
1 1.000 592 200 600 208 608 200 3 polygon
1 1.000 592 204 600 212 608 204 3 polygon
1 1.000 568 200 576 208 584 200 3 polygon
1 1.000 568 204 576 212 584 204 3 polygon
0.627 0.125 0.941 scb
1 1.000 528 328 520 328 520 272 528 272 4 polygon
0.824 0.706 0.549 scb
496 1.000 560 184 560 -128 904 -128 904 184 4 polygon
sce
0 1.000 560 184 560 -128 904 -128 904 184 4 polygon
1 1.000 808 176 808 144 2 polygon
1 1.000 824 176 824 144 2 polygon
1 1.500 824 160 840 160 840 208 3 polygon
1 1.500 808 160 792 160 792 208 3 polygon
1 1.000 808 128 808 96 2 polygon
1 1.000 824 128 824 96 2 polygon
1 1.000 808 80 808 48 2 polygon
1 1.000 824 80 824 48 2 polygon
1 1.500 808 112 768 112 768 208 3 polygon
1 1.500 824 112 864 112 864 208 3 polygon
1 1.500 744 208 744 64 808 64 3 polygon
1 1.500 888 208 888 64 824 64 3 polygon
1 1.000 776 16 16 0.000 360.000 xcarc
(TC) {/Helvetica cf} 2 16 0 0.400 766 10 label
1 1.000 864 16 16 0.000 360.000 xcarc
(CC) {/Helvetica cf} 2 16 0 0.400 852 10 label
1 1.000 880 16 888 16 888 -48 624 -48 624 208 5 polygon
1 1.000 672 208 672 -8 800 -8 800 16 792 16 5 polygon
(Trip coil) {/Helvetica cf} 2 16 0 0.250 720 24 label
(Close coil) {/Helvetica cf} 2 16 0 0.250 800 24 label
1 1.000 680 112 712 112 2 polygon
1 1.000 680 96 712 96 2 polygon
1 1.000 760 16 696 16 696 96 3 polygon
1 1.000 696 112 696 208 2 polygon
1 1.000 632 112 664 112 2 polygon
1 1.000 632 96 664 96 2 polygon
1 1.000 848 16 840 16 840 -24 648 -24 648 96 5 polygon
1 1.000 648 112 648 208 2 polygon
1 1.000 632 120 664 88 2 polygon
1 1.000 776 -80 24 0.000 360.000 xcarc
1 1.000 800 -80 816 -80 816 -112 576 -112 576 208 5 polygon
(Spring charging) {/Helvetica cf} 2 16 0 0.250 800 -64 label
(motor) {/Helvetica cf} 2 16 0 0.250 820 -76 label
1 1.000 696 -64 696 -96 2 polygon
1 1.000 712 -64 712 -96 2 polygon
1 1.000 752 -80 712 -80 2 polygon
1 1.000 696 -80 600 -80 600 208 3 polygon
(M) {/Helvetica cf} 2 16 0 0.750 766 -92 label
0.800 0.800 0.800 scb
496 1.000 544 272 544 400 944 400 944 272 4 polygon
sce
0 1.000 544 400 544 272 944 272 944 400 4 polygon
1 1.500 888 264 888 288 960 288 3 polygon
1 1.500 960 304 864 304 864 264 3 polygon
1 1.500 840 264 840 320 960 320 3 polygon
1 1.500 792 264 792 352 960 352 3 polygon
1 1.500 960 368 768 368 768 264 3 polygon
1 1.500 744 264 744 384 960 384 3 polygon
1 1.000 576 264 576 280 528 280 3 polygon
1 1.000 600 264 600 288 528 288 3 polygon
1 1.000 624 264 624 296 528 296 3 polygon
1 1.000 648 264 648 304 528 304 3 polygon
1 1.000 672 264 672 312 528 312 3 polygon
1 1.000 696 264 696 320 528 320 3 polygon
(Breaker panel) {/Helvetica cf} 2 16 0 1.000 624 416 label
(Circuit) {/Helvetica cf} 2 16 0 1.000 928 48 label
(breaker) {/Helvetica cf} 2 16 0 1.000 920 8 label
(Breaker "racked out" \(removed from service\)) {/Helvetica-Oblique cf} 2 16 0 
1.000 392 528 label
1 1.000 320 -128 1280 -128 2 polygon
1 1.000 352 -128 336 -144 2 polygon
1 1.000 368 -128 352 -144 2 polygon
1 1.000 384 -128 368 -144 2 polygon
1 1.000 400 -128 384 -144 2 polygon
1 1.000 416 -128 400 -144 2 polygon
1 1.000 432 -128 416 -144 2 polygon
1 1.000 448 -128 432 -144 2 polygon
1 1.000 464 -128 448 -144 2 polygon
1 1.000 480 -128 464 -144 2 polygon
1 1.000 496 -128 480 -144 2 polygon
1 1.000 512 -128 496 -144 2 polygon
1 1.000 528 -128 512 -144 2 polygon
1 1.000 544 -128 528 -144 2 polygon
1 1.000 560 -128 544 -144 2 polygon
1 1.000 576 -128 560 -144 2 polygon
1 1.000 592 -128 576 -144 2 polygon
1 1.000 608 -128 592 -144 2 polygon
1 1.000 624 -128 608 -144 2 polygon
1 1.000 640 -128 624 -144 2 polygon
1 1.000 656 -128 640 -144 2 polygon
1 1.000 672 -128 656 -144 2 polygon
1 1.000 688 -128 672 -144 2 polygon
1 1.000 704 -128 688 -144 2 polygon
1 1.000 720 -128 704 -144 2 polygon
1 1.000 736 -128 720 -144 2 polygon
1 1.000 752 -128 736 -144 2 polygon
1 1.000 768 -128 752 -144 2 polygon
1 1.000 784 -128 768 -144 2 polygon
1 1.000 800 -128 784 -144 2 polygon
1 1.000 816 -128 800 -144 2 polygon
1 1.000 832 -128 816 -144 2 polygon
1 1.000 848 -128 832 -144 2 polygon
1 1.000 864 -128 848 -144 2 polygon
1 1.000 880 -128 864 -144 2 polygon
1 1.000 896 -128 880 -144 2 polygon
1 1.000 912 -128 896 -144 2 polygon
1 1.000 928 -128 912 -144 2 polygon
1 1.000 944 -128 928 -144 2 polygon
1 1.000 960 -128 944 -144 2 polygon
1 1.000 976 -128 960 -144 2 polygon
1 1.000 992 -128 976 -144 2 polygon
1 1.000 1008 -128 992 -144 2 polygon
1 1.000 1024 -128 1008 -144 2 polygon
1 1.000 1040 -128 1024 -144 2 polygon
1 1.000 1056 -128 1040 -144 2 polygon
1 1.000 1072 -128 1056 -144 2 polygon
1 1.000 1088 -128 1072 -144 2 polygon
1 1.000 1104 -128 1088 -144 2 polygon
1 1.000 1120 -128 1104 -144 2 polygon
1 1.000 1136 -128 1120 -144 2 polygon
1 1.000 1152 -128 1136 -144 2 polygon
1 1.000 1168 -128 1152 -144 2 polygon
1 1.000 1184 -128 1168 -144 2 polygon
1 1.000 1200 -128 1184 -144 2 polygon
1 1.000 1216 -128 1200 -144 2 polygon
1 1.000 1232 -128 1216 -144 2 polygon
1 1.000 1248 -128 1232 -144 2 polygon
1 1.000 1264 -128 1248 -144 2 polygon
1 1.000 1280 -128 1264 -144 2 polygon
1 1.000 336 -128 320 -144 2 polygon
1 1.000 576 212 576 264 2 polygon
1 1.000 600 212 600 264 2 polygon
1 1.000 624 212 624 264 2 polygon
1 1.000 648 212 648 264 2 polygon
1 1.000 672 212 672 264 2 polygon
1 1.000 696 212 696 264 2 polygon
(but control plug still engaged for operational testing) 
{/Helvetica-Oblique cf} 2 16 0 1.000 336 488 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
