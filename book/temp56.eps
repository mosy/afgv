%!PS-Adobe-3.0 EPSF-3.0
%%Title: temp56.eps
%%Creator: XCircuit v3.7 rev26
%%CreationDate: Sat Nov  5 08:28:55 2011
%%Pages: 1
%%BoundingBox: 68 68 400 256
%%DocumentNeededResources: font Helvetica Helvetica-Bold Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def


%%EndSetup

%%Page: temp53.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
0.6000 inchscale
2.6000 setlinewidth 1039 703 translate

0.824 0.706 0.549 scb
497 1.000 432 112 192 0.000 360.000 xcarc
0.604 0.604 0.604 scb
497 1.000 268 112 16 0.000 360.000 xcarc
sce
1 1.000 268 112 16 0.000 360.000 xcarc
1 1.000 276 124 256 104 2 polygon
1 1.000 280 120 260 100 2 polygon
0.604 0.604 0.604 scb
497 1.000 344 -28 16 0.000 360.000 xcarc
sce
1 1.000 344 -28 16 0.000 360.000 xcarc
1 1.000 352 -16 332 -36 2 polygon
1 1.000 356 -20 336 -40 2 polygon
0.604 0.604 0.604 scb
497 1.000 420 -56 16 0.000 360.000 xcarc
sce
1 1.000 420 -56 16 0.000 360.000 xcarc
1 1.000 428 -44 408 -64 2 polygon
1 1.000 432 -48 412 -68 2 polygon
1 1.000 432 112 192 0.000 360.000 xcarc
0.604 0.604 0.604 scb
497 1.000 288 32 16 0.000 360.000 xcarc
sce
1 1.000 288 32 16 0.000 360.000 xcarc
1 1.000 296 44 276 24 2 polygon
1 1.000 300 40 280 20 2 polygon
0.604 0.604 0.604 scb
497 1.000 396 256 16 0.000 360.000 xcarc
sce
1 1.000 396 256 16 0.000 360.000 xcarc
1 1.000 404 268 384 248 2 polygon
1 1.000 408 264 388 244 2 polygon
0.604 0.604 0.604 scb
497 1.000 476 256 16 0.000 360.000 xcarc
sce
1 1.000 476 256 16 0.000 360.000 xcarc
1 1.000 484 268 464 248 2 polygon
1 1.000 488 264 468 244 2 polygon
(Loop pwr) {/Helvetica cf} 2 16 0 0.750 376 208 label
0 1.000 344 120 344 104 376 104 376 120 4 polygon
1 1.000 344 112 296 112 2 polygon
1 1.000 376 112 424 112 424 -32 3 polygon
1.000 0 328 112 generic::dot
1.000 0 392 112 generic::dot
1 1.000 392 112 392 96 2 polygon
1 1.000 328 112 328 96 2 polygon
0 1.000 344 88 344 72 376 72 376 88 4 polygon
1 1.000 344 80 296 80 2 polygon
1.000 0 328 80 generic::dot
1 1.000 328 80 328 56 312 48 3 polygon
1 1.000 360 -8 392 32 392 80 376 80 4 polygon
0 1.000 344 152 344 136 376 136 376 152 4 polygon
1 1.000 344 144 328 144 328 128 3 polygon
1 1.000 376 144 392 144 392 128 3 polygon
1 1.000 360 264 360 248 2 polygon
1 1.000 352 256 368 256 2 polygon
1 1.000 504 256 520 256 2 polygon
(1) {/Helvetica-Bold cf} 2 16 0 0.750 264 136 label
(2) {/Helvetica-Bold cf} 2 16 0 0.750 260 52 label
(3) {/Helvetica-Bold cf} 2 16 0 0.750 304 -24 label
(4) {/Helvetica-Bold cf} 2 16 0 0.750 380 -64 label
0.824 0.039 0.863 scb
496 1.000 336 -336 336 -352 592 -352 592 -336 4 polygon
497 1.000 608 -336 600 -352 592 -352 592 -336 spline
sce
1 1.000 608 -336 600 -352 592 -352 592 -336 spline
1 1.000 592 -336 336 -336 336 -352 592 -352 4 polygon
1 1.000 288 -320 312 -344 336 -344 288 -288 spline
1 1.000 256 -320 288 -344 336 -344 256 -288 spline
1 1.000 288 -128 288 -288 2 polygon
1 1.000 256 -288 256 -128 2 polygon
1 1.000 256 -68 256 0 276 20 256 -128 spline
1 1.000 288 -72 304 -40 328 -32 288 -128 spline
0.604 0.604 0.604 scb
0 3.000 128 416 128 -384 720 -384 720 416 4 polygon
0.000 0.000 1.000 scb
(transmitter on a 3-wire RTD) {/Helvetica cf} 2 16 0 1.000 168 336 label
sce
1 1.000 232 -336 272 -344 336 -344 224 -288 spline
1 1.000 224 -288 224 -128 2 polygon
1 1.000 224 -52 228 88 252 108 224 -128 spline
0.604 0.604 0.604 scb
(4-wire cable) {/Helvetica cf} 2 16 0 0.750 352 -184 label
1 1.000 208 -112 208 -240 2 polygon
1 1.000 336 -112 336 -240 2 polygon
0.000 0.000 1.000 scb
(Correct way to use a 3-wire) {/Helvetica cf} 2 16 0 1.000 168 376 label
sce
1 1.000 320 -256 320 -96 2 polygon
0.604 0.604 0.604 scb
1 1.000 336 -224 208 -224 208 -240 336 -240 spline
1 1.000 336 -256 208 -256 208 -240 336 -240 spline
1 1.000 336 -96 208 -96 208 -112 336 -112 spline
1 1.000 336 -128 208 -128 208 -112 336 -112 spline
0.824 0.706 0.549 scb
497 1.000 -416 112 192 0.000 360.000 xcarc
0.604 0.604 0.604 scb
497 1.000 -580 112 16 0.000 360.000 xcarc
sce
1 1.000 -580 112 16 0.000 360.000 xcarc
1 1.000 -572 124 -592 104 2 polygon
1 1.000 -568 120 -588 100 2 polygon
0.604 0.604 0.604 scb
497 1.000 -504 -28 16 0.000 360.000 xcarc
sce
1 1.000 -504 -28 16 0.000 360.000 xcarc
1 1.000 -496 -16 -516 -36 2 polygon
1 1.000 -492 -20 -512 -40 2 polygon
0.604 0.604 0.604 scb
497 1.000 -428 -56 16 0.000 360.000 xcarc
sce
1 1.000 -428 -56 16 0.000 360.000 xcarc
1 1.000 -420 -44 -440 -64 2 polygon
1 1.000 -416 -48 -436 -68 2 polygon
1 1.000 -416 112 192 0.000 360.000 xcarc
0.604 0.604 0.604 scb
497 1.000 -560 32 16 0.000 360.000 xcarc
sce
1 1.000 -560 32 16 0.000 360.000 xcarc
1 1.000 -552 44 -572 24 2 polygon
1 1.000 -548 40 -568 20 2 polygon
0.604 0.604 0.604 scb
497 1.000 -452 256 16 0.000 360.000 xcarc
sce
1 1.000 -452 256 16 0.000 360.000 xcarc
1 1.000 -444 268 -464 248 2 polygon
1 1.000 -440 264 -460 244 2 polygon
0.604 0.604 0.604 scb
497 1.000 -372 256 16 0.000 360.000 xcarc
sce
1 1.000 -372 256 16 0.000 360.000 xcarc
1 1.000 -364 268 -384 248 2 polygon
1 1.000 -360 264 -380 244 2 polygon
(Loop pwr) {/Helvetica cf} 2 16 0 0.750 -472 208 label
0 1.000 -504 120 -504 104 -472 104 -472 120 4 polygon
1 1.000 -504 112 -552 112 2 polygon
1 1.000 -472 112 -424 112 -424 -32 3 polygon
1.000 0 -520 112 generic::dot
1.000 0 -456 112 generic::dot
1 1.000 -456 112 -456 96 2 polygon
1 1.000 -520 112 -520 96 2 polygon
0 1.000 -504 88 -504 72 -472 72 -472 88 4 polygon
1 1.000 -504 80 -552 80 2 polygon
1.000 0 -520 80 generic::dot
1 1.000 -520 80 -520 56 -536 48 3 polygon
1 1.000 -488 -8 -456 32 -456 80 -472 80 4 polygon
0 1.000 -504 152 -504 136 -472 136 -472 152 4 polygon
1 1.000 -504 144 -520 144 -520 128 3 polygon
1 1.000 -472 144 -456 144 -456 128 3 polygon
1 1.000 -488 264 -488 248 2 polygon
1 1.000 -496 256 -480 256 2 polygon
1 1.000 -344 256 -328 256 2 polygon
(1) {/Helvetica-Bold cf} 2 16 0 0.750 -584 136 label
(2) {/Helvetica-Bold cf} 2 16 0 0.750 -588 52 label
(3) {/Helvetica-Bold cf} 2 16 0 0.750 -544 -24 label
(4) {/Helvetica-Bold cf} 2 16 0 0.750 -468 -64 label
0.824 0.039 0.863 scb
496 1.000 -512 -336 -512 -352 -256 -352 -256 -336 4 polygon
497 1.000 -240 -336 -248 -352 -256 -352 -256 -336 spline
sce
1 1.000 -240 -336 -248 -352 -256 -352 -256 -336 spline
1 1.000 -256 -336 -512 -336 -512 -352 -256 -352 4 polygon
1 1.000 -560 -320 -536 -344 -512 -344 -560 -288 spline
1 1.000 -592 -320 -560 -344 -512 -344 -592 -288 spline
1 1.000 -560 -128 -560 -288 2 polygon
1 1.000 -592 -288 -592 -128 2 polygon
1 1.000 -592 -68 -592 0 -572 20 -592 -128 spline
1 1.000 -560 -72 -544 -40 -520 -32 -560 -128 spline
0.604 0.604 0.604 scb
0 3.000 -720 416 -720 -384 -128 -384 -128 416 4 polygon
0.000 0.000 1.000 scb
(transmitter on a 3-wire RTD) {/Helvetica cf} 2 16 0 1.000 -680 336 label
sce
1 1.000 -616 -336 -576 -344 -512 -344 -624 -288 spline
1 1.000 -624 -288 -624 -128 2 polygon
1 1.000 -624 -52 -620 88 -596 108 -624 -128 spline
0.604 0.604 0.604 scb
(4-wire cable) {/Helvetica cf} 2 16 0 0.750 -496 -184 label
1 1.000 -640 -112 -640 -240 2 polygon
1 1.000 -512 -112 -512 -240 2 polygon
sce
1 1.000 -528 -256 -528 -96 2 polygon
0.604 0.604 0.604 scb
1 1.000 -512 -224 -640 -224 -640 -240 -512 -240 spline
1 1.000 -512 -256 -640 -256 -640 -240 -512 -240 spline
1 1.000 -512 -96 -640 -96 -640 -112 -512 -112 spline
1 1.000 -512 -128 -640 -128 -640 -112 -512 -112 spline
0.000 0.000 1.000 scb
(Correct way to use a 4-wire) {/Helvetica cf} 2 16 0 1.000 -680 376 label
sce
1.000 0 -560 -288 generic::dot
1 1.000 -560 -288 -528 -256 2 polygon
1 1.000 -524 -68 -492 -56 -444 -56 -528 -96 spline
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
