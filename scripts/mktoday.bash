#!/bin/bash

# This script makes copies of all pertinent files created 
# or edited today, and copies them into a directory named
# "new".  WARNING!  This script is a total hack, and may 
# cause hysterical laughter if analyzed too closely.


# Set $DATE variable, using the "date" utility outputting in RFC 3339 format
#MONTH=`date +%b`
#DAY=`date +%e`
DATE=`date --rfc-3339=date`


# Echo these string values to the screen, just for fun
#echo "$MONTH"
#echo "$DAY"
echo "$DATE"

# Create "new" directory in which to store copies of files modified today
mkdir -p new


# Create subdirectories under new/
mkdir -p new/src
mkdir -p new/scripts
mkdir -p new/doc
mkdir -p new/output
mkdir -p new/book
mkdir -p new/ebooks

# In each of the following search operations, "cp -v " is 
# prepended to each filename, and " new" appended to each
# filename, so as to form a complete "copy" command for 
# each filename to be executed in a script named 
# "newmake.exe" (generated by this script).

# Searching for any worksheet TeX files (.tex) created or edited today
ls -l src/*.tex | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".tex" | sed 's/.tex/.tex new\/src/g' > newmake.exe


# Searching for any worksheet .eps files created or edited today
ls -l src/*.eps | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".eps" | sed 's/.eps/.eps new\/src/g' >> newmake.exe


# Searching for any worksheet sequence files (.seq) created or edited today
ls -l src/*.seq | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".seq" | sed 's/.seq/.seq new\/src/g' >> newmake.exe


# Searching for any exam sequence files (.exam) created or edited today
ls -l src/*.exam | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".exam" | sed 's/.exam/.exam new\/src/g' >> newmake.exe


# Searching for any exam sequence files (.exam) created or edited today
#ls -l src/*.exam | grep "$DATE" | sed 's/ /\
#cp -v /g' | grep ".exam" | sed 's/.exam/.exam new\/src/g' >> newmake.exe


# Searching for any C++ files (.cpp) created or edited today
ls -l src/*.cpp | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".cpp" | sed 's/.cpp/.cpp new\/src/g' >> newmake.exe


# Searching for any ePiX C++ files (.xp) created or edited today
ls -l src/*.xp | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".xp" | sed 's/.xp/.xp new\/src/g' >> newmake.exe


# Searching for any xcircuit libraries (.lps) created or edited today
ls -l src/*.lps | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".lps" | sed 's/.lps/.lps new\/src/g' >> newmake.exe


# Searching to see if "dvimake" script was edited today
ls -l src/dvimake | grep "$DATE" | sed 's/ /\
cp -v /g' | grep "dvimake" | sed 's/dvimake/dvimake new\/src/g' >> newmake.exe


# Searching to see if "exammake" script was edited today
ls -l src/exammake | grep "$DATE" | sed 's/ /\
cp -v /g' | grep "exammake" | sed 's/exammake/exammake new\/src/g' >> newmake.exe


# Searching to see if "randomexammake" script was edited today
ls -l src/randomexammake | grep "$DATE" | sed 's/ /\
cp -v /g' | grep "randomexammake" | sed 's/randomexammake/randomexammake new\/src/g' >> newmake.exe


# Searching for any Bash shell scripts (.bash) created or edited today
ls -l src/*.bash | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".bash" | sed 's/.bash/.bash new\/src/g' >> newmake.exe


# Searching for any HTML files (.html) created or edited today
ls -l doc/*.html | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".html" | sed 's/.html/.html new\/doc/g' >> newmake.exe


# Searching for any Encapsulated PS image files (.eps) created or edited today
ls -l doc/*.eps | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".eps" | sed 's/.eps/.eps new\/doc/g' >> newmake.exe


# Searching for any PNG image files (.png) created or edited today
ls -l doc/*.png | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".png" | sed 's/.png/.png new\/doc/g' >> newmake.exe


# Searching for any JPG image files (.jpg) created or edited today
ls -l doc/*.jpg | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".jpg" | sed 's/.jpg/.jpg new\/doc/g' >> newmake.exe


# Searching for any plain-text files (.txt) created or edited today
ls -l doc/*.txt | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".txt" | sed 's/.txt/.txt new\/doc/g' >> newmake.exe


# Searching for any Adobe PDF files (.pdf) created or edited today
ls -l design/*.pdf | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".pdf" | sed 's/.pdf/.pdf new\/design/g' >> newmake.exe


# Searching for any Gerber PCB layout files (.gbr) created or edited today
ls -l design/*.gbr | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".gbr" | sed 's/.gbr/.gbr new\/design/g' >> newmake.exe


# Searching for any CNC PCB-drill files (.cnc) created or edited today
ls -l design/*.cnc | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".cnc" | sed 's/.cnc/.cnc new\/design/g' >> newmake.exe


# Searching for JPEG image files (.jpg) created or edited today
ls -l design/*.jpg | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".jpg" | sed 's/.jpg/.jpg new\/design/g' >> newmake.exe



# Checking to see whether or not the main index.html file was edited today
ls -l index.html | grep "$DATE" | sed 's/ /\
cp -v /g' | grep "index.html" | sed 's/index.html/index.html new/g' >> newmake.exe


# Searching for any BASH shell scripts (.bash) created or edited today
ls -l scripts/*.bash | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".bash" | sed 's/.bash/.bash new\/scripts/g' >> newmake.exe


# Searching for any sed scripts (.sed) in the scripts/ directory created or edited today
ls -l scripts/*.sed | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".sed" | sed 's/.sed/.sed new\/scripts/g' >> newmake.exe


# Searching for textbook LaTeX files (.latex) created or edited today
ls -l book/*.latex | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".latex" | sed 's/.latex/.latex new\/book/g' >> newmake.exe


# Searching for textbook PDF files (.pdf) created or edited today
ls -l book/*.pdf | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".pdf" | sed 's/.pdf/.pdf new\/book/g' >> newmake.exe


# Searching for textbook Encapsulated PS image files (.eps) created or edited today
ls -l book/*.eps | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".eps" | sed 's/.eps/.eps new\/book/g' >> newmake.exe


# Searching for textbook JPEG image files (.jpg) created or edited today
ls -l book/*.jpg | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".jpg" | sed 's/.jpg/.jpg new\/book/g' >> newmake.exe


# Searching for textbook bitmap image files (.bmp) created or edited today
ls -l book/*.bmp | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".bmp" | sed 's/.bmp/.bmp new\/book/g' >> newmake.exe


# Searching for any C++ files (.cpp) created or edited today
ls -l book/*.cpp | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".cpp" | sed 's/.cpp/.cpp new\/book/g' >> newmake.exe


# Searching for any ePiX C++ files (.xp) created or edited today
ls -l book/*.xp | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".xp" | sed 's/.xp/.xp new\/book/g' >> newmake.exe


# Searching for any xcircuit libraries (.lps) created or edited today
ls -l book/*.lps | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".lps" | sed 's/.lps/.lps new\/book/g' >> newmake.exe


# Checking to see whether or not the book Makefile was edited today
ls -l book/*akefile | grep "$DATE" | sed 's/ /\
cp -v /g' | grep "akefile" | sed 's/akefile/akefile new\/book/g' >> newmake.exe


# Searching for any awk scripts (.awk) created or edited today
ls -l scripts/*.awk | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".awk" | sed 's/.awk/.awk new\/scripts/g' >> newmake.exe


# Checking to see whether or not the main Makefile was edited today
ls -l *akefile | grep "$DATE" | sed 's/ /\
cp -v /g' | grep "akefile" | sed 's/akefile/akefile new/g' >> newmake.exe


# Checking to see whether or not "buildws" GUI was edited today
ls -l buildws | grep "$DATE" | sed 's/ /\
cp -v /g' | grep "buildws" | sed 's/buildws/buildws new/g' >> newmake.exe


# Checking to see whether or not the src/ directory makefile was edited today
ls -l src/*akefile | grep "$DATE" | sed 's/ /\
cp -v /g' | grep "akefile" | sed 's/akefile/akefile new\/src/g' >> newmake.exe


# Checking to see whether or not the output/ directory makefile was edited today
ls -l output/*akefile | grep "$DATE" | sed 's/ /\
cp -v /g' | grep "akefile" | sed 's/akefile/akefile new\/output/g' >> newmake.exe


# UNCOMMENT THIS IF IBIBLIO CANNOT COMPILE WORKSHEETS USING TEX
# Searching for worksheet PDF files (.pdf) created or edited today
#ls -l output/*.pdf | grep "$DATE" | sed 's/ /\
#cp -v /g' | grep ".pdf" | sed 's/.pdf/.pdf new\/output/g' >> newmake.exe


# Searching for any PDF ebooks copied today
ls -l ebooks/*.pdf | grep "$DATE" | sed 's/ /\
cp -v /g' | grep ".pdf" | sed 's/.pdf/.pdf new\/ebooks/g' >> newmake.exe



# Set executable permission on new file "newmake.exe"
chmod a+x newmake.exe


# Executes script "newmake.exe", saving selected files to "new" directory
./newmake.exe


# Delete old copy script
rm -v newmake.exe

# Descend into new/ directory
pushd new

# Remove any old "sinst_new.tar" tarballs
rm -f sinst_new.tar

echo "Creating sinst_new tarball..."
tar cf sinst_new.tar *

popd

