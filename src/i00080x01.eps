%!PS-Adobe-3.0 EPSF-3.0
%%Title: i00080x01.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Fri Jul 28 05:47:06 2006
%%Pages: 1
%%BoundingBox: 68 68 480 333
%%DocumentNeededResources: font Helvetica font Helvetica-Oblique 
%%+ font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

/dot {
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/pump_centr {
begingate
1 1.00 0 16 32 0.00 360.00 xcarc
1 1.00 0 16 8 0.00 360.00 xcarc
1.000 1.000 1.000 scb
240 1.00 0 48 0 32 48 32 48 48 4 polygon
sce
1 1.00 0 48 48 48 48 32 28 32 4 polygon
1 1.00 -28 0 -44 -32 2 polygon
1 1.00 28 0 44 -32 2 polygon
1 1.00 -44 -32 44 -32 2 polygon
endgate
} def

/person {
begingate
1 1.00 1 56 22 0.00 360.00 xcarc
1 1.00 8 61 2 0.00 360.00 xcarc
1 1.00 -8 61 2 0.00 360.00 xcarc
1 1.00 -1 55 -3 51 -1 51 3 polygon
1 1.00 6 26 32 18 56 23 57 18 33 10 9 11 6 polygon
1 1.00 9 11 13 -21 24 -45 25 -69 21 -69 13 -46 0 -29 7 polygon
1 1.00 -9 11 -13 -21 -24 -45 -25 -69 -21 -69 -13 -46 0 -29 7 polygon
1 1.00 -25 -69 -27 -72 -37 -75 -38 -78 -19 -77 -21 -69 6 polygon
1 1.00 25 -69 27 -72 37 -75 38 -78 19 -77 21 -69 6 polygon
1 1.00 58 23 62 29 2 polygon
1 1.00 58 23 65 26 2 polygon
1 1.00 58 21 66 23 2 polygon
1 1.00 58 19 66 19 2 polygon
1 1.00 -3 34 -5 26 2 polygon
1 1.00 3 34 5 27 2 polygon
1 1.00 -6 26 -32 18 -56 23 -57 18 -33 10 -9 11 6 polygon
1 1.00 -57 23 -61 29 2 polygon
1 1.00 -57 23 -64 26 2 polygon
1 1.00 -57 21 -65 23 2 polygon
1 1.00 -57 19 -65 19 2 polygon
endgate
} def

%%Page: 5100x001.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 1232 544 offsets
0.7500 inchscale
2.6000 setlinewidth

241 1.00 976 988 992 1020 1008 988 976 988 4 polygon
241 1.00 920 784 936 784 952 776 904 776 spline
241 1.00 920 768 936 768 952 776 904 776 spline
(float) {/Helvetica cf} 2 16 0 1.00 976 848 label
1 1.00 960 988 1024 988 2 polygon
1 1.00 1024 988 1040 972 2 polygon
1 1.00 1008 988 1024 972 2 polygon
1 1.00 992 988 1008 972 2 polygon
1 1.00 976 988 992 972 2 polygon
1 1.00 960 988 976 972 2 polygon
1.00 150 952 1056 arrow
(stationary) {/Helvetica cf} 2 16 0 1.00 728 1144 label
(fulcrum) {/Helvetica-Oblique cf} (pivot, or ) {/Helvetica cf} 4 16 0 1.00 680 
1104 label
1.00 225 976 816 arrow
(scale) {/Helvetica cf} 2 16 0 1.00 1216 704 label
1.00 135 896 968 arrow
(cable) {/Helvetica cf} 2 16 0 1.00 800 1008 label
(lever) {/Helvetica cf} 2 16 345 1.00 1024 1056 label
1.00 0 1200 968 dot
1 1.00 1280 968 1200 968 2 polygon
0 1.00 1296 992 1296 736 1320 736 1320 992 4 polygon
1 1.00 1296 864 1304 864 2 polygon
1 1.00 1296 880 1304 880 2 polygon
1 1.00 1296 896 1304 896 2 polygon
1 1.00 1296 912 1304 912 2 polygon
1 1.00 1296 928 1304 928 2 polygon
1 1.00 1296 944 1304 944 2 polygon
1 1.00 1296 960 1304 960 2 polygon
1 1.00 1296 976 1304 976 2 polygon
1 1.00 1296 752 1304 752 2 polygon
1 1.00 1296 768 1304 768 2 polygon
1 1.00 1296 784 1304 784 2 polygon
1 1.00 1296 800 1304 800 2 polygon
1 1.00 1296 816 1304 816 2 polygon
1 1.00 1296 832 1304 832 2 polygon
1 1.00 1296 848 1304 848 2 polygon
1.00 45 1240 920 arrow
(pointer) {/Helvetica cf} 2 16 0 1.00 1120 864 label
241 1.00 1272 984 1288 968 1272 952 1272 984 4 polygon
0.361 0.675 0.933 scb
240 1.00 784 768 784 544 1072 544 1072 768 4 polygon
sce
1 2.00 784 864 784 544 1072 544 1072 864 4 polygon
(Water) {/Helvetica cf} 2 16 0 1.00 864 640 label
1 2.00 816 896 872 912 920 912 784 864 spline
1 2.00 1040 896 984 912 936 912 1072 864 spline
1 1.00 928 1008 928 784 2 polygon
0.400 0.400 0.400 scb
1 1.00 768 864 736 864 2 polygon
1.00 0 752 864 arrowhead
1 1.00 768 544 736 544 2 polygon
-1.00 180 752 544 arrowhead
(30 ft) {/Helvetica cf} 2 16 0 1.00 688 688 label
1 1.00 752 848 752 752 2 polygon
1 1.00 752 656 752 560 2 polygon
0.000 0.000 1.000 scb
(30 ft) {/Times-Roman cf} 2 16 0 0.70 1328 736 label
sce
1 2.00 848 544 848 480 400 480 3 polygon
1 1.00 544 496 528 480 544 464 3 polygon
(Water to town) {/Helvetica cf} 2 16 0 1.00 256 496 label
-1.00 0 1280 440 pump_centr
1 2.00 1008 544 1008 480 1232 480 3 polygon
(Well) {/Helvetica cf} 2 16 0 1.00 1328 256 label
(Pump) {/Helvetica cf} 2 16 0 1.00 1224 512 label
0.361 0.675 0.933 scb
240 1.00 1424 352 1424 272 1488 272 1488 352 4 polygon
sce
1 1.00 1424 384 1424 272 1488 272 1488 384 4 polygon
1 1.00 1120 496 1104 480 1120 464 3 polygon
1 1.00 1392 472 1376 456 1392 440 3 polygon
1.00 0 1584 576 person
3 1.00 1304 480 1408 608 1504 608 3 polygon
241 1.00 1568 664 1600 664 1600 648 1568 648 spline
1 1.00 1568 648 1552 648 2 polygon
(Bored) {/Helvetica cf} 2 16 0 1.00 1584 712 label
(person) {/Helvetica cf} 2 16 0 1.00 1576 680 label
5 1.00 1552 656 1352 832 2 polygon
1.00 315 1336 848 arrowhead
1 2.00 1280 456 1456 456 1456 288 3 polygon
(Reservoir) {/Helvetica cf} 2 16 0 1.00 664 912 label
0.000 0.000 1.000 scb
(20 ft) {/Times-Roman cf} 2 16 0 0.70 1328 984 label
(25 ft) {/Times-Roman cf} 2 16 0 0.70 1328 864 label
sce
1 5.00 1232 1104 928 1008 2 polygon
0.400 0.400 0.400 scb
1 4.00 1232 1104 928 1008 2 polygon
sce
1 1.00 1232 968 1232 1104 2 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
