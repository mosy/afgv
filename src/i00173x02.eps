%!PS-Adobe-3.0 EPSF-3.0
%%Title: 5300x022.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Thu Aug 15 14:37:35 2002
%%Pages: 1
%%BoundingBox: 68 68 256 317
%%DocumentNeededResources: font Helvetica font Helvetica-Oblique 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/arrowhead {
% -12 -32 24 36 bbox
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249  1.00 endpath
endgate
} def

/arrow {
% -12 -40 24 80 bbox
begingate
1  0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

/arrowhead90 {
% -20 -12 36 24 bbox
begingate
1.00 90 -16 0 arrowhead
endgate
} def

/dot {
% -10 -10 20 20 bbox
begingate
248  1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

%%Page: 5300x013.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 608 672 offsets
0.7500 inchscale
2.6000 setlinewidth

1  1.00 464 544 368 640 368 768 592 544 spline
1  1.00 464 992 368 896 368 768 592 992 spline
1  1.00 720 992 816 896 816 768 592 992 spline
1  1.00 464 528 352 624 352 768 592 528 spline
1  1.00 464 1008 352 912 352 768 592 1008 spline
1  1.00 720 1008 832 912 832 768 592 1008 spline
1  1.00 816 752 832 752 832 768 816 768 spline
1  3.00 592 544 592 560 656 560 656 448 640 448 640 416 6 polygon
1  3.00 608 416 608 448 592 448 592 528 4 polygon
1.00 0 624 368 arrow
(Applied) {/Helvetica 1.000 cf} 2 16 0 560 288 label
(pressure) {/Helvetica 1.000 cf} 2 16 0 552 256 label
0.600 0.600 0.600 scb
241  1.00 592 768 16 0.00 360.00 xcarc
sce
1  3.00 592 768 352 544 2 polygon
1.00 45 352 544 arrowhead90
(Pointer) {/Helvetica 1.000 cf} 2 16 0 256 496 label
0.600 0.600 0.600 scb
241  1.00 592 744 608 776 648 784 592 712 spline
sce
241  1.00 592 712 648 704 2 polygon
0.600 0.600 0.600 scb
241  1.00 648 784 672 728 2 polygon
241  1.00 816 792 848 776 840 760 808 776 spline
241  1.00 768 624 736 640 744 656 776 640 spline
241  1.00 808 776 744 656 776 640 840 760 808 776 5 polygon
sce
1  1.00 744 656 808 776 2 polygon
1  1.00 776 640 840 760 2 polygon
1  1.00 816 792 848 776 840 760 808 776 spline
1  1.00 768 624 736 640 744 656 776 640 spline
1.00 0 824 768 dot
0.600 0.600 0.600 scb
241  1.00 648 704 672 728 776 656 760 632 648 704 5 polygon
241  1.00 592 712 648 704 672 728 648 784 592 712 5 polygon
sce
1  1.00 592 744 616 784 648 784 592 712 spline
1  1.00 592 712 648 704 760 632 3 polygon
1  1.00 648 784 672 728 776 656 3 polygon
0.600 0.600 0.600 scb
241  1.00 792 648 768 624 760 632 776 656 spline
sce
1  1.00 792 648 768 624 760 632 776 656 spline
1.00 0 760 648 dot
1.00 0 656 720 dot
1  1.00 592 768 16 0.00 360.00 xcarc
1.00 0 592 768 dot
(Pressure gauge) {/Helvetica-Oblique 1.000 cf} 2 16 0 464 1088 label
(Bourdon) {/Helvetica 0.500 cf} 2 16 0 812 888 label
(tube) {/Helvetica 0.500 cf} 2 16 0 828 868 label
(mechanism) {/Helvetica-Oblique 1.000 cf} 2 16 0 496 1048 label
1.000 0.000 0.000 scb
1  1.00 848 784 896 832 2 polygon
1  1.00 880 832 896 832 896 816 3 polygon
1  1.00 776 680 808 728 2 polygon
1  1.00 792 728 808 728 808 712 3 polygon
1  1.00 638 748 617 734 623 711 646 750 spline
1  1.00 670 691 691 705 685 728 662 689 spline
1  1.00 613 717 623 711 629 721 3 polygon
1  1.00 679 718 685 728 695 722 3 polygon
1  1.00 544 800 560 816 592 816 544 768 spline
1  1.00 584 824 592 816 584 808 3 polygon
1  1.00 320 576 288 632 296 688 336 552 spline
1  1.00 280 680 296 688 304 680 3 polygon
sce
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
