%!PS-Adobe-3.0 EPSF-3.0
%%Title: i00200x02.eps
%%Creator: XCircuit v3.7 rev55
%%CreationDate: Sun Sep 20 11:43:00 2015
%%Pages: 1
%%BoundingBox: 68 68 370 207
%%DocumentNeededResources: font Helvetica Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/generic::arrow {
% nonetwork
begingate
1 0.800 0 -40 0 20 2 polygon
1.000 0 0 40 generic::arrowhead
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def

/::left_hand {
begingate
1 1.000 -13 40 -13 25 17 21 -32 51 spline
1 1.000 28 25 37 25 58 21 17 21 spline
1 1.000 -4 -2 9 2 26 -4 -17 -4 spline
1 1.000 -13 -30 -13 -34 -11 -17 -13 -45 spline
1 1.000 -6 -11 -2 -13 0 -17 -11 -17 spline
1 1.000 -6 -24 -6 -22 0 -19 -11 -17 spline
1 1.000 0 -30 -2 -30 0 -47 0 -17 spline
1 1.000 -2 -51 -8 -51 -13 -45 2 -45 spline
1 1.000 -17 -49 -21 -49 -23 -45 -13 -45 spline
1 1.000 -25 -34 -25 -24 -23 -19 -23 -45 spline
1 1.000 -19 -15 -19 -17 -15 -19 -23 -19 spline
1 1.000 -15 -26 -17 -28 -15 -45 -15 -19 spline
1 1.000 -21 -26 -19 -26 -17 -24 -23 -22 spline
1 1.000 -27 -39 -30 -28 -25 -11 -23 -43 spline
1 1.000 37 -17 32 -36 32 -45 37 6 spline
1 1.000 17 -30 17 -34 19 -17 17 -45 spline
1 1.000 24 -11 28 -13 30 -17 19 -17 spline
1 1.000 30 -30 28 -30 30 -47 30 -17 spline
1 1.000 24 -24 24 -22 30 -19 19 -17 spline
1 1.000 9 -11 13 -13 15 -17 4 -17 spline
1 1.000 9 -24 9 -22 15 -19 4 -17 spline
1 1.000 15 -30 13 -30 15 -47 15 -17 spline
1 1.000 28 -51 22 -51 17 -45 32 -45 spline
1 1.000 2 -30 2 -34 4 -17 2 -45 spline
1 1.000 13 -51 7 -51 2 -45 17 -45 spline
1 1.000 54 6 51 8 62 8 37 6 spline
1 1.000 71 21 69 10 62 8 58 21 spline
1 1.000 56 17 60 15 66 15 56 21 spline
1 1.000 -36 10 -47 4 -64 21 -25 -11 spline
endgate
} def

/::gauge {
begingate
0.604 0.604 0.604 scb
241 1.000 0 8 48 0.000 360.000 xcarc
sce
1 1.000 0 44 0 36 2 polygon
1 1.000 10 42 8 34 2 polygon
1 1.000 19 38 15 30 2 polygon
1 1.000 27 31 21 25 2 polygon
1 1.000 33 23 25 18 2 polygon
1 1.000 36 13 27 11 2 polygon
1 1.000 37 4 27 4 2 polygon
1 1.000 35 -5 26 -2 2 polygon
1 1.000 31 -13 23 -8 2 polygon
1 1.000 25 -20 19 -13 2 polygon
1 1.000 17 -25 13 -17 2 polygon
1 1.000 8 -28 7 -19 2 polygon
1 1.000 0 44 0 36 2 polygon
1 1.000 -10 42 -8 34 2 polygon
1 1.000 -19 38 -15 30 2 polygon
1 1.000 -27 31 -21 25 2 polygon
1 1.000 -33 23 -25 18 2 polygon
1 1.000 -36 13 -27 11 2 polygon
1 1.000 -37 4 -27 4 2 polygon
1 1.000 -35 -5 -26 -2 2 polygon
1 1.000 -31 -13 -23 -8 2 polygon
1 1.000 -25 -20 -19 -13 2 polygon
1 1.000 -17 -25 -13 -17 2 polygon
1 1.000 -8 -28 -7 -19 2 polygon
1.000 0 0 8 generic::dot
0.604 0.604 0.604 scb
241 1.000 -8 -40 -8 -56 8 -56 8 -40 -8 -40 5 polygon
sce
1 1.000 0 8 48 0.000 360.000 xcarc
1 1.000 -8 -40 -8 -56 8 -56 8 -40 4 polygon
endgate
} def


%%EndSetup

%%Page: 5700x013.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
0.6000 inchscale
2.6000 setlinewidth 863 559 translate

(From compressed ) {/Helvetica cf} 2 16 0 1.000 -544 192 label
(air supply) {/Helvetica cf} 2 16 0 1.000 -488 152 label
0.000 0.000 1.000 scb
1.000 90 -176 176 generic::arrow
sce
241 1.000 16 176 96 176 96 192 0 192 spline
241 1.000 16 176 96 176 96 160 0 160 spline
1 1.000 224 192 320 192 344 184 3 polygon
1 1.000 224 160 320 160 344 168 3 polygon
0.000 0.000 1.000 scb
1.000 90 -48 176 generic::arrow
1.000 90 160 176 generic::arrow
1.000 90 272 176 generic::arrow
sce
1 1.000 156 120 156 160 2 polygon
1 1.000 164 120 164 160 2 polygon
1 1.000 96 160 156 160 2 polygon
1 1.000 164 160 224 160 2 polygon
1 1.000 0 192 -128 192 2 polygon
1 1.000 176 -56 208 -56 208 -40 176 -40 spline
1 1.000 208 -24 240 -24 240 -40 208 -40 spline
1 1.000 240 -56 272 -56 272 -40 240 -40 spline
1 1.000 272 -24 304 -24 304 -40 272 -40 spline
1 1.000 304 -56 336 -56 336 -40 304 -40 spline
1 1.000 176 120 208 120 208 104 176 104 spline
1 1.000 208 88 240 88 240 104 208 104 spline
1 1.000 240 120 272 120 272 104 240 104 spline
1 1.000 272 88 304 88 304 104 272 104 spline
1 1.000 304 120 336 120 336 104 304 104 spline
1 1.000 336 -8 336 72 2 polygon
1 1.000 176 72 176 40 2 polygon
1 1.000 176 -8 176 24 2 polygon
241 1.000 360 32 336 16 336 48 360 32 4 polygon
0.604 0.604 0.604 scb
241 1.000 368 -224 8 0.000 360.000 xcarc
sce
-1.000 /sv 180 368 -224 generic::dot
1 1.000 368 -224 8 0.000 360.000 xcarc
1 1.000 360 -224 336 -224 2 polygon
1 1.000 376 -224 400 -224 2 polygon
1 1.000 336 -224 352 -240 2 polygon
1 1.000 352 -224 368 -240 2 polygon
1 1.000 376 -224 392 -240 2 polygon
1 1.000 392 -224 408 -240 2 polygon
(Pivot) {/Helvetica cf} 2 28 0 1.000 416 -208 label
-1.000 /sv 0 448 16 ::left_hand
0.000 1.000 0.000 scb
241 1.000 624 16 560 16 560 0 528 32 560 64 560 48 624 48 624 16 8 polygon
sce
(Applied) {/Helvetica cf} 2 28 0 1.000 640 72 label
(force) {/Helvetica cf} 2 28 0 1.000 664 32 label
1 1.000 176 -8 160 -24 2 polygon
1 1.000 176 8 160 -8 2 polygon
1 1.000 176 24 160 8 2 polygon
1 1.000 -128 160 0 160 2 polygon
1 1.000 156 232 156 192 2 polygon
1 1.000 96 192 156 192 2 polygon
1 1.000 164 232 164 192 2 polygon
1 1.000 164 192 224 192 2 polygon
1.000 0 160 288 ::gauge
1 2.000 160 296 136 328 2 polygon
(Bellows) {/Helvetica cf} 2 16 0 0.750 200 24 label
0.604 0.604 0.604 scb
240 1.000 360 64 360 -216 376 -216 376 64 4 polygon
sce
0 1.000 360 64 360 -216 376 -216 376 64 4 polygon
1 2.000 368 64 368 208 2 polygon
(Nozzle) {/Helvetica cf} 2 16 0 0.700 208 200 label
(Baffle) {/Helvetica cf} 2 16 0 0.700 384 176 label
1 1.000 176 -40 160 -56 2 polygon
1 1.000 176 -24 160 -40 2 polygon
1 1.000 176 -8 176 -40 2 polygon
1 1.000 336 -40 336 -8 2 polygon
1 1.000 176 104 176 72 2 polygon
1 1.000 336 104 336 72 2 polygon
1 1.000 312 192 312 232 2 polygon
1 1.000 312 216 296 232 2 polygon
1 1.000 312 200 296 216 2 polygon
1 1.000 312 120 312 160 2 polygon
1 1.000 312 136 296 152 2 polygon
1 1.000 312 120 296 136 2 polygon
1 1.000 176 40 164 40 164 120 3 polygon
1 1.000 156 120 156 24 176 24 3 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
