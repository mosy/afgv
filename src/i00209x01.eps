%!PS-Adobe-3.0 EPSF-3.0
%%Title: 5300x036.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Sat Aug 17 05:27:58 2002
%%Pages: 1
%%BoundingBox: 68 68 395 427
%%DocumentNeededResources: font Helvetica 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dot {
% -10 -10 20 20 bbox
begingate
248  1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/gauge {
% -48 -56 96 112 bbox
begingate
0.600 0.600 0.600 scb
241  1.00 0 8 48 0.00 360.00 xcarc
sce
1  1.00 0 44 0 36 2 polygon
1  1.00 10 42 8 34 2 polygon
1  1.00 19 38 15 30 2 polygon
1  1.00 27 31 21 25 2 polygon
1  1.00 33 23 25 18 2 polygon
1  1.00 36 13 27 11 2 polygon
1  1.00 37 4 27 4 2 polygon
1  1.00 35 -5 26 -2 2 polygon
1  1.00 31 -13 23 -8 2 polygon
1  1.00 25 -20 19 -13 2 polygon
1  1.00 17 -25 13 -17 2 polygon
1  1.00 8 -28 7 -19 2 polygon
1  1.00 0 44 0 36 2 polygon
1  1.00 -10 42 -8 34 2 polygon
1  1.00 -19 38 -15 30 2 polygon
1  1.00 -27 31 -21 25 2 polygon
1  1.00 -33 23 -25 18 2 polygon
1  1.00 -36 13 -27 11 2 polygon
1  1.00 -37 4 -27 4 2 polygon
1  1.00 -35 -5 -26 -2 2 polygon
1  1.00 -31 -13 -23 -8 2 polygon
1  1.00 -25 -20 -19 -13 2 polygon
1  1.00 -17 -25 -13 -17 2 polygon
1  1.00 -8 -28 -7 -19 2 polygon
1.00 0 0 8 dot
0.600 0.600 0.600 scb
241  1.00 -8 -40 -8 -56 8 -56 8 -40 -8 -40 5 polygon
sce
1  1.00 0 8 48 0.00 360.00 xcarc
1  1.00 -8 -40 -8 -56 8 -56 8 -40 4 polygon
endgate
} def

/valve_small {
% -48 -28 96 48 bbox
begingate
0.600 0.600 0.600 scb
240  1.00 -24 -4 -24 -28 32 -28 32 -4 4 polygon
240  1.00 -8 -4 -8 4 16 4 16 -4 4 polygon
sce
1  2.00 -8 20 16 20 2 polygon
1  1.00 4 20 4 4 2 polygon
0  1.00 -8 4 -8 -4 16 -4 16 4 4 polygon
0  1.00 -24 -4 -24 -28 32 -28 32 -4 4 polygon
1  2.00 -24 -16 -48 -16 2 polygon
1  2.00 32 -16 48 -16 2 polygon
endgate
} def

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 1072 896 offsets
0.7500 inchscale
2.6000 setlinewidth

1.00 0 1296 984 gauge
1  1.00 976 1248 1040 1152 1040 1056 880 1248 spline
1  1.00 560 1248 496 1152 496 1056 656 1248 spline
1  1.00 560 512 496 608 496 704 656 512 spline
1  1.00 976 512 1040 608 1040 704 880 512 spline
1  1.00 496 1056 496 704 2 polygon
1  1.00 656 1248 720 1248 720 1264 704 1264 704 1280 832 1280 832 1264 816 1264 
816 1248 880 1248 10 polygon
1  1.00 656 512 720 512 720 496 704 496 704 480 832 480 832 496 816 496 816 512 
880 512 10 polygon
1  1.00 1040 1056 1040 912 1056 912 1056 928 1072 928 1072 864 1056 864 1056 
880 1040 880 1040 704 10 polygon
1  1.00 720 1264 816 1264 2 polygon
1  1.00 1056 912 1056 880 2 polygon
1  1.00 720 496 816 496 2 polygon
1  1.00 720 512 816 512 2 polygon
1  1.00 1040 912 1040 880 2 polygon
1  1.00 720 1248 816 1248 2 polygon
0  1.00 704 1296 704 1280 832 1280 832 1296 4 polygon
1  1.00 720 1296 720 1344 2 polygon
1  1.00 816 1296 816 1344 2 polygon
1  1.00 720 1376 688 1408 656 1408 720 1344 spline
1  1.00 816 1440 752 1504 656 1504 816 1344 spline
1  1.00 656 1504 272 1504 2 polygon
1  1.00 656 1408 272 1408 2 polygon
1  1.00 272 1504 272 1472 256 1456 288 1456 272 1440 272 1408 6 polygon
0  1.00 704 464 704 480 832 480 832 464 4 polygon
1  1.00 720 464 720 416 2 polygon
1  1.00 816 464 816 416 2 polygon
1  1.00 720 384 688 352 656 352 720 416 spline
1  1.00 816 320 752 256 656 256 816 416 spline
1  1.00 656 256 272 256 2 polygon
1  1.00 656 352 272 352 2 polygon
1  1.00 272 256 272 288 256 304 288 304 272 320 272 352 6 polygon
(Process vessel) {/Helvetica 1.000 cf} 2 16 0 624 960 label
1  2.00 1296 992 1280 1024 2 polygon
0  1.00 1072 928 1072 864 1088 864 1088 928 4 polygon
1.00 0 1168 912 valve_small
1  2.00 1088 896 1120 896 2 polygon
1.00 270 1264 816 valve_small
1  2.00 1216 896 1296 896 1296 928 3 polygon
1  2.00 1248 896 1248 864 2 polygon
1  5.00 1232 896 1264 896 2 polygon
1  5.00 1248 896 1248 880 2 polygon
("block") {/Helvetica 1.000 cf} 2 16 0 1104 944 label
("bleed") {/Helvetica 1.000 cf} 2 16 0 1104 800 label
(Pressure ) {/Helvetica 1.000 cf} 2 16 0 1216 1088 label
(gauge) {/Helvetica 1.000 cf} 2 16 0 1248 1056 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
