%!PS-Adobe-3.0 EPSF-3.0
%%Title: i00287x04.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Sat Oct 14 17:01:59 2006
%%Pages: 1
%%BoundingBox: 68 68 454 255
%%DocumentNeededResources: font Helvetica font Helvetica-Oblique 
%%+ font Helvetica-BoldOblique 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dot {
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/air_compressor {
begingate
0.604 0.604 0.604 scb
241 1.00 -32 -48 48 0.00 360.00 xcarc
0.800 0.800 0.800 scb
240 1.00 -48 0 -48 64 -16 64 -16 0 4 polygon
sce
1 1.00 -64 48 0 48 2 polygon
1 1.00 -64 32 0 32 2 polygon
1 1.00 -64 16 0 16 2 polygon
1 1.00 -64 24 0 24 2 polygon
1 1.00 -64 40 0 40 2 polygon
1 1.00 -64 56 0 56 2 polygon
1 1.00 -64 8 0 8 2 polygon
1 1.00 -32 -48 16 0.00 360.00 xcarc
1.00 0 -32 -48 dot
1 3.00 -48 64 -64 80 2 polygon
1 3.00 -16 64 0 80 2 polygon
80 1.00 16 96 16 64 80 64 80 96 4 polygon
1 3.00 0 80 16 80 2 polygon
1 1.00 -32 -48 48 0.00 360.00 xcarc
0 1.00 -48 64 -48 0 -16 0 -16 64 4 polygon
endgate
} def

/valve_small {
begingate
0.604 0.604 0.604 scb
240 1.00 -24 -4 -24 -28 32 -28 32 -4 4 polygon
240 1.00 -8 -4 -8 4 16 4 16 -4 4 polygon
sce
1 2.00 -8 20 16 20 2 polygon
1 1.00 4 20 4 4 2 polygon
0 1.00 -8 4 -8 -4 16 -4 16 4 4 polygon
0 1.00 -24 -4 -24 -28 32 -28 32 -4 4 polygon
1 2.00 -24 -16 -48 -16 2 polygon
1 2.00 32 -16 48 -16 2 polygon
endgate
} def

/tube_tee {
begingate
1 5.00 16 16 -16 16 2 polygon
1 5.00 0 16 0 0 2 polygon
endgate
} def

/gauge {
begingate
0.604 0.604 0.604 scb
241 1.00 0 8 48 0.00 360.00 xcarc
sce
1 1.00 0 44 0 36 2 polygon
1 1.00 10 42 8 34 2 polygon
1 1.00 19 38 15 30 2 polygon
1 1.00 27 31 21 25 2 polygon
1 1.00 33 23 25 18 2 polygon
1 1.00 36 13 27 11 2 polygon
1 1.00 37 4 27 4 2 polygon
1 1.00 35 -5 26 -2 2 polygon
1 1.00 31 -13 23 -8 2 polygon
1 1.00 25 -20 19 -13 2 polygon
1 1.00 17 -25 13 -17 2 polygon
1 1.00 8 -28 7 -19 2 polygon
1 1.00 0 44 0 36 2 polygon
1 1.00 -10 42 -8 34 2 polygon
1 1.00 -19 38 -15 30 2 polygon
1 1.00 -27 31 -21 25 2 polygon
1 1.00 -33 23 -25 18 2 polygon
1 1.00 -36 13 -27 11 2 polygon
1 1.00 -37 4 -27 4 2 polygon
1 1.00 -35 -5 -26 -2 2 polygon
1 1.00 -31 -13 -23 -8 2 polygon
1 1.00 -25 -20 -19 -13 2 polygon
1 1.00 -17 -25 -13 -17 2 polygon
1 1.00 -8 -28 -7 -19 2 polygon
1.00 0 0 8 dot
0.604 0.604 0.604 scb
241 1.00 -8 -40 -8 -56 8 -56 8 -40 -8 -40 5 polygon
sce
1 1.00 0 8 48 0.00 360.00 xcarc
1 1.00 -8 -40 -8 -56 8 -56 8 -40 4 polygon
endgate
} def

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrowhead90 {
begingate
1.00 270 -16 0 arrowhead
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

%%Page: i00286x01.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 736 527 offsets
% 32.00 8.00 gridspace
0.7500 inchscale
2.6000 setlinewidth

-1.00 0 368 623 air_compressor
(Air compressor) {/Helvetica cf} 2 16 0 1.00 256 751 label
0.400 0.400 0.400 scb
241 1.00 576 655 576 527 640 527 640 655 spline
241 1.00 864 655 864 527 800 527 800 655 spline
240 1.00 640 655 640 527 800 527 800 655 4 polygon
sce
1 1.00 576 655 576 527 640 527 640 655 spline
1 1.00 864 655 864 527 800 527 800 655 spline
1 1.00 640 655 800 655 2 polygon
1 1.00 640 527 800 527 2 polygon
1.00 0 848 719 valve_small
1.00 0 720 687 tube_tee
1 1.00 720 687 720 655 2 polygon
1 1.00 736 703 800 703 2 polygon
1 1.00 704 703 640 703 2 polygon
1 6.00 1328 479 1328 303 2 polygon
1 6.00 1328 239 1408 239 1408 303 1328 303 spline
1 6.00 1408 479 1408 303 2 polygon
(Manometer) {/Helvetica cf} 2 16 0 1.00 1280 527 label
1.000 1.000 1.000 scb
1 4.00 1328 479 1328 303 2 polygon
1 4.00 1328 239 1408 239 1408 303 1328 303 spline
1 4.00 1408 479 1408 303 2 polygon
0.361 0.675 0.933 scb
1 3.00 1328 239 1408 239 1408 303 1328 303 spline
1 3.00 1328 303 1328 367 2 polygon
1 3.00 1408 303 1408 367 2 polygon
1 3.00 1408 351 1408 415 2 polygon
sce
1 1.00 432 703 640 703 2 polygon
(Receiver) {/Helvetica cf} 2 16 0 1.00 640 591 label
1.00 0 1104 839 gauge
0.604 0.604 0.604 scb
240 1.00 944 735 944 655 1008 655 1008 735 4 polygon
sce
1 1.00 976 735 976 767 2 polygon
1 1.00 960 767 992 767 2 polygon
0 1.00 944 735 944 655 1008 655 1008 735 4 polygon
1 1.00 896 703 944 703 2 polygon
1 1.00 1008 703 1088 703 2 polygon
-1.00 180 1104 719 tube_tee
1 1.00 1104 719 1104 783 2 polygon
1 2.00 1104 847 1064 863 2 polygon
1.000 0.000 0.000 scb
1.00 90 1200 607 valve_small
sce
1 1.00 1120 703 1184 703 1184 655 3 polygon
1.00 270 1200 511 tube_tee
1 1.00 1184 527 1184 559 2 polygon
1 1.00 1184 495 1184 463 2 polygon
1 1.00 1328 511 1280 511 1200 511 1328 479 spline
1.00 360 928 383 arrowhead90
(To instrument) {/Helvetica cf} 2 16 0 1.00 656 399 label
(under test) {/Helvetica cf} 2 16 0 1.00 688 359 label
(Pressure) {/Helvetica cf} 2 16 0 1.00 896 623 label
(regulator) {/Helvetica cf} 2 16 0 1.00 896 591 label
1.000 0.000 0.000 scb
1.00 240 1248 647 arrow
(not) {/Helvetica-BoldOblique cf} (This valve will ) {/Helvetica-Oblique cf} 4 
16 0 1.00 1280 687 label
(adjust pressure!) {/Helvetica-Oblique cf} 2 16 0 1.00 1296 647 label
sce
1 1.00 1184 399 1040 391 928 383 1184 463 spline
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
