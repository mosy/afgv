%!PS-Adobe-3.0 EPSF-3.0
%%Title: i00298x01.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Thu Sep 14 19:23:34 2006
%%Pages: 1
%%BoundingBox: 68 68 400 202
%%DocumentNeededResources: font Helvetica 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dot {
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

%%Page: 6700x013.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 864 480 offsets
% 32.00 8.00 gridspace
0.7500 inchscale
2.6000 setlinewidth

1.000 0.647 0.000 scb
240 1.00 352 544 352 256 1312 256 1312 544 4 polygon
240 1.00 272 384 272 320 416 320 416 384 4 polygon
240 1.00 1248 384 1248 320 1392 320 1392 384 4 polygon
sce
1 2.00 352 320 352 256 1312 256 1312 320 1408 320 5 polygon
1 2.00 352 320 256 320 2 polygon
1 2.00 1408 384 1312 384 1312 608 3 polygon
0.604 0.604 0.604 scb
240 1.00 320 704 320 608 400 608 400 704 4 polygon
sce
0 1.00 320 704 320 608 400 608 400 704 4 polygon
0.604 0.604 0.604 scb
240 1.00 400 672 400 640 448 640 448 672 4 polygon
sce
0 1.00 400 672 400 640 448 640 448 672 4 polygon
1 1.00 448 656 480 656 2 polygon
1.00 0 480 656 dot
0.000 1.000 0.000 scb
(Flow) {/Helvetica cf} 2 16 0 1.00 344 336 label
241 1.00 440 336 440 368 472 368 472 384 504 352 472 320 472 336 440 336 
8 polygon
(Flow) {/Helvetica cf} 2 16 0 1.00 1152 336 label
241 1.00 1248 336 1248 368 1280 368 1280 384 1312 352 1280 320 1280 336 1248 
336 8 polygon
sce
1.00 315 544 504 arrow
1.000 0.647 0.000 scb
241 1.00 512 544 520 552 528 544 536 552 544 544 552 552 560 544 568 552 576 
544 512 544 10 polygon
241 1.00 352 544 360 552 368 544 376 552 384 544 392 552 400 544 408 552 416 
544 352 544 10 polygon
sce
1 2.00 256 384 352 384 352 608 3 polygon
1.000 0.647 0.000 scb
241 1.00 416 544 424 552 432 544 440 552 448 544 456 552 464 544 472 552 480 
544 416 544 10 polygon
241 1.00 576 544 584 552 592 544 600 552 608 544 616 552 624 544 632 552 640 
544 576 544 10 polygon
241 1.00 640 544 648 552 656 544 664 552 672 544 680 552 688 544 696 552 704 
544 640 544 10 polygon
241 1.00 704 544 712 552 720 544 728 552 736 544 744 552 752 544 760 552 768 
544 704 544 10 polygon
241 1.00 768 544 776 552 784 544 792 552 800 544 808 552 816 544 824 552 832 
544 768 544 10 polygon
241 1.00 832 544 840 552 848 544 856 552 864 544 872 552 880 544 888 552 896 
544 832 544 10 polygon
241 1.00 896 544 904 552 912 544 920 552 928 544 936 552 944 544 952 552 960 
544 896 544 10 polygon
241 1.00 960 544 968 552 976 544 984 552 992 544 1000 552 1008 544 1016 552 
1024 544 960 544 10 polygon
241 1.00 1024 544 1032 552 1040 544 1048 552 1056 544 1064 552 1072 544 1080 
552 1088 544 1024 544 10 polygon
241 1.00 1088 544 1096 552 1104 544 1112 552 1120 544 1128 552 1136 544 1144 
552 1152 544 1088 544 10 polygon
241 1.00 1152 544 1160 552 1168 544 1176 552 1184 544 1192 552 1200 544 1208 
552 1216 544 1152 544 10 polygon
241 1.00 1216 544 1224 552 1232 544 1240 552 1248 544 1256 552 1264 544 1272 
552 1280 544 1216 544 10 polygon
241 1.00 1280 544 1288 552 1296 544 1304 552 1312 544 1280 544 6 polygon
sce
("choppy" liquid surface) {/Helvetica cf} 2 16 0 1.00 608 632 label
1.00 210 644 588 arrow
(LS) {/Helvetica cf} 2 16 0 1.00 336 640 label
0.800 0.800 0.800 scb
241 1.00 480 544 464 560 464 576 480 592 512 592 528 576 528 560 512 544 480 
544 9 polygon
sce
1 1.00 480 544 464 560 464 576 480 592 512 592 528 576 528 560 512 544 480 544 
9 polygon
1 1.00 480 656 496 592 2 polygon
(float) {/Helvetica cf} 2 16 0 0.50 476 564 label
(Turbulence will impose a) {/Helvetica cf} 2 16 0 1.00 584 488 label
(lateral force on the float, ) {/Helvetica cf} 2 16 0 1.00 584 448 label
(possibly causing a false trip) {/Helvetica cf} 2 16 0 1.00 568 408 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
