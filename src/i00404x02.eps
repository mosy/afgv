%!PS-Adobe-3.0 EPSF-3.0
%%Title: i00404x02.eps
%%Creator: XCircuit v3.7 rev26
%%CreationDate: Sat Nov  5 06:47:40 2011
%%Pages: 1
%%BoundingBox: 68 68 463 297
%%DocumentNeededResources: font Helvetica Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/analog::resistor {
begingate
1 1.000 0 64 0 36 2 polygon
1 1.000 0 -64 0 -36 2 polygon
1 1.000 0 -36 14 -30 -14 -18 14 -6 -14 6 14 18 -14 30 0 36 8 polygon
1.000 0.000 0.000 scb
(r.1) {/Times-Roman cf} 2 9 0 1.000 0 64 pinlabel
(r.2) {/Times-Roman cf} 2 13 0 1.000 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:R%i %pr.1 %pr.2 1.0K) {/Times-Roman cf} 2 0 0 1.000 -208 -160 infolabel
(sim:r %pr.1 %pr.2) {/Times-Roman cf} 2 0 0 1.000 -208 -208 infolabel
endgate
} def


%%EndSetup

%%Page: 5250x001.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
0.7500 inchscale
2.6000 setlinewidth 1200 1413 translate

0.824 0.706 0.549 scb
497 1.000 -752 -560 192 0.000 360.000 xcarc
sce
1 1.000 -752 -560 192 0.000 360.000 xcarc
0.604 0.604 0.604 scb
497 1.000 -848 -664 16 0.000 360.000 xcarc
sce
1 1.000 -848 -664 16 0.000 360.000 xcarc
1 1.000 -840 -652 -862 -670 2 polygon
1 1.000 -834 -658 -856 -676 2 polygon
0.604 0.604 0.604 scb
497 1.000 -784 -664 16 0.000 360.000 xcarc
sce
1 1.000 -784 -664 16 0.000 360.000 xcarc
1 1.000 -776 -652 -798 -670 2 polygon
1 1.000 -770 -658 -792 -676 2 polygon
0.604 0.604 0.604 scb
497 1.000 -720 -664 16 0.000 360.000 xcarc
sce
1 1.000 -720 -664 16 0.000 360.000 xcarc
1 1.000 -712 -652 -734 -670 2 polygon
1 1.000 -706 -658 -728 -676 2 polygon
0.604 0.604 0.604 scb
497 1.000 -656 -664 16 0.000 360.000 xcarc
sce
1 1.000 -656 -664 16 0.000 360.000 xcarc
1 1.000 -648 -652 -670 -670 2 polygon
1 1.000 -642 -658 -664 -676 2 polygon
0.604 0.604 0.604 scb
497 1.000 -784 -432 16 0.000 360.000 xcarc
sce
1 1.000 -784 -432 16 0.000 360.000 xcarc
1 1.000 -776 -420 -798 -438 2 polygon
1 1.000 -770 -426 -792 -444 2 polygon
0.604 0.604 0.604 scb
497 1.000 -720 -432 16 0.000 360.000 xcarc
sce
1 1.000 -720 -432 16 0.000 360.000 xcarc
1 1.000 -712 -420 -734 -438 2 polygon
1 1.000 -706 -426 -728 -444 2 polygon
1 1.000 -784 -384 -784 -400 2 polygon
1 1.000 -792 -392 -776 -392 2 polygon
1 1.000 -728 -392 -712 -392 2 polygon
(Loop power) {/Helvetica cf} 2 16 0 0.700 -824 -488 label
0 1.000 -768 -608 -768 -624 -736 -624 -736 -608 4 polygon
1 1.000 -768 -616 -784 -616 -784 -632 3 polygon
1 1.000 -784 -616 -848 -616 -848 -632 3 polygon
1 1.000 -736 -616 -720 -616 -720 -632 3 polygon
1 1.000 -720 -616 -656 -616 -656 -632 3 polygon
0 1.000 -768 -584 -768 -600 -736 -600 -736 -584 4 polygon
1 1.000 -768 -592 -848 -592 -848 -608 3 polygon
1 1.000 -784 -592 -784 -608 2 polygon
1 1.000 -736 -592 -720 -592 -720 -608 3 polygon
0 1.000 -768 -560 -768 -576 -736 -576 -736 -560 4 polygon
1 1.000 -736 -568 -720 -568 -720 -584 3 polygon
1 1.000 -768 -568 -784 -568 -784 -584 3 polygon
0 1.000 -880 -640 -880 -688 -816 -688 -816 -640 4 polygon
0 1.000 -816 -640 -816 -688 -752 -688 -752 -640 4 polygon
0 1.000 -752 -640 -752 -688 -688 -688 -688 -640 4 polygon
0 1.000 -688 -640 -688 -688 -624 -688 -624 -640 4 polygon
0 1.000 -816 -408 -816 -456 -752 -456 -752 -408 4 polygon
0 1.000 -752 -408 -752 -456 -688 -456 -688 -408 4 polygon
(Sensor) {/Helvetica cf} 2 16 0 0.700 -792 -720 label
0.824 0.706 0.549 scb
497 1.000 240 -560 192 0.000 360.000 xcarc
sce
1 1.000 240 -560 192 0.000 360.000 xcarc
0.604 0.604 0.604 scb
497 1.000 144 -664 16 0.000 360.000 xcarc
sce
1 1.000 144 -664 16 0.000 360.000 xcarc
1 1.000 152 -652 130 -670 2 polygon
1 1.000 158 -658 136 -676 2 polygon
0.604 0.604 0.604 scb
497 1.000 208 -664 16 0.000 360.000 xcarc
sce
1 1.000 208 -664 16 0.000 360.000 xcarc
1 1.000 216 -652 194 -670 2 polygon
1 1.000 222 -658 200 -676 2 polygon
0.604 0.604 0.604 scb
497 1.000 272 -664 16 0.000 360.000 xcarc
sce
1 1.000 272 -664 16 0.000 360.000 xcarc
1 1.000 280 -652 258 -670 2 polygon
1 1.000 286 -658 264 -676 2 polygon
0.604 0.604 0.604 scb
497 1.000 336 -664 16 0.000 360.000 xcarc
sce
1 1.000 336 -664 16 0.000 360.000 xcarc
1 1.000 344 -652 322 -670 2 polygon
1 1.000 350 -658 328 -676 2 polygon
0.604 0.604 0.604 scb
497 1.000 208 -432 16 0.000 360.000 xcarc
sce
1 1.000 208 -432 16 0.000 360.000 xcarc
1 1.000 216 -420 194 -438 2 polygon
1 1.000 222 -426 200 -444 2 polygon
0.604 0.604 0.604 scb
497 1.000 272 -432 16 0.000 360.000 xcarc
sce
1 1.000 272 -432 16 0.000 360.000 xcarc
1 1.000 280 -420 258 -438 2 polygon
1 1.000 286 -426 264 -444 2 polygon
1 1.000 208 -384 208 -400 2 polygon
1 1.000 200 -392 216 -392 2 polygon
1 1.000 264 -392 280 -392 2 polygon
(Loop power) {/Helvetica cf} 2 16 0 0.700 168 -488 label
0 1.000 224 -608 224 -624 256 -624 256 -608 4 polygon
1 1.000 224 -616 208 -616 208 -632 3 polygon
1 1.000 208 -616 144 -616 144 -632 3 polygon
1 1.000 256 -616 272 -616 272 -632 3 polygon
1 1.000 272 -616 336 -616 336 -632 3 polygon
0 1.000 224 -584 224 -600 256 -600 256 -584 4 polygon
1 1.000 224 -592 144 -592 144 -608 3 polygon
1 1.000 208 -592 208 -608 2 polygon
1 1.000 256 -592 272 -592 272 -608 3 polygon
0 1.000 224 -560 224 -576 256 -576 256 -560 4 polygon
1 1.000 256 -568 272 -568 272 -584 3 polygon
1 1.000 224 -568 208 -568 208 -584 3 polygon
0 1.000 112 -640 112 -688 176 -688 176 -640 4 polygon
0 1.000 176 -640 176 -688 240 -688 240 -640 4 polygon
0 1.000 240 -640 240 -688 304 -688 304 -640 4 polygon
0 1.000 304 -640 304 -688 368 -688 368 -640 4 polygon
0 1.000 176 -408 176 -456 240 -456 240 -408 4 polygon
0 1.000 240 -408 240 -456 304 -456 304 -408 4 polygon
(Sensor) {/Helvetica cf} 2 16 0 0.700 200 -720 label
1.000 90 -752 -1008 analog::resistor
1 1.000 -752 -1008 48 0.000 360.000 xcarc
(RTD) {/Helvetica cf} 2 16 0 1.000 -792 -1104 label
1.000 90 240 -1008 analog::resistor
1 1.000 240 -1008 48 0.000 360.000 xcarc
(RTD) {/Helvetica cf} 2 16 0 1.000 200 -1104 label
(\(3-wire\)) {/Helvetica cf} 2 16 0 1.000 -816 -1152 label
(\(4-wire\)) {/Helvetica cf} 2 16 0 1.000 176 -1152 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
