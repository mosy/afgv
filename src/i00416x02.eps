%!PS-Adobe-3.0 EPSF-3.0
%%Title: i00416x02.eps
%%Creator: XCircuit v3.7 rev55
%%CreationDate: Sun May 10 16:06:02 2015
%%Pages: 1
%%BoundingBox: 68 68 520 324
%%DocumentNeededResources: font Helvetica Helvetica-Bold Helvetica-Oblique 
%%+ font Times-Roman Courier Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/analog::resistor {
begingate
1 1.000 0 64 0 36 2 polygon
1 1.000 0 -64 0 -36 2 polygon
1 1.000 0 -36 14 -30 -14 -18 14 -6 -14 6 14 18 -14 30 0 36 8 polygon
1.000 0.000 0.000 scb
(r.1) {/Times-Roman cf} 2 9 0 1.000 0 64 pinlabel
(r.2) {/Times-Roman cf} 2 13 0 1.000 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:R%i %pr.1 %pr.2 1.0K) {/Times-Roman cf} 2 0 0 1.000 -208 -160 infolabel
(sim:r %pr.1 %pr.2) {/Times-Roman cf} 2 0 0 1.000 -208 -208 infolabel
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def

/generic::jumper {
% trivial
begingate
1 1.000 0 0 10 -90.000 90.000 xcarc
1 1.000 0 10 0 16 2 polygon
1 1.000 0 -10 0 -16 2 polygon
1.000 0.000 0.000 scb
(a) {/Times-Roman cf} 2 1 0 1.000 0 16 pinlabel
(a) {/Times-Roman cf} 2 13 0 1.000 0 -16 pinlabel
endgate
} def


%%EndSetup

%%Page: i00416x01 1
%%PageOrientation: Portrait
/pgsave save def bop
1.0000 inchscale
2.6000 setlinewidth 704 -138 translate

0.600 0.600 0.600 scb
496 1.000 -288 512 -288 480 -256 480 -256 512 4 polygon
sce
0 1.000 -288 512 -288 480 -256 480 -256 512 4 polygon
0.400 0.400 0.400 scb
497 1.000 -272 496 11 0.000 360.000 xcarc
sce
1 1.000 -272 496 11 0.000 360.000 xcarc
1 1.000 -266 504 -280 490 2 polygon
1 1.000 -264 502 -278 488 2 polygon
0.600 0.600 0.600 scb
496 1.000 -288 672 -288 640 -256 640 -256 672 4 polygon
sce
0 1.000 -288 672 -288 640 -256 640 -256 672 4 polygon
0.400 0.400 0.400 scb
497 1.000 -272 656 11 0.000 360.000 xcarc
sce
1 1.000 -272 656 11 0.000 360.000 xcarc
1 1.000 -266 664 -280 650 2 polygon
1 1.000 -264 662 -278 648 2 polygon
0.800 0.800 0.800 scb
497 1.000 -272 576 64 0.000 360.000 xcarc
sce
1 1.000 -272 576 64 0.000 360.000 xcarc
(Tach) {/Helvetica cf} 2 16 0 1.000 -320 560 label
0.000 0.000 1.000 scb
1 2.000 -272 632 -272 616 2 polygon
1 2.000 -280 624 -264 624 2 polygon
1 2.000 -280 528 -264 528 2 polygon
sce
(0-10 VDC) {/Times-Roman cf} 2 16 0 0.750 -496 592 label
(0-1500 RPM) {/Times-Roman cf} 2 16 0 0.750 -512 544 label
0.600 0.600 0.600 scb
496 1.000 160 960 160 928 192 928 192 960 4 polygon
sce
0 1.000 160 960 160 928 192 928 192 960 4 polygon
0.400 0.400 0.400 scb
497 1.000 176 944 11 0.000 360.000 xcarc
sce
1 1.000 176 944 11 0.000 360.000 xcarc
1 1.000 182 952 168 938 2 polygon
1 1.000 184 950 170 936 2 polygon
0.600 0.600 0.600 scb
496 1.000 160 896 160 864 192 864 192 896 4 polygon
sce
0 1.000 160 896 160 864 192 864 192 896 4 polygon
0.400 0.400 0.400 scb
497 1.000 176 880 11 0.000 360.000 xcarc
sce
1 1.000 176 880 11 0.000 360.000 xcarc
1 1.000 182 888 168 874 2 polygon
1 1.000 184 886 170 872 2 polygon
0.600 0.600 0.600 scb
496 1.000 160 832 160 800 192 800 192 832 4 polygon
sce
0 1.000 160 832 160 800 192 800 192 832 4 polygon
0.400 0.400 0.400 scb
497 1.000 176 816 11 0.000 360.000 xcarc
sce
1 1.000 176 816 11 0.000 360.000 xcarc
1 1.000 182 824 168 810 2 polygon
1 1.000 184 822 170 808 2 polygon
0.600 0.600 0.600 scb
496 1.000 160 768 160 736 192 736 192 768 4 polygon
sce
0 1.000 160 768 160 736 192 736 192 768 4 polygon
0.400 0.400 0.400 scb
497 1.000 176 752 11 0.000 360.000 xcarc
sce
1 1.000 176 752 11 0.000 360.000 xcarc
1 1.000 182 760 168 746 2 polygon
1 1.000 184 758 170 744 2 polygon
0.600 0.600 0.600 scb
496 1.000 160 704 160 672 192 672 192 704 4 polygon
sce
0 1.000 160 704 160 672 192 672 192 704 4 polygon
0.400 0.400 0.400 scb
497 1.000 176 688 11 0.000 360.000 xcarc
sce
1 1.000 176 688 11 0.000 360.000 xcarc
1 1.000 182 696 168 682 2 polygon
1 1.000 184 694 170 680 2 polygon
0.600 0.600 0.600 scb
496 1.000 160 640 160 608 192 608 192 640 4 polygon
sce
0 1.000 160 640 160 608 192 608 192 640 4 polygon
0.400 0.400 0.400 scb
497 1.000 176 624 11 0.000 360.000 xcarc
sce
1 1.000 176 624 11 0.000 360.000 xcarc
1 1.000 182 632 168 618 2 polygon
1 1.000 184 630 170 616 2 polygon
0.600 0.600 0.600 scb
496 1.000 160 448 160 416 192 416 192 448 4 polygon
sce
0 1.000 160 448 160 416 192 416 192 448 4 polygon
0.400 0.400 0.400 scb
497 1.000 176 432 11 0.000 360.000 xcarc
sce
1 1.000 176 432 11 0.000 360.000 xcarc
1 1.000 182 440 168 426 2 polygon
1 1.000 184 438 170 424 2 polygon
(Data cable) {/Helvetica cf} 2 16 0 1.000 480 768 label
(. . .) {/Helvetica cf} 2 16 90 1.000 544 432 label
(To computer) {/Helvetica-Oblique cf} 2 16 0 1.000 448 336 label
1 5.000 448 736 544 736 544 448 3 polygon
0.600 0.600 0.600 scb
496 1.000 160 576 160 544 192 544 192 576 4 polygon
sce
0 1.000 160 576 160 544 192 544 192 576 4 polygon
0.400 0.400 0.400 scb
497 1.000 176 560 11 0.000 360.000 xcarc
sce
1 1.000 176 560 11 0.000 360.000 xcarc
1 1.000 182 568 168 554 2 polygon
1 1.000 184 566 170 552 2 polygon
0.600 0.600 0.600 scb
496 1.000 160 512 160 480 192 480 192 512 4 polygon
sce
0 1.000 160 512 160 480 192 480 192 512 4 polygon
0.400 0.400 0.400 scb
497 1.000 176 496 11 0.000 360.000 xcarc
sce
1 1.000 176 496 11 0.000 360.000 xcarc
1 1.000 182 504 168 490 2 polygon
1 1.000 184 502 170 488 2 polygon
0.898 0.898 0.898 scb
496 1.000 192 992 192 384 448 384 448 992 4 polygon
sce
0 1.000 192 992 192 384 448 384 448 992 4 polygon
(DAQ) {/Helvetica-Bold cf} 2 16 0 1.000 336 936 label
(differential) {/Helvetica cf} 2 16 0 0.500 328 872 label
(IN 0+) {/Courier cf} 2 16 0 0.750 200 936 label
(IN 0-) {/Courier cf} 2 16 0 0.750 200 872 label
(IN 1+) {/Courier cf} 2 16 0 0.750 200 808 label
(IN 1-) {/Courier cf} 2 16 0 0.750 200 744 label
(IN 2+) {/Courier cf} 2 16 0 0.750 200 680 label
(IN 2-) {/Courier cf} 2 16 0 0.750 200 616 label
(AI Gnd) {/Courier cf} 2 16 0 0.750 200 424 label
(IN 3+) {/Courier cf} 2 16 0 0.750 200 552 label
(IN 3-) {/Courier cf} 2 16 0 0.750 200 488 label
(10 V) {/Times-Roman cf} (\261) {/Symbol cf} 4 16 0 0.750 336 896 label
0.647 0.165 0.165 scb
1.000 0 96 512 analog::resistor
1.000 0 16 512 analog::resistor
1 1.000 16 576 16 624 2 polygon
1.000 0 16 624 generic::dot
1.000 0 96 624 generic::jumper
1 1.000 96 608 96 576 2 polygon
1 1.000 96 640 96 688 2 polygon
1.000 0 96 688 generic::dot
1 1.000 160 688 -272 688 -272 672 3 polygon
1 1.000 -272 480 -272 464 -144 464 -144 624 160 624 5 polygon
1 1.000 96 448 96 432 160 432 3 polygon
1 1.000 160 432 144 416 16 416 16 448 4 polygon
0.804 0.000 0.000 scb
(\(alternative\)) {/Helvetica-Oblique cf} 2 16 90 0.500 136 576 label
3 1.000 160 624 128 592 128 464 160 432 4 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
