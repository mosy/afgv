%!PS-Adobe-3.0 EPSF-3.0
%%Title: i00479x04.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Sun Oct  8 17:35:46 2006
%%Pages: 1
%%BoundingBox: 68 68 289 364
%%DocumentNeededResources: font Helvetica font Helvetica-Oblique 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dp_cell {
begingate
0.604 0.604 0.604 scb
241 1.00 -48 -8 -16 -8 -16 -24 -48 -24 spline
241 1.00 -48 -120 -16 -120 -16 -104 -48 -104 spline
0.800 0.800 0.800 scb
240 1.00 0 -24 0 8 16 8 16 -24 4 polygon
0.000 0.000 1.000 scb
241 1.00 8 64 56 0.00 360.00 xcarc
0.604 0.604 0.604 scb
240 1.00 -48 -24 -48 -104 -16 -104 -16 -24 4 polygon
sce
241 1.00 -32 -64 8 0.00 360.00 xcarc
0.604 0.604 0.604 scb
241 1.00 32 -8 64 -8 64 -24 32 -24 spline
241 1.00 32 -120 64 -120 64 -104 32 -104 spline
240 1.00 32 -24 32 -104 64 -104 64 -24 4 polygon
sce
241 1.00 48 -64 8 0.00 360.00 xcarc
0.800 0.800 0.800 scb
240 1.00 -16 -24 -16 -104 32 -104 32 -24 4 polygon
sce
1 1.00 -48 -104 -48 -24 2 polygon
1 1.00 -16 -24 -16 -104 2 polygon
1 1.00 -48 -8 -16 -8 -16 -24 -48 -24 spline
1 1.00 -48 -120 -16 -120 -16 -104 -48 -104 spline
1 1.00 32 -120 64 -120 64 -104 32 -104 spline
1 1.00 32 -8 64 -8 64 -24 32 -24 spline
1 1.00 32 -24 32 -104 2 polygon
1 1.00 64 -24 64 -104 2 polygon
0 1.00 -16 -24 -16 -104 32 -104 32 -24 4 polygon
(H) {/Helvetica cf} 2 16 0 0.50 -40 -40 label
(L) {/Helvetica cf} 2 16 0 0.50 40 -40 label
0 1.00 0 8 0 -24 16 -24 16 8 4 polygon
1 1.00 8 64 56 0.00 360.00 xcarc
endgate
} def

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

%%Page: 5200x049.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 924 776 offsets
% 32.00 8.00 gridspace
0.7500 inchscale
2.6000 setlinewidth

0.604 0.604 0.604 scb
241 1.00 668 908 664 904 668 900 664 896 668 892 664 888 668 884 664 880 668 
876 664 872 668 868 664 864 668 860 664 856 668 852 664 848 668 844 664 840 668 
836 668 908 20 polygon
240 1.00 668 908 668 836 820 836 820 908 4 polygon
240 1.00 272 328 272 256 424 256 424 328 4 polygon
240 1.00 416 328 416 256 568 256 568 328 4 polygon
240 1.00 560 328 560 256 712 256 712 328 4 polygon
240 1.00 704 328 704 256 856 256 856 328 4 polygon
240 1.00 848 328 848 256 1000 256 1000 328 4 polygon
sce
1 1.00 668 908 664 904 668 900 664 896 668 892 664 888 668 884 664 880 668 876 
664 872 668 868 664 864 668 860 664 856 668 852 664 848 668 844 664 840 668 836 
960 836 960 908 668 908 22 polygon
1 1.00 272 328 1000 328 1000 256 272 256 272 328 5 polygon
1 1.00 272 908 272 616 256 598 288 566 272 550 272 256 6 polygon
1 1.00 1000 908 1000 616 984 598 1016 566 1000 550 1000 256 6 polygon
(Pipe wall) {/Helvetica cf} 2 16 0 1.00 564 280 label
0.604 0.604 0.604 scb
241 1.00 612 912 608 908 612 904 608 900 612 896 608 892 612 888 608 884 612 
880 608 876 612 872 608 868 612 864 608 860 612 856 608 852 612 848 608 844 612 
840 612 912 20 polygon
241 1.00 660 912 664 908 660 904 664 900 660 896 664 892 660 888 664 884 660 
880 664 876 660 872 664 868 660 864 664 860 660 856 664 852 660 848 664 844 660 
840 660 912 20 polygon
240 1.00 596 928 596 912 612 912 612 928 4 polygon
240 1.00 660 928 660 912 676 912 676 928 4 polygon
240 1.00 612 928 612 840 620 840 620 928 4 polygon
240 1.00 652 928 652 840 660 840 660 928 4 polygon
241 1.00 620 928 620 952 612 960 612 928 620 928 5 polygon
241 1.00 652 928 652 952 660 960 660 928 652 928 5 polygon
241 1.00 612 960 608 956 612 952 608 948 612 944 608 940 612 936 612 960 
8 polygon
241 1.00 660 960 664 956 660 952 664 948 660 944 664 940 660 936 660 960 
8 polygon
0.800 0.800 0.800 scb
241 1.00 624 952 612 964 612 972 624 984 624 952 5 polygon
241 1.00 648 952 660 964 660 972 648 984 648 952 5 polygon
0.604 0.604 0.604 scb
241 1.00 620 984 620 992 596 992 596 936 608 936 604 940 608 944 604 948 608 
952 604 956 608 960 608 972 620 984 13 polygon
241 1.00 652 984 652 992 676 992 676 936 664 936 668 940 664 944 668 948 664 
952 668 956 664 960 664 972 652 984 13 polygon
sce
1 1.00 624 984 612 972 612 964 624 952 624 984 5 polygon
1 1.00 648 984 660 972 660 964 648 952 648 984 5 polygon
1 1.00 620 984 620 992 596 992 596 936 608 936 604 940 608 944 604 948 608 952 
604 956 608 960 608 972 620 984 13 polygon
1 1.00 652 984 652 992 676 992 676 936 664 936 668 940 664 944 668 948 664 952 
668 956 664 960 664 972 652 984 13 polygon
1 1.00 612 960 608 956 612 952 608 948 612 944 608 940 612 936 612 928 596 928 
596 912 612 912 608 908 612 904 608 900 612 896 608 892 612 888 608 884 612 880 
608 876 612 872 608 868 612 864 608 860 612 856 608 852 612 848 608 844 612 840 
620 840 620 952 612 960 32 polygon
1 1.00 660 960 664 956 660 952 664 948 660 944 664 940 660 936 660 928 676 928 
676 912 660 912 664 908 660 904 664 900 660 896 664 892 660 888 664 884 660 880 
664 876 660 872 664 868 660 864 664 860 660 856 664 852 660 848 664 844 660 840 
652 840 652 952 660 960 32 polygon
1 10.00 636 484 636 1068 2 polygon
0.600 0.600 0.600 scb
1 8.00 636 484 636 1068 2 polygon
240 1.00 820 908 820 836 1000 836 1000 908 4 polygon
sce
(Pipe wall) {/Helvetica cf} 2 16 0 1.00 766 864 label
1 1.00 816 908 1000 908 1000 836 816 836 4 polygon
0.604 0.604 0.604 scb
241 1.00 604 836 608 840 604 844 608 848 604 852 608 856 604 860 608 864 604 
868 608 872 604 876 608 880 604 884 608 888 604 892 608 896 604 900 608 904 604 
908 604 836 20 polygon
240 1.00 604 836 604 908 452 908 452 836 4 polygon
sce
1 1.00 604 836 608 840 604 844 608 848 604 852 608 856 604 860 608 864 604 868 
608 872 604 876 608 880 604 884 608 888 604 892 608 896 604 900 608 904 604 908 
312 908 312 836 604 836 22 polygon
0.600 0.600 0.600 scb
240 1.00 452 836 452 908 272 908 272 836 4 polygon
sce
(Pipe wall) {/Helvetica cf} 2 31 0 1.00 546 888 label
1 1.00 456 836 272 836 272 908 456 908 4 polygon
0.000 0.000 1.000 scb
241 1.00 428 616 524 616 524 648 604 584 524 520 524 552 428 552 428 616 
8 polygon
(Flow) {/Helvetica-Oblique cf} 2 16 0 1.00 316 568 label
1.000 1.000 1.000 scb
241 1.00 636 688 636 672 628 672 628 688 spline
1 1.00 628 688 628 672 2 polygon
sce
1 1.00 636 688 636 672 628 672 628 688 spline
1.000 1.000 1.000 scb
241 1.00 636 632 636 616 628 616 628 632 spline
1 1.00 628 632 628 616 2 polygon
sce
1 1.00 636 632 636 616 628 616 628 632 spline
1.000 1.000 1.000 scb
241 1.00 636 576 636 560 628 560 628 576 spline
1 1.00 628 576 628 560 2 polygon
sce
1 1.00 636 576 636 560 628 560 628 576 spline
1.000 1.000 1.000 scb
241 1.00 636 520 636 504 628 504 628 520 spline
1 1.00 628 520 628 504 2 polygon
sce
1 1.00 636 520 636 504 628 504 628 520 spline
-1.00 0 428 1160 dp_cell
1 2.00 460 1096 636 1096 636 1080 3 polygon
1 2.00 380 1096 332 1096 332 840 3 polygon
1 4.00 332 832 332 952 2 polygon
(Holes) {/Helvetica cf} 2 16 0 1.00 428 696 label
1.00 105 580 688 arrow
(Pitot tube) {/Helvetica-Oblique cf} 2 16 0 1.00 716 1072 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
