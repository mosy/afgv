%!PS-Adobe-3.0 EPSF-3.0
%%Title: i00492x01.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Sun Nov 19 17:24:19 2006
%%Pages: 1
%%BoundingBox: 68 68 364 166
%%DocumentNeededResources: font Helvetica font Times-Italic font Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

%%Page: 6700x001.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 816 576 offsets
0.7500 inchscale
2.6000 setlinewidth

0.604 0.604 0.604 scb
240 1.00 256 576 256 544 1280 544 1280 576 4 polygon
sce
0 1.00 256 576 256 544 1280 544 1280 576 4 polygon
0.604 0.604 0.604 scb
240 1.00 256 288 256 256 1280 256 1280 288 4 polygon
sce
0 1.00 256 288 256 256 1280 256 1280 288 4 polygon
0.627 0.125 0.941 scb
(Fluid flow) {/Helvetica cf} 2 16 0 1.00 272 408 label
241 1.00 476 436 540 436 540 452 588 420 540 388 540 404 476 404 476 436 
8 polygon
0.604 0.604 0.604 scb
240 1.00 768 448 768 384 832 384 832 448 4 polygon
sce
0 1.00 768 448 768 384 832 384 832 448 4 polygon
0.000 0.000 1.000 scb
1 1.00 592 480 752 480 2 polygon
1 1.00 748 484 752 480 748 476 3 polygon
1 1.00 592 464 752 464 2 polygon
1 1.00 748 468 752 464 748 460 3 polygon
1 1.00 592 368 752 368 2 polygon
1 1.00 748 372 752 368 748 364 3 polygon
1 1.00 592 352 752 352 2 polygon
1 1.00 748 356 752 352 748 348 3 polygon
1 1.00 768 480 928 480 2 polygon
1 1.00 924 484 928 480 924 476 3 polygon
1 1.00 768 352 928 352 2 polygon
1 1.00 924 356 928 352 924 348 3 polygon
1 1.00 880 464 896 440 880 432 848 464 spline
1 1.00 872 424 840 432 856 448 880 432 spline
1 1.00 872 456 880 448 872 440 856 448 spline
1 1.00 870 446 872 440 880 442 3 polygon
1 1.00 768 464 848 464 2 polygon
1 1.00 960 368 976 392 960 400 928 368 spline
1 1.00 952 408 920 400 936 384 960 400 spline
1 1.00 952 376 960 384 952 392 936 384 spline
1 1.00 950 386 952 392 960 390 3 polygon
1 1.00 928 368 768 368 2 polygon
1 1.00 1040 464 1056 440 1040 432 1008 464 spline
1 1.00 1032 424 1000 432 1016 448 1040 432 spline
1 1.00 1032 456 1040 448 1032 440 1016 448 spline
1 1.00 1030 446 1032 440 1040 442 3 polygon
1 1.00 1008 464 912 464 2 polygon
1 1.00 1120 368 1136 392 1120 400 1088 368 spline
1 1.00 1112 408 1080 400 1096 384 1120 400 spline
1 1.00 1112 376 1120 384 1112 392 1096 384 spline
1 1.00 1110 386 1112 392 1120 390 3 polygon
1 1.00 1088 368 992 368 2 polygon
1 1.00 992 416 1152 416 2 polygon
1 1.00 1148 420 1152 416 1148 412 3 polygon
1 1.00 992 480 1152 480 2 polygon
1 1.00 1148 484 1152 480 1148 476 3 polygon
1 1.00 592 512 752 512 2 polygon
1 1.00 748 516 752 512 748 508 3 polygon
1 1.00 592 496 752 496 2 polygon
1 1.00 748 500 752 496 748 492 3 polygon
1 1.00 592 336 752 336 2 polygon
1 1.00 748 340 752 336 748 332 3 polygon
1 1.00 592 320 752 320 2 polygon
1 1.00 748 324 752 320 748 316 3 polygon
1 1.00 592 528 752 528 2 polygon
1 1.00 748 532 752 528 748 524 3 polygon
1 1.00 592 304 752 304 2 polygon
1 1.00 748 308 752 304 748 300 3 polygon
1 1.00 1148 532 1152 528 1148 524 3 polygon
1 1.00 1152 528 768 528 2 polygon
1 1.00 1148 516 1152 512 1148 508 3 polygon
1 1.00 1152 512 768 512 2 polygon
1 1.00 1148 500 1152 496 1148 492 3 polygon
1 1.00 1152 496 768 496 2 polygon
0.000 1.000 0.000 scb
240 1.00 848 424 848 408 896 408 896 424 4 polygon
(sensor) {/Helvetica cf} 2 16 0 0.50 848 392 label
sce
0 1.00 848 424 848 408 896 408 896 424 4 polygon
1 1.00 752 384 720 384 2 polygon
-1.00 180 736 384 arrowhead
1 1.00 752 448 720 448 2 polygon
1.00 0 736 448 arrowhead
(d) {/Times-Italic cf} 2 16 0 1.00 688 408 label
0.000 0.000 1.000 scb
1 1.00 768 336 928 336 2 polygon
1 1.00 924 340 928 336 924 332 3 polygon
1 1.00 768 320 928 320 2 polygon
1 1.00 924 324 928 320 924 316 3 polygon
1 1.00 768 304 928 304 2 polygon
1 1.00 924 308 928 304 924 300 3 polygon
sce
1.00 90 1120 336 arrowhead
1.00 270 960 336 arrowhead
(l) {/Symbol cf} 2 16 0 1.00 1032 328 label
1 1.00 976 336 1024 336 2 polygon
1 1.00 1064 336 1112 336 2 polygon
1 1.00 960 352 960 320 2 polygon
1 1.00 1120 352 1120 320 2 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
