%!PS-Adobe-3.0 EPSF-3.0
%%Title: i00919x01.eps
%%Creator: XCircuit v3.6 rev164
%%CreationDate: Sun Nov 14 13:26:21 2010
%%Pages: 1
%%BoundingBox: 68 68 436 263
%%DocumentNeededResources: font Helvetica Helvetica-Bold 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.3
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--7/13/05  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.3 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate
	0 0 moveto neg rotate dup scale cvx exec image grestore } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/junk::flange {
begingate
0.604 0.604 0.604 scb
496 1.000 -16 64 -16 -64 16 -64 16 64 4 polygon
sce
0 1.000 -16 64 -16 -64 16 -64 16 64 4 polygon
endgate
} def

/junk::pipe_elbow {
begingate
0.604 0.604 0.604 scb
240 1.000 -112 112 -112 -16 -80 -16 -80 112 4 polygon
240 1.000 -16 -80 -16 -112 112 -112 112 -80 4 polygon
1 1.000 -48 0 0 -48 0 -80 -80 0 spline
241 1.000 16 96 96 16 96 -80 -80 96 spline
241 1.000 -80 96 -80 0 16 0 -80 96 4 polygon
241 1.000 96 -80 16 -80 16 0 96 -80 4 polygon
240 1.000 0 0 0 -80 16 -80 16 0 4 polygon
241 1.000 -48 0 0 -48 0 0 -48 0 4 polygon
241 1.000 -72 0 -32 -16 -48 0 -72 0 4 polygon
241 1.000 0 -72 -16 -32 0 -48 0 -72 4 polygon
241 1.000 -52 -8 -28 -24 -8 -52 -20 -20 -52 -8 5 polygon
1 1.000 -48 -8 -4 -48 2 polygon
sce
1 1.000 16 96 96 16 96 -80 -80 96 spline
1 1.000 -48 0 0 -48 0 -80 -80 0 spline
0 1.000 -112 112 -112 -16 -80 -16 -80 112 4 polygon
0 1.000 -16 -80 -16 -112 112 -112 112 -80 4 polygon
endgate
} def

/junk::stud {
begingate
0.400 0.400 0.400 scb
496 1.000 0 4 0 -4 16 -4 16 4 4 polygon
496 1.000 8 8 8 -8 16 -8 16 8 4 polygon
sce
0 1.000 8 8 8 -8 16 -8 16 8 4 polygon
1 1.000 8 4 0 4 0 -4 8 -4 4 polygon
1 0.500 3 1 3 -1 2 polygon
1 0.500 5 1 5 -1 2 polygon
1 0.750 9 5 15 5 2 polygon
1 0.750 9 -5 15 -5 2 polygon
1 0.750 8 0 16 0 2 polygon
endgate
} def

/junk::dp_cell {
begingate
0.604 0.604 0.604 scb
241 1.000 -48 -8 -16 -8 -16 -24 -48 -24 spline
241 1.000 -48 -120 -16 -120 -16 -104 -48 -104 spline
0.800 0.800 0.800 scb
240 1.000 0 -24 0 8 16 8 16 -24 4 polygon
0.000 0.000 1.000 scb
241 1.000 8 64 56 0.000 360.000 xcarc
0.604 0.604 0.604 scb
240 1.000 -48 -24 -48 -104 -16 -104 -16 -24 4 polygon
sce
241 1.000 -32 -64 8 0.000 360.000 xcarc
0.604 0.604 0.604 scb
241 1.000 32 -8 64 -8 64 -24 32 -24 spline
241 1.000 32 -120 64 -120 64 -104 32 -104 spline
240 1.000 32 -24 32 -104 64 -104 64 -24 4 polygon
sce
241 1.000 48 -64 8 0.000 360.000 xcarc
0.800 0.800 0.800 scb
240 1.000 -16 -24 -16 -104 32 -104 32 -24 4 polygon
sce
1 1.000 -48 -104 -48 -24 2 polygon
1 1.000 -16 -24 -16 -104 2 polygon
1 1.000 -48 -8 -16 -8 -16 -24 -48 -24 spline
1 1.000 -48 -120 -16 -120 -16 -104 -48 -104 spline
1 1.000 32 -120 64 -120 64 -104 32 -104 spline
1 1.000 32 -8 64 -8 64 -24 32 -24 spline
1 1.000 32 -24 32 -104 2 polygon
1 1.000 64 -24 64 -104 2 polygon
0 1.000 -16 -24 -16 -104 32 -104 32 -24 4 polygon
(H) {/Helvetica cf} 2 16 0 0.500 -40 -40 label
(L) {/Helvetica cf} 2 16 0 0.500 40 -40 label
0 1.000 0 8 0 -24 16 -24 16 8 4 polygon
1 1.000 8 64 56 0.000 360.000 xcarc
endgate
} def

/junk::valve_small {
begingate
0.604 0.604 0.604 scb
240 1.000 -24 -4 -24 -28 32 -28 32 -4 4 polygon
240 1.000 -8 -4 -8 4 16 4 16 -4 4 polygon
sce
1 2.000 -8 20 16 20 2 polygon
1 1.000 4 20 4 4 2 polygon
0 1.000 -8 4 -8 -4 16 -4 16 4 4 polygon
0 1.000 -24 -4 -24 -28 32 -28 32 -4 4 polygon
1 2.000 -24 -16 -48 -16 2 polygon
1 2.000 32 -16 48 -16 2 polygon
endgate
} def

/::bigarrow6 {
begingate
0.000 0.933 0.000 scb
497 1.000 -48 -16 -48 16 16 16 16 32 64 0 16 -32 16 -16 -48 -16 8 polygon
endgate
} def

/junk::tube_tee {
begingate
1 5.000 16 16 -16 16 2 polygon
1 5.000 0 16 0 0 2 polygon
endgate
} def


%%EndSetup

%%Page: i00054x01.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 32.00 8.00 gridspace
0.7500 inchscale
2.6000 setlinewidth 1120 576 translate

1.000 0 -416 256 junk::flange
0.604 0.604 0.604 scb
497 1.000 -400 304 -256 272 -256 240 -400 208 -400 304 5 polygon
sce
1.000 0 176 256 junk::flange
0.604 0.604 0.604 scb
497 1.000 -256 272 160 304 160 208 -256 240 -256 272 5 polygon
sce
1 1.000 -400 304 -256 272 160 304 160 208 -256 240 -400 208 -400 304 7 polygon
1.000 0 -448 256 junk::flange
1.000 90 352 80 junk::flange
1.000 0 304 208 junk::pipe_elbow
0.604 0.604 0.604 scb
496 1.000 -464 304 -464 208 -688 208 -688 304 4 polygon
sce
1 1.000 -688 304 -464 304 -464 208 -688 208 4 polygon
0.604 0.604 0.604 scb
496 1.000 304 64 304 -320 400 -320 400 64 4 polygon
sce
1 1.000 304 -320 304 64 400 64 400 -320 4 polygon
1.000 0 -480 304 junk::stud
1.000 0 -480 272 junk::stud
1.000 0 -480 240 junk::stud
1.000 0 -480 208 junk::stud
1.000 0 144 208 junk::stud
1.000 0 144 240 junk::stud
1.000 0 144 272 junk::stud
1.000 0 144 304 junk::stud
-1.000 0 240 304 junk::stud
-1.000 0 240 272 junk::stud
-1.000 0 240 240 junk::stud
-1.000 0 240 208 junk::stud
-1.000 0 -384 304 junk::stud
-1.000 0 -384 272 junk::stud
-1.000 0 -384 240 junk::stud
-1.000 0 -384 208 junk::stud
-1.000 90 304 48 junk::stud
-1.000 90 336 48 junk::stud
-1.000 90 368 48 junk::stud
-1.000 90 400 48 junk::stud
-1.000 270 304 144 junk::stud
-1.000 270 336 144 junk::stud
-1.000 270 368 144 junk::stud
-1.000 270 400 144 junk::stud
-1.000 0 -560 0 junk::dp_cell
0.800 0.800 0.800 scb
496 1.000 -624 -128 -624 -208 -512 -208 -512 -128 4 polygon
sce
0 1.000 -624 -128 -624 -208 -512 -208 -512 -128 4 polygon
1 2.000 -624 -160 -656 -160 2 polygon
1 2.000 -656 -144 -656 -176 2 polygon
1 2.000 -512 -160 -480 -160 2 polygon
1 2.000 -480 -144 -480 -176 2 polygon
1 2.000 -568 -144 -568 -112 2 polygon
1 2.000 -584 -112 -552 -112 2 polygon
1 2.000 -608 -128 -608 -64 2 polygon
1 2.000 -528 -128 -528 -64 2 polygon
-1.000 270 -432 144 junk::valve_small
(3-valve) {/Helvetica cf} 2 16 0 0.500 -608 -176 label
(manifold) {/Helvetica cf} 2 16 0 0.500 -608 -200 label
1.000 0 -592 256 ::bigarrow6
1.000 90 352 -192 ::bigarrow6
-1.000 270 -272 192 junk::valve_small
1.000 90 -368 64 junk::tube_tee
-1.000 90 -336 128 junk::valve_small
1 2.000 -528 -208 -528 -240 -352 -240 -352 48 4 polygon
1 2.000 -368 64 -416 64 -416 96 3 polygon
-1.000 90 -176 128 junk::valve_small
1.000 90 -208 64 junk::tube_tee
1 2.000 -256 144 -256 64 -208 64 3 polygon
1 2.000 -608 -208 -608 -272 -192 -272 -192 48 4 polygon
(\(fill\)) {/Helvetica cf} 2 16 0 0.500 -208 192 label
(\(fill\)) {/Helvetica cf} 2 16 0 0.500 -368 192 label
-1.000 360 -656 -48 junk::valve_small
(\(bleed\)) {/Helvetica cf} 2 16 0 0.500 -776 -72 label
(Steam) {/Helvetica cf} 2 16 0 1.000 -832 240 label
(Venturi tube) {/Helvetica cf} 2 16 0 1.000 -296 320 label
3 1.000 -624 64 -800 64 2 polygon
(4-20 mA signal) {/Helvetica cf} 2 16 0 0.750 -864 80 label
(FT) {/Helvetica-Bold cf} 2 16 0 1.000 -592 48 label
1.000 0.000 0.000 scb
(V1) {/Helvetica-Bold cf} 2 16 0 0.750 -688 -16 label
(V2) {/Helvetica-Bold cf} 2 16 0 0.750 -712 -176 label
(V3) {/Helvetica-Bold cf} 2 16 0 0.750 -592 -96 label
(V4) {/Helvetica-Bold cf} 2 16 0 0.750 -464 -176 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
