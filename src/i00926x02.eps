%!PS-Adobe-3.0 EPSF-3.0
%%Title: i00926x02.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Wed Dec  6 20:26:16 2006
%%Pages: 1
%%BoundingBox: 68 68 443 301
%%DocumentNeededResources: font Helvetica 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

%%Page: i00667x01.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 954 704 offsets
% 32.00 2.00 gridspace
0.7500 inchscale
2.6000 setlinewidth

1 1.00 314 1056 314 320 1562 320 3 polygon
(Time) {/Helvetica cf} 2 16 0 1.00 842 256 label
1.00 90 1002 272 arrow
(Detector signal) {/Helvetica cf} 2 16 270 1.00 282 512 label
1.00 360 274 840 arrow
0.000 0.000 1.000 scb
1 1.00 318 344 326 344 338 340 346 344 354 344 362 340 374 340 382 344 390 340 
402 340 414 344 426 344 434 348 442 356 450 384 458 424 462 476 462 528 466 792 
470 444 470 396 474 376 478 360 486 352 490 348 498 344 518 340 522 344 530 344 
538 340 542 340 546 340 554 340 566 344 574 340 582 340 590 340 594 344 602 344 
606 344 610 344 622 344 626 344 634 340 638 344 646 348 654 348 670 352 678 344 
682 344 690 348 694 352 718 360 722 376 730 404 742 480 742 520 750 568 750 576 
754 540 762 504 766 424 766 396 770 376 770 372 774 364 774 360 782 356 798 344 
806 340 814 340 822 340 830 340 842 340 850 344 854 344 858 344 862 340 874 336 
890 340 894 340 902 340 910 340 914 340 922 340 930 344 946 340 950 340 958 344 
970 348 978 344 982 344 994 344 1002 348 1010 348 1022 348 1026 356 1038 400 
1042 532 1042 636 1050 512 1054 368 1058 356 1066 348 1078 348 1086 348 1094 
344 1098 344 1110 344 1114 344 1122 344 1126 348 1130 348 1138 348 1154 344 
1162 344 1166 344 1174 348 1182 348 1190 344 1198 344 1206 344 1210 344 1218 
348 1222 356 1230 372 1238 392 1238 424 1242 444 1246 468 1250 492 1254 512 
1262 544 1266 556 1270 560 1274 560 1282 560 1286 552 1290 548 1290 540 1298 
520 1298 508 1298 496 1302 484 1306 464 1306 460 1306 440 1306 436 1310 420 
1310 404 1314 388 1318 388 1322 388 1330 388 1334 392 1334 396 1342 404 1350 
412 1354 424 1366 428 1374 424 1378 420 1382 412 1382 404 1386 400 1390 384 
1394 376 1398 368 1402 364 1410 356 1418 348 1422 348 1438 348 1446 348 1458 
344 1462 344 1474 344 1478 348 1486 348 1502 348 1506 344 1514 344 1518 344 
1530 348 1534 352 1538 352 1546 348 1550 348 1554 348 1562 352 190 polygon
0.627 0.125 0.941 scb
1 1.00 316 344 318 344 320 344 324 344 324 342 326 342 328 342 332 340 334 340 
338 342 342 342 344 342 346 342 348 344 350 344 352 344 356 342 360 340 362 340 
364 340 366 340 370 340 374 340 376 340 380 342 382 342 386 342 388 340 390 340 
398 340 402 340 404 340 406 340 408 340 412 342 414 342 420 340 422 340 424 342 
428 342 434 344 438 344 440 346 444 346 446 346 448 348 450 348 454 352 456 354 
458 356 462 360 466 364 470 370 470 374 470 380 472 384 474 390 476 396 476 398 
476 404 480 424 484 458 486 492 490 792 494 614 496 424 498 406 500 392 502 382 
506 368 514 358 520 354 524 348 530 346 534 346 536 346 540 346 542 344 546 344 
550 344 554 344 556 344 558 344 562 346 564 346 568 346 574 344 576 344 578 344 
582 342 584 342 594 340 598 340 604 344 608 344 610 346 612 346 616 346 618 344 
620 342 626 342 628 342 632 342 636 342 640 342 642 342 644 344 646 344 648 346 
650 346 656 346 662 346 668 346 672 346 674 346 678 346 680 346 684 346 686 344 
688 344 690 342 692 342 696 342 698 344 700 344 704 346 708 348 712 350 714 350 
724 352 726 354 732 354 736 354 736 356 740 354 742 352 744 350 746 348 750 348 
752 348 754 348 756 348 760 350 762 352 764 354 766 354 770 356 776 358 780 358 
782 360 786 362 788 364 790 364 790 366 792 366 792 368 796 374 798 378 798 384 
798 388 800 392 802 398 808 422 812 436 812 448 814 456 818 474 818 478 820 486 
820 490 820 496 820 498 822 506 822 522 822 536 826 558 830 576 838 534 848 492 
854 390 860 370 862 366 864 364 870 360 872 360 876 358 880 356 884 352 888 350 
894 348 896 348 902 346 906 344 908 342 916 342 926 342 934 342 940 342 952 340 
958 344 960 344 968 342 972 340 974 338 978 336 982 336 986 338 990 338 996 338 
1000 338 1004 340 1008 340 1016 340 1022 340 1026 342 1028 340 1042 340 1046 
342 1048 344 1056 346 1064 342 1066 342 1070 340 1074 340 1080 342 1080 344 
1086 346 1088 348 1096 348 1100 350 1106 350 1108 348 1116 344 1120 344 1126 
344 1136 346 1140 348 1146 350 1148 350 1152 350 1158 350 1160 350 1160 354 
1162 356 1166 360 1168 364 1170 374 1176 406 1180 466 1184 636 1190 514 1196 
394 1196 378 1198 376 1200 374 1200 372 1202 368 1202 366 1202 364 1204 362 
1204 360 1210 354 1212 354 1216 352 1222 352 1228 352 1236 350 1240 350 1244 
350 1252 350 1256 348 1262 346 1268 346 1272 346 1280 346 1282 348 1284 348 
1286 350 1294 352 1296 352 1310 348 1316 348 1318 346 1324 346 1340 350 1342 
352 1344 352 1346 352 1350 352 1352 352 1354 350 1356 348 1360 348 1364 346 
1370 346 1376 346 1382 346 1386 346 1388 348 1390 348 1392 350 1394 352 1398 
354 1400 358 1402 360 1404 362 1404 366 1408 370 1410 378 1412 384 1414 388 
1418 402 1418 436 1430 516 1440 556 1442 560 1444 562 1446 562 1448 564 1452 
564 1456 564 1458 562 1460 560 1462 560 1462 558 1464 556 1464 554 1466 552 
1470 552 1470 550 1470 546 1472 544 1474 536 1474 530 1476 524 1476 522 1474 
518 1474 510 1474 506 1476 500 1476 498 1476 494 1478 482 1478 480 1480 476 
1482 470 1484 468 1484 464 1484 460 1484 454 1484 452 1484 444 1486 436 1488 
432 1490 430 1490 428 1492 424 1494 422 1494 418 1496 416 1496 412 1500 406 
1504 404 1508 400 1510 400 1516 400 1520 400 1524 400 1526 402 1528 402 1530 
406 1532 408 1536 412 1536 414 1538 418 1540 422 1540 424 1542 428 1544 430 
1546 432 1548 434 1550 436 1554 438 1558 440 1560 442 1562 440 1564 440 
387 polygon
0.000 0.000 1.000 scb
(Old) {/Helvetica cf} 2 16 0 1.00 1038 738 label
1.00 195 1060 686 arrow
0.627 0.125 0.941 scb
(New) {/Helvetica cf} 2 16 0 1.00 1180 732 label
1.00 195 1200 680 arrow
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
