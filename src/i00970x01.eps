%!PS-Adobe-3.0 EPSF-3.0
%%Title: i00469x01.eps
%%Creator: XCircuit v3.6 rev164
%%CreationDate: Mon May 30 09:40:49 2011
%%Pages: 1
%%BoundingBox: 68 68 460 328
%%DocumentNeededResources: font Helvetica 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.3
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--7/13/05  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.3 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate
	0 0 moveto neg rotate dup scale cvx exec image grestore } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/::blower {
begingate
1.000 1.000 1.000 scb
241 1.000 0 16 22 0.000 360.000 xcarc
241 1.000 0 -16 22 0.000 360.000 xcarc
sce
1 1.000 -16 38 -30 20 -16 0 0 38 spline
1 1.000 16 38 30 20 16 0 0 38 spline
1 1.000 -16 -38 -30 -20 -16 0 0 -38 spline
1 1.000 16 -38 30 -20 16 0 0 -38 spline
endgate
} def

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/generic::arrow {
% nonetwork
begingate
1 0.800 0 -40 0 20 2 polygon
1.000 0 0 40 generic::arrowhead
endgate
} def

/::valve_globe_air {
begingate
1 1.000 -48 32 48 32 2 polygon
1 1.000 -48 -80 -48 -16 48 -80 48 -16 -48 -80 5 polygon
1 1.000 0 -48 0 32 2 polygon
1 1.000 -48 96 48 96 48 32 -48 32 spline
endgate
} def

/::field {
begingate
1 1.000 0 0 64 0.000 360.000 xcarc
endgate
} def


%%EndSetup

%%Page: i01692x01.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
0.7500 inchscale
2.6000 setlinewidth 776 544 translate

1.000 0 -128 0 ::blower
(Air) {/Helvetica cf} 2 16 0 1.000 -152 96 label
(blower) {/Helvetica cf} 2 16 0 1.000 -184 56 label
1 1.000 64 0 64 0.000 360.000 xcarc
1 1.000 32 96 32 -32 96 32 96 -128 4 polygon
1 1.000 -192 16 -150 16 2 polygon
1 1.000 -192 -16 -150 -16 2 polygon
1 1.000 -64 16 -106 16 2 polygon
1 1.000 -64 -16 -106 -16 2 polygon
1 1.000 -64 16 2 16 2 polygon
1 1.000 -64 -16 2 -16 2 polygon
1 1.000 192 16 126 16 2 polygon
1 1.000 192 -16 126 -16 2 polygon
1 1.000 224 16 256 32 256 80 192 16 spline
1 1.000 256 -16 288 16 288 80 192 -16 spline
1 1.000 256 80 144 144 2 polygon
1 1.000 288 80 400 144 2 polygon
1 1.000 144 144 144 320 64 352 3 polygon
1 1.000 64 384 144 352 144 448 3 polygon
1 1.000 256 512 144 448 2 polygon
1 1.000 288 512 400 448 2 polygon
1 1.000 256 512 256 576 2 polygon
1 1.000 288 512 288 576 2 polygon
1 1.000 480 272 400 304 400 208 3 polygon
1 1.000 400 208 400 144 2 polygon
1 1.000 480 304 400 336 400 448 3 polygon
0.824 0.706 0.549 scb
81 1.000 147 148 147 320 149 320 151 321 153 321 155 321 155 320 156 319 157 
318 162 317 165 318 166 320 169 320 170 320 173 320 174 319 175 320 177 320 187 
320 187 321 195 323 203 324 206 325 210 326 213 324 227 323 229 324 234 323 239 
321 245 319 246 319 254 320 260 323 263 324 269 320 270 320 280 317 283 315 288 
314 290 314 296 316 300 317 302 317 304 317 307 315 313 316 318 317 320 317 321 
317 322 317 335 312 338 314 348 312 356 311 357 312 359 312 362 312 364 312 380 
311 381 310 386 310 390 308 393 307 394 307 397 305 397 145 147 145 147 147 
68 polygon
sce
1.000 105 24 376 generic::arrow
(Wet feed in) {/Helvetica cf} 2 16 0 1.000 -176 400 label
1.000 105 512 280 generic::arrow
(Dry product) {/Helvetica cf} 2 16 0 1.000 512 296 label
(out) {/Helvetica cf} 2 16 0 1.000 584 256 label
1 1.000 -192 16 -288 16 2 polygon
1 1.000 -192 -16 -288 -16 2 polygon
0 1.000 -352 64 -352 -64 -288 -64 -288 64 4 polygon
1 1.000 -352 64 -288 -64 2 polygon
1 1.000 -352 -64 -288 64 2 polygon
1 1.000 -352 16 -448 16 2 polygon
1 1.000 -352 -16 -448 -16 2 polygon
(Filter) {/Helvetica cf} 2 16 0 1.000 -368 80 label
1.000 90 -480 0 generic::arrow
0.500 90 120 -152 ::valve_globe_air
1 1.000 96 -176 96 -224 -96 -224 3 polygon
1 1.000 -8 -216 0 -224 -8 -232 3 polygon
(Steam) {/Helvetica cf} 2 16 0 1.000 -232 -232 label
(Dryer) {/Helvetica cf} 2 16 0 1.000 224 400 label
3 1.000 160 -152 224 -152 2 polygon
1 1.000 288 544 336 544 2 polygon
1 1.000 776 104 784 96 792 104 3 polygon
1 1.000 360 -144 352 -152 360 -160 3 polygon
1 1.000 168 -144 160 -152 168 -160 3 polygon
1 1.000 280 -224 288 -216 296 -224 3 polygon
1 1.000 24 104 32 112 40 104 3 polygon
1 1.000 32 96 32 160 2 polygon
1 1.000 152 144 168 144 2 polygon
1 1.000 184 144 200 144 2 polygon
1 1.000 216 144 232 144 2 polygon
1 1.000 248 144 264 144 2 polygon
1 1.000 280 144 296 144 2 polygon
1 1.000 312 144 328 144 2 polygon
1 1.000 344 144 360 144 2 polygon
1 1.000 376 144 392 144 2 polygon
1 1.000 672 32 720 32 2 polygon
1 1.000 712 40 720 32 712 24 3 polygon
(SP) {/Helvetica cf} 2 16 0 0.500 632 24 label
1.000 0 400 544 ::field
3 1.000 464 544 784 544 784 96 3 polygon
(TT) {/Helvetica cf} 2 16 0 1.000 376 552 label
1.000 0 784 32 ::field
(TC) {/Helvetica cf} 2 16 0 1.000 752 40 label
(1a) {/Helvetica cf} 2 16 0 1.000 760 0 label
(1a) {/Helvetica cf} 2 16 0 1.000 384 512 label
1.000 0 384 32 ::field
(TT) {/Helvetica cf} 2 16 0 1.000 360 40 label
(1b) {/Helvetica cf} 2 16 0 1.000 368 0 label
1.000 0 288 -152 ::field
3 1.000 784 -32 784 -288 288 -288 288 -216 4 polygon
3 1.000 352 -152 384 -152 384 -32 3 polygon
1 1.000 304 88 328 64 2 polygon
(TC) {/Helvetica cf} 2 16 0 1.000 256 -144 label
(1b) {/Helvetica cf} 2 16 0 1.000 264 -184 label
1 1.000 88 -88 96 -80 104 -88 3 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
