%!PS-Adobe-3.0 EPSF-3.0
%%Title: i01121x01.eps
%%Creator: XCircuit v3.7 rev26
%%CreationDate: Sun Dec 15 18:41:16 2013
%%Pages: 1
%%BoundingBox: 68 68 519 300
%%DocumentNeededResources: font Helvetica Helvetica-Bold Helvetica-Oblique 
%%+ font Helvetica-BoldOblique 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/::valve_globe_air {
begingate
1 1.000 -48 32 48 32 2 polygon
1 1.000 -48 -80 -48 -16 48 -80 48 -16 -48 -80 5 polygon
1 1.000 0 -48 0 32 2 polygon
1 1.000 -48 96 48 96 48 32 -48 32 spline
endgate
} def

/::valve_globe_hand {
begingate
1 1.000 48 -64 48 0 -48 -64 -48 0 48 -64 5 polygon
1 1.000 0 -32 0 48 2 polygon
1 1.000 -32 48 32 48 2 polygon
endgate
} def

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/generic::arrow {
% nonetwork
begingate
1 0.800 0 -40 0 20 2 polygon
1.000 0 0 40 generic::arrowhead
endgate
} def


%%EndSetup

%%Page: i00675x01.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
0.6800 inchscale
2.6000 setlinewidth 650 858 translate

1.000 0 -112 32 ::valve_globe_air
1 1.000 -112 112 -112 128 -16 128 -16 80 -112 0 5 polygon
(Pressure regulator) {/Helvetica cf} 2 16 0 1.000 -256 160 label
1 2.000 96 48 96 256 2 polygon
1 1.000 80 160 96 144 112 160 3 polygon
1 1.000 80 -176 96 -192 112 -176 3 polygon
1 2.000 96 -288 96 -80 2 polygon
1 1.000 -16 0 0 -16 -16 -32 3 polygon
1 1.000 -224 0 -208 -16 -224 -32 3 polygon
1 1.000 208 0 224 -16 208 -32 3 polygon
1 1.000 880 0 896 -16 880 -32 3 polygon
0.804 0.000 0.000 scb
241 1.000 -352 -192 -224 -192 -224 -272 -352 -272 spline
240 1.000 -352 -272 -352 -480 -224 -480 -224 -272 4 polygon
sce
1 1.000 -352 -192 -224 -192 -224 -272 -352 -272 spline
1 1.000 -352 -272 -352 -480 -224 -480 -224 -272 4 polygon
1.000 270 -320 -112 ::valve_globe_hand
1 2.000 -288 -16 -288 -64 2 polygon
1 2.000 -288 -161 -288 -211 2 polygon
(Carrier gas) {/Helvetica cf} 2 16 0 1.000 -208 -392 label
(supply) {/Helvetica cf} 2 16 0 1.000 -168 -432 label
(Sample in) {/Helvetica-Oblique cf} 2 16 0 1.000 8 280 label
(Sample out) {/Helvetica-Oblique cf} 2 16 0 1.000 0 -328 label
(Column) {/Helvetica cf} 2 16 0 1.000 304 40 label
1 2.000 800 -16 960 -16 2 polygon
1 1.000 592 0 608 -16 592 -32 3 polygon
1 2.000 512 -16 672 -16 2 polygon
0.824 0.706 0.549 scb
240 1.000 32 48 32 -80 160 -80 160 48 4 polygon
sce
0 1.000 32 48 32 -80 160 -80 160 48 4 polygon
0.824 0.706 0.549 scb
240 1.000 672 48 672 -80 800 -80 800 48 4 polygon
sce
0 1.000 672 48 672 -80 800 -80 800 48 4 polygon
1 5.000 256 -16 272 16 304 -48 336 16 368 -48 400 16 432 -48 464 16 496 -48 512 
-16 10 polygon
0.824 0.706 0.549 scb
1 3.000 256 -16 272 16 304 -48 336 16 368 -48 400 16 432 -48 464 16 496 -48 512 
-16 10 polygon
sce
(Shutoff valve) {/Helvetica cf} 2 16 0 1.000 -256 -128 label
(Vent) {/Helvetica-Oblique cf} 2 16 0 1.000 976 -32 label
(Sample valve) {/Helvetica cf} 2 16 0 1.000 152 128 label
1.000 225 168 88 generic::arrow
(Flame) {/Helvetica cf} 2 16 0 1.000 672 144 label
(ionization) {/Helvetica cf} 2 16 0 1.000 656 104 label
(detector) {/Helvetica cf} 2 16 0 1.000 664 64 label
(FID) {/Helvetica cf} 2 16 0 1.000 704 -24 label
0.804 0.000 0.000 scb
240 1.000 480 -368 480 -576 608 -576 608 -368 4 polygon
sce
1 1.000 480 -368 480 -576 608 -576 608 -368 4 polygon
0.804 0.000 0.000 scb
241 1.000 480 -288 608 -288 608 -368 480 -368 spline
sce
1 1.000 480 -288 608 -288 608 -368 480 -368 spline
1.000 270 512 -208 ::valve_globe_hand
1 2.000 544 -257 544 -307 2 polygon
(Shutoff valve) {/Helvetica cf} 2 16 0 1.000 208 -216 label
1 2.000 544 -160 544 -48 672 -48 3 polygon
1 1.000 616 -32 632 -48 616 -64 3 polygon
(2) {ss} (H) {/Helvetica-Bold cf} 4 16 0 1.000 520 -440 label
(Hydrogen gas) {/Helvetica cf} 2 16 0 1.000 208 -480 label
(supply) {/Helvetica cf} 2 16 0 1.000 264 -520 label
0.800 0.800 0.800 scb
240 1.000 672 -400 672 -512 800 -512 800 -400 4 polygon
0.000 0.000 1.000 scb
0 1.000 672 -400 672 -512 800 -512 800 -400 4 polygon
1.000 1.000 1.000 scb
240 1.000 688 -416 688 -496 784 -496 784 -416 4 polygon
0.000 0.000 1.000 scb
1 1.000 690 -488 694 -486 696 -486 698 -488 700 -488 700 -486 702 -486 704 -488 
706 -486 708 -482 710 -448 712 -446 714 -448 716 -484 718 -486 720 -488 722 
-488 726 -486 728 -488 730 -488 732 -486 736 -488 738 -488 740 -488 740 -486 
742 -486 744 -474 746 -472 748 -474 750 -484 752 -486 756 -488 758 -486 760 
-486 762 -488 764 -488 766 -488 770 -488 770 -486 774 -486 774 -488 776 -488 
780 -486 782 -488 44 polygon
(Analog) {/Helvetica cf} 2 16 0 1.000 824 -432 label
(chart) {/Helvetica cf} 2 16 0 1.000 840 -472 label
(recorder) {/Helvetica cf} 2 16 0 1.000 816 -512 label
sce
(He) {/Helvetica-Bold cf} 2 16 0 1.000 -320 -352 label
0.678 1.000 0.184 scb
496 1.000 800 -128 800 -288 1056 -288 1056 -128 4 polygon
sce
0 1.000 800 -128 800 -288 1056 -288 1056 -128 4 polygon
(GC) {/Helvetica cf} 2 16 0 1.000 880 -192 label
(computer) {/Helvetica cf} 2 16 0 1.000 832 -240 label
3 1.000 736 -80 736 -192 800 -192 3 polygon
1 1.000 784 -176 800 -192 784 -208 3 polygon
0.000 0.000 1.000 scb
3 1.000 736 -192 736 -400 2 polygon
1 1.000 720 -384 736 -400 752 -384 3 polygon
(\(temporary\)) {/Helvetica cf} 2 16 0 1.000 784 -560 label
sce
3 1.000 1056 -144 1152 -144 2 polygon
1 1.000 1136 -128 1152 -144 1136 -160 3 polygon
(4-20 mA analog signal) {/Helvetica-Oblique cf} 2 16 0 0.500 1168 -152 label
3 1.000 1056 -208 1152 -208 2 polygon
1 1.000 1136 -192 1152 -208 1136 -224 3 polygon
(4-20 mA analog signal) {/Helvetica-Oblique cf} 2 16 0 0.500 1168 -216 label
3 1.000 1056 -272 1152 -272 2 polygon
1 1.000 1136 -256 1152 -272 1136 -288 3 polygon
(4-20 mA analog signal) {/Helvetica-Oblique cf} 2 16 0 0.500 1168 -280 label
1 2.000 -288 -16 -160 -16 2 polygon
1 2.000 -64 -16 32 -16 2 polygon
1 2.000 160 -16 256 -16 2 polygon
1.000 0.000 0.000 scb
1 2.000 832 -96 1024 -320 2 polygon
1 2.000 1024 -96 832 -320 2 polygon
(Failed!) {/Helvetica-BoldOblique cf} 2 16 0 1.000 864 -96 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
