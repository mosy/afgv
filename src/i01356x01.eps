%!PS-Adobe-3.0 EPSF-3.0
%%Title: i01356x01.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Thu Dec 14 20:19:09 2006
%%Pages: 1
%%BoundingBox: 68 68 523 324
%%DocumentNeededResources: font Helvetica font Helvetica-Oblique 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/valve_globe_air {
begingate
1 1.00 -48 32 48 32 2 polygon
1 1.00 -48 -80 -48 -16 48 -80 48 -16 -48 -80 5 polygon
1 1.00 0 -48 0 32 2 polygon
1 1.00 -48 96 48 96 48 32 -48 32 spline
endgate
} def

/valve_globe_hand {
begingate
1 1.00 48 -64 48 0 -48 -64 -48 0 48 -64 5 polygon
1 1.00 0 -32 0 48 2 polygon
1 1.00 -32 48 32 48 2 polygon
endgate
} def

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

%%Page: i00675x01.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 784 832 offsets
% 32.00 8.00 gridspace
0.7500 inchscale
2.6000 setlinewidth

1.00 0 544 864 valve_globe_air
1 1.00 544 944 544 960 640 960 640 912 544 832 5 polygon
(Pressure regulator) {/Helvetica cf} 2 16 0 1.00 400 992 label
1 2.00 816 880 816 1088 2 polygon
1 1.00 800 992 816 976 832 992 3 polygon
1 1.00 800 656 816 640 832 656 3 polygon
1 2.00 816 544 816 752 2 polygon
1 1.00 672 832 688 816 672 800 3 polygon
1 1.00 416 832 432 816 416 800 3 polygon
1 1.00 960 832 976 816 960 800 3 polygon
1 1.00 1664 832 1680 816 1664 800 3 polygon
3 1.00 1520 752 1520 576 2 polygon
1 1.00 1504 672 1520 656 1536 672 3 polygon
0.804 0.000 0.000 scb
241 1.00 272 640 400 640 400 560 272 560 spline
240 1.00 272 560 272 352 400 352 400 560 4 polygon
sce
1 1.00 272 640 400 640 400 560 272 560 spline
1 1.00 272 560 272 352 400 352 400 560 4 polygon
1.00 270 304 720 valve_globe_hand
1 2.00 336 816 336 768 2 polygon
1 2.00 336 671 336 621 2 polygon
(Carrier gas) {/Helvetica cf} 2 16 0 1.00 416 520 label
(supply) {/Helvetica cf} 2 16 0 1.00 456 480 label
(Sample in) {/Helvetica-Oblique cf} 2 16 0 1.00 728 1112 label
(Sample out) {/Helvetica-Oblique cf} 2 16 0 1.00 720 504 label
(Column) {/Helvetica cf} 2 16 0 1.00 1088 872 label
1 2.00 1584 816 1744 816 2 polygon
1 1.00 1376 832 1392 816 1376 800 3 polygon
1 2.00 1296 816 1456 816 2 polygon
1 2.00 880 816 1040 816 2 polygon
1 2.00 592 816 752 816 2 polygon
0.824 0.706 0.549 scb
240 1.00 752 880 752 752 880 752 880 880 4 polygon
sce
0 1.00 752 880 752 752 880 752 880 880 4 polygon
0.824 0.706 0.549 scb
240 1.00 1456 880 1456 752 1584 752 1584 880 4 polygon
sce
0 1.00 1456 880 1456 752 1584 752 1584 880 4 polygon
1 2.00 336 816 496 816 2 polygon
1 5.00 1040 816 1056 848 1088 784 1120 848 1152 784 1184 848 1216 784 1248 848 
1280 784 1296 816 10 polygon
0.824 0.706 0.549 scb
1 3.00 1040 816 1056 848 1088 784 1120 848 1152 784 1184 848 1216 784 1248 848 
1280 784 1296 816 10 polygon
sce
(Shutoff valve) {/Helvetica cf} 2 16 0 1.00 368 704 label
(Vent) {/Helvetica-Oblique cf} 2 16 0 1.00 1760 800 label
(Sample valve) {/Helvetica cf} 2 16 0 1.00 872 960 label
1.00 225 888 920 arrow
(Flame) {/Helvetica cf} 2 16 0 1.00 1456 976 label
(ionization) {/Helvetica cf} 2 16 0 1.00 1440 936 label
(detector) {/Helvetica cf} 2 16 0 1.00 1448 896 label
(FID) {/Helvetica cf} 2 16 0 1.00 1488 808 label
0.804 0.000 0.000 scb
240 1.00 1264 464 1264 256 1392 256 1392 464 4 polygon
sce
1 1.00 1264 464 1264 256 1392 256 1392 464 4 polygon
0.804 0.000 0.000 scb
241 1.00 1264 544 1392 544 1392 464 1264 464 spline
sce
1 1.00 1264 544 1392 544 1392 464 1264 464 spline
1.00 270 1296 624 valve_globe_hand
1 2.00 1328 575 1328 525 2 polygon
(Shutoff valve) {/Helvetica cf} 2 16 0 1.00 992 616 label
1 2.00 1328 672 1328 784 1456 784 3 polygon
1 1.00 1400 800 1416 784 1400 768 3 polygon
(2) {ss} (H) {/Helvetica cf} 4 16 0 1.00 1304 392 label
(Hydrogen gas) {/Helvetica cf} 2 16 0 1.00 1408 384 label
(supply) {/Helvetica cf} 2 16 0 1.00 1464 344 label
0.800 0.800 0.800 scb
240 1.00 1456 576 1456 464 1584 464 1584 576 4 polygon
sce
0 1.00 1456 576 1456 464 1584 464 1584 576 4 polygon
1.000 1.000 1.000 scb
240 1.00 1472 560 1472 480 1568 480 1568 560 4 polygon
0.000 0.000 1.000 scb
1 1.00 1474 488 1478 490 1480 490 1482 488 1484 488 1484 490 1486 490 1488 488 
1490 490 1492 494 1494 528 1496 530 1498 528 1500 492 1502 490 1504 488 1506 
488 1510 490 1512 488 1514 488 1516 490 1520 488 1522 488 1524 488 1524 490 
1526 490 1528 502 1530 504 1532 502 1534 492 1536 490 1540 488 1542 490 1544 
490 1546 488 1548 488 1550 488 1554 488 1554 490 1558 490 1558 488 1560 488 
1564 490 1566 488 44 polygon
sce
(Analog) {/Helvetica cf} 2 16 0 1.00 1608 544 label
(chart) {/Helvetica cf} 2 16 0 1.00 1624 504 label
(recorder) {/Helvetica cf} 2 16 0 1.00 1600 464 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
