%!PS-Adobe-3.0 EPSF-3.0
%%Title: 8300x012.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Mon Jan 20 17:50:34 2003
%%Pages: 1
%%BoundingBox: 68 68 413 274
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/arrowhead {
% -12 -32 24 36 bbox
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249  1.00 endpath
endgate
} def

/arrow {
% -12 -40 24 80 bbox
begingate
1  0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

%%Page: 8200x010.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 880 576 offsets
0.7500 inchscale
2.6000 setlinewidth

0.800 0.800 0.800 scb
1  1.00 400 960 400 320 2 polygon
1  1.00 432 960 432 320 2 polygon
1  1.00 464 960 464 320 2 polygon
1  1.00 496 960 496 320 2 polygon
1  1.00 528 960 528 320 2 polygon
1  1.00 560 960 560 320 2 polygon
1  1.00 592 960 592 320 2 polygon
1  1.00 624 960 624 320 2 polygon
1  1.00 656 960 656 320 2 polygon
1  1.00 688 960 688 320 2 polygon
1  1.00 720 960 720 320 2 polygon
1  1.00 752 960 752 320 2 polygon
1  1.00 784 960 784 320 2 polygon
1  1.00 816 960 816 320 2 polygon
1  1.00 848 960 848 320 2 polygon
1  1.00 880 960 880 320 2 polygon
1  1.00 912 960 912 320 2 polygon
1  1.00 944 960 944 320 2 polygon
1  1.00 976 960 976 320 2 polygon
1  1.00 1008 960 1008 320 2 polygon
1  1.00 1040 960 1040 320 2 polygon
1  1.00 1072 960 1072 320 2 polygon
1  1.00 1104 960 1104 320 2 polygon
1  1.00 1136 960 1136 320 2 polygon
1  1.00 1168 960 1168 320 2 polygon
1  1.00 1200 960 1200 320 2 polygon
1  1.00 1232 960 1232 320 2 polygon
1  1.00 1264 960 1264 320 2 polygon
1  1.00 1296 960 1296 320 2 polygon
1  1.00 1328 960 1328 320 2 polygon
1  1.00 1360 960 1360 320 2 polygon
1  1.00 1392 960 1392 320 2 polygon
1  1.00 1424 960 1424 320 2 polygon
1  1.00 1456 960 1456 320 2 polygon
1  1.00 368 960 1456 960 2 polygon
1  1.00 368 928 1456 928 2 polygon
1  1.00 368 896 1456 896 2 polygon
1  1.00 368 864 1456 864 2 polygon
1  1.00 368 832 1456 832 2 polygon
1  1.00 368 800 1456 800 2 polygon
1  1.00 368 768 1456 768 2 polygon
1  1.00 368 736 1456 736 2 polygon
1  1.00 368 704 1456 704 2 polygon
1  1.00 368 672 1456 672 2 polygon
1  1.00 368 640 1456 640 2 polygon
1  1.00 368 608 1456 608 2 polygon
1  1.00 368 576 1456 576 2 polygon
1  1.00 368 544 1456 544 2 polygon
1  1.00 368 512 1456 512 2 polygon
1  1.00 368 480 1456 480 2 polygon
1  1.00 368 448 1456 448 2 polygon
1  1.00 368 416 1456 416 2 polygon
1  1.00 368 384 1456 384 2 polygon
1  1.00 368 352 1456 352 2 polygon
sce
1  1.00 368 960 368 320 1456 320 3 polygon
(Time) {/Helvetica 1.000 cf} 2 16 0 704 256 label
1.00 270 848 272 arrow
1  1.00 368 640 336 640 2 polygon
(0 V) {/Times-Roman 1.000 cf} 2 16 0 256 624 label
0.000 0.000 1.000 scb
(in) {ss} (V) {/Times-Roman 1.000 cf} 4 16 0 464 800 label
sce
0.627 0.125 0.941 scb
1  1.00 400 496 464 528 496 640 368 496 spline
sce
0.000 0.000 1.000 scb
1  1.00 464 784 400 752 368 640 496 784 spline
1  1.00 784 496 848 528 880 640 752 496 spline
1  1.00 720 496 656 528 624 640 752 496 spline
1  1.00 1040 784 1104 752 1136 640 1008 784 spline
1  1.00 976 784 912 752 880 640 1008 784 spline
1  1.00 1296 496 1360 528 1392 640 1264 496 spline
1  1.00 1232 496 1168 528 1136 640 1264 496 spline
1  1.00 1408 704 1440 752 1456 752 1392 640 spline
1  1.00 528 784 592 752 624 640 496 784 spline
sce
0.627 0.125 0.941 scb
1  1.00 592 784 528 752 496 640 624 784 spline
1  1.00 656 784 720 752 752 640 624 784 spline
1  1.00 848 496 784 528 752 640 880 496 spline
1  1.00 912 496 976 528 1008 640 880 496 spline
1  1.00 1104 784 1040 752 1008 640 1136 784 spline
1  1.00 1168 784 1232 752 1264 640 1136 784 spline
1  1.00 1360 496 1296 528 1264 640 1392 496 spline
1  1.00 1408 496 1440 512 1456 528 1392 496 spline
(out) {ss} (V) {/Times-Roman 1.000 cf} 4 16 0 592 800 label
sce
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
