%!PS-Adobe-3.0 EPSF-3.0
%%Title: i01558x11.eps
%%Creator: XCircuit v3.7 rev55
%%CreationDate: Mon May 11 06:40:42 2015
%%Pages: 1
%%BoundingBox: 68 68 511 227
%%DocumentNeededResources: font Helvetica Times-Roman Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/analog::resistor {
begingate
1 1.000 0 64 0 36 2 polygon
1 1.000 0 -64 0 -36 2 polygon
1 1.000 0 -36 14 -30 -14 -18 14 -6 -14 6 14 18 -14 30 0 36 8 polygon
1.000 0.000 0.000 scb
(r.1) {/Times-Roman cf} 2 9 0 1.000 0 64 pinlabel
(r.2) {/Times-Roman cf} 2 13 0 1.000 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:R%i %pr.1 %pr.2 1.0K) {/Times-Roman cf} 2 0 0 1.000 -208 -160 infolabel
(sim:r %pr.1 %pr.2) {/Times-Roman cf} 2 0 0 1.000 -208 -208 infolabel
endgate
} def

/::field {
begingate
1 1.000 0 0 64 0.000 360.000 xcarc
endgate
} def

/analog::gnd {
% trivial
begingate
1 1.000 0 0 0 -32 2 polygon
1 1.000 -32 -32 32 -32 2 polygon
1 1.000 -18 -46 18 -46 2 polygon
1 1.000 -4 -60 4 -60 2 polygon
0.933 0.604 0.000 scb
(GND) {/Times-Roman cf} 2 1 0 1.000 0 0 pinglobal
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def


%%EndSetup

%%Page: lab25001.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 32.00 32.00 gridspace
0.5500 inchscale
2.6000 setlinewidth 1309 701 translate

0 1.000 -576 208 -576 80 -512 80 -512 208 4 polygon
1 1.000 -576 144 -512 144 2 polygon
(+) {/Helvetica cf} 2 16 0 1.000 -560 160 label
(-) {/Helvetica cf} 2 16 0 1.000 -560 96 label
0 1.000 288 208 288 144 352 144 352 208 4 polygon
0 1.000 288 144 288 80 352 80 352 144 4 polygon
-1.000 /sv 0 800 32 analog::resistor
(W) {/Symbol cf} (250) {/Times-Roman cf} 4 19 0 1.000 776 24 label
3 1.000 800 -32 848 -16 2 polygon
1.000 0 1024 80 ::field
1 1.000 960 80 1088 80 2 polygon
0 1.000 896 144 896 80 960 80 960 144 4 polygon
0 1.000 896 80 896 16 960 16 960 80 4 polygon
0 1.000 896 16 896 -48 960 -48 960 16 4 polygon
0 1.000 896 -48 896 -112 960 -112 960 -48 4 polygon
(+) {/Helvetica cf} 2 16 0 1.000 912 96 label
(L1) {/Helvetica cf} 2 16 0 1.000 904 -32 label
(L2) {/Helvetica cf} 2 16 0 1.000 904 -96 label
(G) {/Helvetica cf} 2 16 0 1.000 912 -160 label
(ES 120VAC) {/Helvetica cf} 2 16 0 1.000 912 -272 label
(60 Hz) {/Helvetica cf} 2 16 0 1.000 960 -320 label
0 1.000 896 -112 896 -176 960 -176 960 -112 4 polygon
(Field) {/Helvetica cf} 2 16 0 1.000 -80 336 label
(panel) {/Helvetica cf} 2 16 0 1.000 -80 304 label
1 1.000 -960 288 1152 288 2 polygon
(Field process area) {/Helvetica cf} 2 16 0 1.000 -736 328 label
1.000 0 704 -80 ::field
3 1.000 640 -80 768 -80 2 polygon
1 1.000 72 -31 104 -60 2 polygon
0 1.000 -96 144 -96 80 -32 80 -32 144 4 polygon
0 1.000 -96 208 -96 144 -32 144 -32 208 4 polygon
(8) {/Helvetica cf} 2 16 0 1.000 -80 160 label
(9) {/Helvetica cf} 2 16 0 1.000 -80 96 label
(TB64) {/Helvetica cf} 2 16 0 1.000 -112 240 label
(TB27) {/Helvetica cf} 2 16 0 1.000 272 240 label
(15) {/Helvetica cf} 2 16 0 1.000 296 160 label
(16) {/Helvetica cf} 2 16 0 1.000 296 96 label
(Control room) {/Helvetica cf} 2 16 0 1.000 656 320 label
0.700 /sv 0 928 72 analog::gnd
(P5) {/Helvetica cf} 2 16 0 1.000 32 320 label
(Field) {/Helvetica cf} 2 16 0 1.000 240 336 label
(panel) {/Helvetica cf} 2 16 0 1.000 240 304 label
3 1.000 848 112 896 112 2 polygon
(14) {/Helvetica cf} 2 16 0 1.000 -664 104 label
(14) {/Helvetica cf} 2 16 0 1.000 1000 40 label
(CBL 9) {/Helvetica cf} 2 16 0 1.000 -360 192 label
(CBL 41) {/Helvetica cf} 2 16 0 1.000 136 208 label
(P30) {/Helvetica cf} 2 16 0 1.000 352 320 label
0 1.000 576 208 576 144 640 144 640 208 4 polygon
0 1.000 576 144 576 80 640 80 640 144 4 polygon
3 1.000 352 176 576 176 2 polygon
(CBL 22) {/Helvetica cf} 2 16 0 1.000 392 200 label
(3) {/Helvetica cf} 2 16 0 1.000 592 160 label
(4) {/Helvetica cf} 2 16 0 1.000 592 96 label
3 1.000 848 -16 848 48 896 48 3 polygon
(TB40) {/Helvetica cf} 2 16 0 1.000 560 240 label
1 1.000 -640 144 64 0.000 360.000 xcarc
(TT) {/Helvetica cf} 2 16 0 1.000 -664 152 label
0 1.000 -96 16 -96 -48 -32 -48 -32 16 4 polygon
0 1.000 -96 80 -96 16 -32 16 -32 80 4 polygon
(10) {/Helvetica cf} 2 16 0 1.000 -88 32 label
(11) {/Helvetica cf} 2 16 0 1.000 -80 -32 label
1.000 0 64 16 analog::resistor
3 1.000 16 48 -32 48 2 polygon
0 1.000 -448 -112 -448 -240 -384 -240 -384 -112 4 polygon
1 1.000 -448 -176 -384 -176 2 polygon
(+) {/Helvetica cf} 2 16 0 1.000 -432 -160 label
(-) {/Helvetica cf} 2 16 0 1.000 -432 -224 label
(14) {/Helvetica cf} 2 16 0 1.000 -536 -216 label
1 1.000 -512 -176 64 0.000 360.000 xcarc
(TI) {/Helvetica cf} 2 16 0 1.000 -536 -168 label
3 1.000 -96 48 -256 48 -256 -144 -384 -144 4 polygon
(CBL 10) {/Helvetica cf} 2 16 0 1.000 -400 -24 label
1.000 0 112 -128 ::field
(14a) {/Helvetica cf} 2 16 0 1.000 80 -160 label
(14b) {/Helvetica cf} 2 16 0 1.000 672 -120 label
(TY) {/Helvetica cf} 2 16 0 1.000 672 -64 label
(TY) {/Helvetica cf} 2 16 0 1.000 80 -112 label
3 1.000 16 48 64 80 2 polygon
3 1.000 16 -16 -32 -16 2 polygon
3 1.000 16 -16 64 -48 2 polygon
(+) {/Helvetica cf} 2 16 0 1.000 -752 160 label
(-) {/Helvetica cf} 2 16 0 1.000 -752 96 label
0 1.000 -768 208 -768 80 -704 80 -704 208 4 polygon
1 1.000 -768 144 -704 144 2 polygon
3 1.000 -512 176 -96 176 2 polygon
1.000 0 -896 144 generic::dot
3 1.000 -896 144 -864 176 -768 176 3 polygon
3 1.000 -896 144 -864 112 -768 112 3 polygon
1 1.000 -848 8 64 0.000 360.000 xcarc
(14) {/Helvetica cf} 2 16 0 1.000 -872 -32 label
(TE) {/Helvetica cf} 2 16 0 1.000 -872 16 label
1 1.000 -888 112 -864 72 2 polygon
1 1.000 736 -24 768 8 2 polygon
3 1.000 -512 112 -96 112 2 polygon
3 1.000 -384 -208 -224 -208 -224 -16 -96 -16 4 polygon
3 1.000 -32 176 288 176 2 polygon
3 1.000 -32 112 -16 96 -16 64 -32 48 4 polygon
3 1.000 -32 -16 16 -64 80 -64 128 -16 128 112 288 112 6 polygon
3 1.000 352 112 576 112 2 polygon
1 1.000 -448 192 -448 96 -464 96 -464 192 spline
1 1.000 -480 192 -480 96 -464 96 -464 192 spline
1 1.000 -112 192 -112 96 -128 96 -128 192 spline
1 1.000 -144 192 -144 96 -128 96 -128 192 spline
1 1.000 -112 64 -112 -32 -128 -32 -128 64 spline
1 1.000 -144 64 -144 -32 -128 -32 -128 64 spline
1 1.000 -320 -128 -320 -224 -336 -224 -336 -128 spline
1 1.000 -352 -128 -352 -224 -336 -224 -336 -128 spline
1 1.000 272 192 272 96 256 96 256 192 spline
1 1.000 240 192 240 96 256 96 256 192 spline
1 1.000 176 192 176 96 160 96 160 192 spline
1 1.000 144 192 144 96 160 96 160 192 spline
1 1.000 400 192 400 96 384 96 384 192 spline
1 1.000 368 192 368 96 384 96 384 192 spline
1 1.000 560 192 560 96 544 96 544 192 spline
1 1.000 528 192 528 96 544 96 544 192 spline
(TIR) {/Helvetica cf} 2 16 0 1.000 992 96 label
(ES +28 VDC) {/Helvetica cf} 2 16 0 1.000 888 240 label
3 1.000 896 48 864 16 864 -240 736 -240 4 polygon
(ES DC Gnd) {/Helvetica cf} 2 16 0 1.000 520 -256 label
(W) {/Symbol cf} (250) {/Times-Roman cf} 4 19 0 1.000 112 96 label
3 1.000 640 112 896 112 2 polygon
3 1.000 800 96 864 96 896 112 3 polygon
3 1.000 960 -144 992 -144 992 -240 3 polygon
3 1.000 960 -80 1024 -80 1024 -240 3 polygon
3 1.000 960 -16 1056 -16 1056 -240 3 polygon
3 1.000 864 256 800 256 800 176 640 176 4 polygon
0 1.000 -960 384 -960 -352 1152 -352 1152 384 4 polygon
1 1.000 480 -352 480 384 2 polygon
1 1.000 192 -352 192 384 2 polygon
1 1.000 -192 -352 -192 384 2 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
