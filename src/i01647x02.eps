%!PS-Adobe-3.0 EPSF-3.0
%%Title: i01647x02.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Wed Feb 28 20:14:34 2007
%%Pages: 1
%%BoundingBox: 68 68 409 299
%%DocumentNeededResources: font Helvetica font Helvetica-Oblique 
%%+ font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

%%Page: 8400x020.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 864 662 offsets
% 32.00 8.00 gridspace
0.7500 inchscale
2.6000 setlinewidth

0.800 0.800 0.800 scb
1 1.00 384 1046 384 406 2 polygon
1 1.00 416 1046 416 406 2 polygon
1 1.00 448 1046 448 406 2 polygon
1 1.00 480 1046 480 406 2 polygon
1 1.00 512 1046 512 406 2 polygon
1 1.00 544 1046 544 406 2 polygon
1 1.00 576 1046 576 406 2 polygon
1 1.00 608 1046 608 406 2 polygon
1 1.00 640 1046 640 406 2 polygon
1 1.00 672 1046 672 406 2 polygon
1 1.00 704 1046 704 406 2 polygon
1 1.00 736 1046 736 406 2 polygon
1 1.00 768 1046 768 406 2 polygon
1 1.00 800 1046 800 406 2 polygon
1 1.00 832 1046 832 406 2 polygon
1 1.00 864 1046 864 406 2 polygon
1 1.00 896 1046 896 406 2 polygon
1 1.00 928 1046 928 406 2 polygon
1 1.00 960 1046 960 406 2 polygon
1 1.00 992 1046 992 406 2 polygon
1 1.00 1024 1046 1024 406 2 polygon
1 1.00 1056 1046 1056 406 2 polygon
1 1.00 1088 1046 1088 406 2 polygon
1 1.00 1120 1046 1120 406 2 polygon
1 1.00 1152 1046 1152 406 2 polygon
1 1.00 1184 1046 1184 406 2 polygon
1 1.00 1216 1046 1216 406 2 polygon
1 1.00 1248 1046 1248 406 2 polygon
1 1.00 1280 1046 1280 406 2 polygon
1 1.00 1312 1046 1312 406 2 polygon
1 1.00 1344 1046 1344 406 2 polygon
1 1.00 1376 1046 1376 406 2 polygon
1 1.00 1408 1046 1408 406 2 polygon
1 1.00 1440 1046 1440 406 2 polygon
1 1.00 352 1046 1440 1046 2 polygon
1 1.00 352 1014 1440 1014 2 polygon
1 1.00 352 982 1440 982 2 polygon
1 1.00 352 950 1440 950 2 polygon
1 1.00 352 918 1440 918 2 polygon
1 1.00 352 886 1440 886 2 polygon
1 1.00 352 854 1440 854 2 polygon
1 1.00 352 822 1440 822 2 polygon
1 1.00 352 790 1440 790 2 polygon
1 1.00 352 758 1440 758 2 polygon
1 1.00 352 726 1440 726 2 polygon
1 1.00 352 694 1440 694 2 polygon
1 1.00 352 662 1440 662 2 polygon
1 1.00 352 630 1440 630 2 polygon
1 1.00 352 598 1440 598 2 polygon
1 1.00 352 566 1440 566 2 polygon
1 1.00 352 534 1440 534 2 polygon
1 1.00 352 502 1440 502 2 polygon
1 1.00 352 470 1440 470 2 polygon
1 1.00 352 438 1440 438 2 polygon
sce
1 1.00 352 1046 352 406 1440 406 3 polygon
(Time) {/Helvetica cf} 2 16 0 1.00 696 342 label
1.00 90 840 358 arrow
(0) {/Times-Roman cf} 2 16 0 0.50 328 398 label
(5) {/Times-Roman cf} 2 16 0 0.50 328 430 label
(10) {/Times-Roman cf} 2 16 0 0.50 320 462 label
(15) {/Times-Roman cf} 2 16 0 0.50 320 494 label
(20) {/Times-Roman cf} 2 16 0 0.50 320 526 label
(25) {/Times-Roman cf} 2 16 0 0.50 320 558 label
(30) {/Times-Roman cf} 2 16 0 0.50 320 590 label
(35) {/Times-Roman cf} 2 16 0 0.50 320 622 label
(40) {/Times-Roman cf} 2 16 0 0.50 320 654 label
(45) {/Times-Roman cf} 2 16 0 0.50 320 686 label
(50) {/Times-Roman cf} 2 16 0 0.50 320 718 label
(55) {/Times-Roman cf} 2 16 0 0.50 320 750 label
(60) {/Times-Roman cf} 2 16 0 0.50 320 782 label
(65) {/Times-Roman cf} 2 16 0 0.50 320 814 label
(70) {/Times-Roman cf} 2 16 0 0.50 320 846 label
(75) {/Times-Roman cf} 2 16 0 0.50 320 878 label
(80) {/Times-Roman cf} 2 16 0 0.50 320 910 label
(85) {/Times-Roman cf} 2 16 0 0.50 320 942 label
(90) {/Times-Roman cf} 2 16 0 0.50 320 974 label
(95) {/Times-Roman cf} 2 16 0 0.50 320 1006 label
(100) {/Times-Roman cf} 2 16 0 0.50 312 1038 label
(%) {/Times-Roman cf} 2 16 0 1.00 256 726 label
1.000 0.000 0.000 scb
3 1.00 352 726 1440 726 2 polygon
(SP) {/Helvetica cf} 2 16 0 1.00 384 686 label
0.000 0.000 1.000 scb
(PV) {/Helvetica cf} 2 16 0 1.00 466 742 label
0.627 0.125 0.941 scb
(Output) {/Helvetica cf} 2 16 0 1.00 468 566 label
1 1.00 352 662 360 658 368 662 372 654 388 650 400 650 416 642 428 630 452 630 
464 618 508 598 532 602 556 614 588 622 604 634 624 630 628 634 652 646 652 650 
660 662 668 658 688 662 700 670 708 674 720 670 724 678 740 678 752 674 760 670 
776 678 788 686 804 678 812 678 832 682 840 674 856 678 864 674 872 666 892 666 
904 674 912 674 924 670 932 678 952 686 968 694 972 686 996 686 1004 694 1024 
694 1440 694 50 polygon
sce
1 2.00 1008 298 1008 378 2 polygon
1 2.00 992 362 1008 378 1024 362 3 polygon
(Controller placed in "manual") {/Helvetica-Oblique cf} 2 16 0 1.00 768 262 
label
3 1.00 1008 390 1008 822 2 polygon
0.000 0.000 1.000 scb
1 1.00 352 730 356 730 364 726 372 730 384 730 392 726 400 730 416 730 432 726 
436 730 448 726 476 730 480 730 492 726 496 730 508 726 512 726 516 722 536 718 
536 722 540 726 548 722 556 722 560 726 576 726 584 730 588 730 592 726 612 726 
616 730 620 726 640 730 644 726 652 726 664 730 676 730 680 726 692 726 700 730 
724 730 728 726 744 726 744 722 752 726 760 726 768 722 780 722 788 726 796 722 
796 726 832 726 840 722 848 726 868 726 872 730 880 730 892 726 904 722 912 726 
964 726 968 730 976 730 976 726 1000 726 1012 730 1020 734 1032 734 1036 738 
1048 742 1052 750 1060 750 1072 750 1084 746 1100 750 1108 762 1112 766 1120 
762 1144 770 1152 766 1156 766 1164 766 1168 770 1180 774 1184 778 1196 778 
1200 774 1204 770 1212 766 1220 766 1224 766 1232 770 1236 778 1244 782 1256 
782 1260 782 1268 790 1272 794 1280 786 1284 782 1296 778 1300 778 1308 774 
1308 770 1320 762 1324 766 1336 758 1340 758 1352 758 1360 758 1368 762 1376 
758 1380 754 1388 754 1396 754 1400 758 1408 750 1412 750 1424 742 1428 742 
1432 742 1440 738 121 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
