%!PS-Adobe-3.0 EPSF-3.0
%%Title: i01661x01.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Mon Mar 12 19:22:13 2007
%%Pages: 1
%%BoundingBox: 68 68 341 364
%%DocumentNeededResources: font Helvetica 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/pump_centr {
begingate
1 1.00 0 16 32 0.00 360.00 xcarc
1 1.00 0 16 8 0.00 360.00 xcarc
1.000 1.000 1.000 scb
240 1.00 0 48 0 32 48 32 48 48 4 polygon
sce
1 1.00 0 48 48 48 48 32 28 32 4 polygon
1 1.00 -28 0 -44 -32 2 polygon
1 1.00 28 0 44 -32 2 polygon
1 1.00 -44 -32 44 -32 2 polygon
endgate
} def

/target {
begingate
0 1.00 -48 -48 -48 -144 48 -144 48 -48 4 polygon
1 2.00 -48 -96 -112 -96 2 polygon
1 2.00 112 -96 48 -96 2 polygon
1 1.00 0 64 64 0.00 360.00 xcarc
1 1.00 0 0 0 -48 2 polygon
1 1.00 0 -48 0 -96 -16 -96 3 polygon
1 1.00 -16 -64 -16 -128 2 polygon
endgate
} def

/field {
begingate
1 1.00 0 0 64 0.00 360.00 xcarc
endgate
} def

/square-root {
begingate
0 1.00 -32 16 -32 -32 16 -32 16 16 4 polygon
1 1.00 -24 -8 -16 -8 -8 -24 0 8 8 8 5 polygon
endgate
} def

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

%%Page: 8500x015.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 976 560 offsets
0.7500 inchscale
2.6000 setlinewidth

1.00 0 608 520 pump_centr
1.00 0 752 344 pump_centr
1.00 0 496 696 pump_centr
241 1.00 1040 1208 1032 1200 1040 1192 1048 1200 1040 1208 5 polygon
0.000 0.000 1.000 scb
1 1.00 1048 1208 1088 1272 2 polygon
1 1.00 1048 1208 1128 1232 2 polygon
1 1.00 1048 1208 1120 1240 2 polygon
1 1.00 1048 1208 1112 1248 2 polygon
1 1.00 1048 1208 1104 1256 2 polygon
1 1.00 1048 1208 1096 1264 2 polygon
1 1.00 1048 1208 1080 1280 2 polygon
sce
(Irrigation) {/Helvetica cf} 2 16 0 1.00 1040 1152 label
(sprinkler) {/Helvetica cf} 2 16 0 1.00 1048 1112 label
1.00 270 880 992 target
1 2.00 1040 1200 976 1152 976 1104 3 polygon
(FT) {/Helvetica cf} 2 16 0 1.00 792 976 label
1.00 0 592 992 field
3 1.00 656 992 752 992 2 polygon
(FI) {/Helvetica cf} 2 16 0 1.00 576 976 label
0.000 0.000 1.000 scb
1 1.00 336 752 340 744 344 740 352 732 352 728 360 724 360 720 364 712 368 704 
372 700 380 696 388 684 388 680 400 668 404 664 420 648 420 644 432 628 436 624 
444 608 448 608 448 604 452 596 456 592 468 580 480 564 484 564 488 556 492 548 
504 528 512 524 516 516 520 512 524 504 536 492 536 488 544 484 564 456 568 448 
572 448 576 436 588 424 592 416 596 412 600 408 608 404 608 396 616 380 628 372 
636 356 640 352 664 328 672 316 672 312 700 288 704 272 56 polygon
1 1.00 256 736 260 728 264 724 272 716 272 712 280 708 280 704 284 696 288 688 
292 684 300 680 308 668 308 664 320 652 324 648 340 632 340 628 352 612 356 608 
364 592 368 592 368 588 372 580 376 576 388 564 400 548 404 548 408 540 412 532 
424 512 432 508 436 500 440 496 444 488 456 476 456 472 464 468 484 440 488 432 
492 432 496 420 508 408 512 400 516 396 520 392 528 388 528 380 536 364 548 356 
556 340 560 336 584 312 592 300 592 296 620 272 624 256 56 polygon
sce
1 2.00 608 536 496 536 496 464 3 polygon
1 2.00 752 360 640 360 640 288 3 polygon
1 2.00 496 712 384 712 384 640 3 polygon
1 1.00 416 728 432 712 416 696 3 polygon
1 1.00 528 552 544 536 528 520 3 polygon
1 1.00 672 376 688 360 672 344 3 polygon
0.000 0.000 1.000 scb
(River) {/Helvetica cf} 2 16 45 1.00 384 592 label
sce
(Pump) {/Helvetica cf} 2 16 0 1.00 448 768 label
(Pump) {/Helvetica cf} 2 16 0 1.00 560 592 label
(Pump) {/Helvetica cf} 2 16 0 1.00 704 416 label
1.00 0 752 1072 square-root
1 1.00 752 704 752 768 2 polygon
1 1.00 816 704 816 768 2 polygon
1 1.00 752 768 816 704 2 polygon
1.00 90 784 784 arrow
1 2.00 544 736 752 736 2 polygon
1 2.00 816 736 976 736 2 polygon
1 1.00 816 528 816 592 2 polygon
1 1.00 880 528 880 592 2 polygon
1 1.00 816 592 880 528 2 polygon
1.00 90 848 608 arrow
1 1.00 864 352 864 416 2 polygon
1 1.00 928 352 928 416 2 polygon
1 1.00 864 416 928 352 2 polygon
1.00 90 896 432 arrow
1 2.00 656 560 816 560 2 polygon
1 2.00 880 560 976 560 2 polygon
1 2.00 864 384 800 384 2 polygon
(Check valve) {/Helvetica cf} 2 16 0 0.70 720 672 label
(Check valve) {/Helvetica cf} 2 16 0 0.70 784 496 label
(Check valve) {/Helvetica cf} 2 16 0 0.70 832 320 label
1 2.00 928 384 976 384 976 880 3 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
