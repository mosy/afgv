%!PS-Adobe-3.0 EPSF-3.0
%%Title: i01550x01.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Wed Feb 28 20:00:10 2007
%%Pages: 1
%%BoundingBox: 68 68 409 293
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

%%Page: 8400x020.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 864 640 offsets
% 32.00 8.00 gridspace
0.7500 inchscale
2.6000 setlinewidth

0.800 0.800 0.800 scb
1 1.00 384 1024 384 384 2 polygon
1 1.00 416 1024 416 384 2 polygon
1 1.00 448 1024 448 384 2 polygon
1 1.00 480 1024 480 384 2 polygon
1 1.00 512 1024 512 384 2 polygon
1 1.00 544 1024 544 384 2 polygon
1 1.00 576 1024 576 384 2 polygon
1 1.00 608 1024 608 384 2 polygon
1 1.00 640 1024 640 384 2 polygon
1 1.00 672 1024 672 384 2 polygon
1 1.00 704 1024 704 384 2 polygon
1 1.00 736 1024 736 384 2 polygon
1 1.00 768 1024 768 384 2 polygon
1 1.00 800 1024 800 384 2 polygon
1 1.00 832 1024 832 384 2 polygon
1 1.00 864 1024 864 384 2 polygon
1 1.00 896 1024 896 384 2 polygon
1 1.00 928 1024 928 384 2 polygon
1 1.00 960 1024 960 384 2 polygon
1 1.00 992 1024 992 384 2 polygon
1 1.00 1024 1024 1024 384 2 polygon
1 1.00 1056 1024 1056 384 2 polygon
1 1.00 1088 1024 1088 384 2 polygon
1 1.00 1120 1024 1120 384 2 polygon
1 1.00 1152 1024 1152 384 2 polygon
1 1.00 1184 1024 1184 384 2 polygon
1 1.00 1216 1024 1216 384 2 polygon
1 1.00 1248 1024 1248 384 2 polygon
1 1.00 1280 1024 1280 384 2 polygon
1 1.00 1312 1024 1312 384 2 polygon
1 1.00 1344 1024 1344 384 2 polygon
1 1.00 1376 1024 1376 384 2 polygon
1 1.00 1408 1024 1408 384 2 polygon
1 1.00 1440 1024 1440 384 2 polygon
1 1.00 352 1024 1440 1024 2 polygon
1 1.00 352 992 1440 992 2 polygon
1 1.00 352 960 1440 960 2 polygon
1 1.00 352 928 1440 928 2 polygon
1 1.00 352 896 1440 896 2 polygon
1 1.00 352 864 1440 864 2 polygon
1 1.00 352 832 1440 832 2 polygon
1 1.00 352 800 1440 800 2 polygon
1 1.00 352 768 1440 768 2 polygon
1 1.00 352 736 1440 736 2 polygon
1 1.00 352 704 1440 704 2 polygon
1 1.00 352 672 1440 672 2 polygon
1 1.00 352 640 1440 640 2 polygon
1 1.00 352 608 1440 608 2 polygon
1 1.00 352 576 1440 576 2 polygon
1 1.00 352 544 1440 544 2 polygon
1 1.00 352 512 1440 512 2 polygon
1 1.00 352 480 1440 480 2 polygon
1 1.00 352 448 1440 448 2 polygon
1 1.00 352 416 1440 416 2 polygon
sce
1 1.00 352 1024 352 384 1440 384 3 polygon
(Time) {/Helvetica cf} 2 16 0 1.00 784 256 label
1.00 90 928 272 arrow
(0) {/Times-Roman cf} 2 16 0 0.50 328 376 label
(5) {/Times-Roman cf} 2 16 0 0.50 328 408 label
(10) {/Times-Roman cf} 2 16 0 0.50 320 440 label
(15) {/Times-Roman cf} 2 16 0 0.50 320 472 label
(20) {/Times-Roman cf} 2 16 0 0.50 320 504 label
(25) {/Times-Roman cf} 2 16 0 0.50 320 536 label
(30) {/Times-Roman cf} 2 16 0 0.50 320 568 label
(35) {/Times-Roman cf} 2 16 0 0.50 320 600 label
(40) {/Times-Roman cf} 2 16 0 0.50 320 632 label
(45) {/Times-Roman cf} 2 16 0 0.50 320 664 label
(50) {/Times-Roman cf} 2 16 0 0.50 320 696 label
(55) {/Times-Roman cf} 2 16 0 0.50 320 728 label
(60) {/Times-Roman cf} 2 16 0 0.50 320 760 label
(65) {/Times-Roman cf} 2 16 0 0.50 320 792 label
(70) {/Times-Roman cf} 2 16 0 0.50 320 824 label
(75) {/Times-Roman cf} 2 16 0 0.50 320 856 label
(80) {/Times-Roman cf} 2 16 0 0.50 320 888 label
(85) {/Times-Roman cf} 2 16 0 0.50 320 920 label
(90) {/Times-Roman cf} 2 16 0 0.50 320 952 label
(95) {/Times-Roman cf} 2 16 0 0.50 320 984 label
(100) {/Times-Roman cf} 2 16 0 0.50 312 1016 label
(0:30) {/Helvetica cf} 2 16 0 0.50 520 328 label
(1:00) {/Times-Roman cf} 2 16 0 0.50 712 328 label
1 1.00 448 384 448 352 2 polygon
1 1.00 544 384 544 352 2 polygon
1 1.00 640 384 640 352 2 polygon
1 1.00 736 384 736 352 2 polygon
1 1.00 832 384 832 352 2 polygon
1 1.00 928 384 928 352 2 polygon
1 1.00 1024 384 1024 352 2 polygon
1 1.00 1120 384 1120 352 2 polygon
1 1.00 1216 384 1216 352 2 polygon
1 1.00 1312 384 1312 352 2 polygon
1 1.00 1408 384 1408 352 2 polygon
(0:15) {/Times-Roman cf} 2 16 0 0.50 424 328 label
(0:45) {/Helvetica cf} 2 16 0 0.50 616 328 label
(1:15) {/Times-Roman cf} 2 16 0 0.50 816 328 label
(1:30) {/Times-Roman cf} 2 16 0 0.50 912 328 label
(1:45) {/Times-Roman cf} 2 16 0 0.50 1008 328 label
(2:00) {/Times-Roman cf} 2 16 0 0.50 1096 328 label
(2:15) {/Times-Roman cf} 2 16 0 0.50 1200 328 label
(2:30) {/Times-Roman cf} 2 16 0 0.50 1296 328 label
(2:45) {/Helvetica cf} 2 16 0 0.50 1384 328 label
(%) {/Times-Roman cf} 2 16 0 1.00 256 704 label
1.000 0.000 0.000 scb
3 1.00 352 720 1440 720 2 polygon
(SP) {/Helvetica cf} 2 16 0 1.00 384 680 label
0.000 0.000 1.000 scb
1 1.00 352 728 356 728 360 732 360 728 364 728 368 728 368 724 372 728 376 732 
380 728 384 728 388 724 392 728 396 732 396 728 400 728 400 724 404 728 408 732 
412 728 416 724 420 728 424 724 428 724 432 728 432 724 436 724 440 728 440 724 
444 724 30 polygon
1 1.00 444 724 448 724 452 728 452 724 456 724 460 724 460 720 464 724 468 728 
472 724 476 724 480 720 484 724 488 728 488 724 492 724 492 720 496 724 500 728 
504 724 508 720 512 724 516 720 520 720 524 724 524 720 528 720 532 724 532 720 
536 720 30 polygon
1 1.00 536 720 544 720 548 716 552 720 556 720 560 724 560 720 564 720 564 716 
568 720 568 716 572 720 576 724 584 720 588 724 592 720 600 716 600 720 608 720 
608 716 612 720 616 724 620 724 620 720 624 724 628 724 632 720 636 716 636 720 
640 720 644 716 648 720 648 724 652 720 656 720 656 716 660 720 660 716 660 720 
664 720 668 724 672 720 676 720 43 polygon
1 1.00 676 720 684 720 688 716 692 720 696 720 700 724 700 720 704 720 704 716 
708 720 708 716 712 720 716 724 724 720 728 724 732 720 740 716 740 720 748 720 
748 716 752 720 756 724 760 724 760 720 764 724 768 724 772 720 776 716 776 720 
780 720 784 716 788 720 788 724 792 720 796 720 796 716 800 720 800 716 800 720 
804 720 808 724 812 720 816 720 43 polygon
1 1.00 816 720 820 720 824 724 824 720 828 720 832 720 832 716 836 720 840 724 
844 720 848 720 852 716 856 720 860 724 860 720 864 720 864 716 868 720 872 724 
876 720 880 716 884 720 888 716 892 716 896 720 896 716 900 716 904 720 904 716 
908 716 30 polygon
1 1.00 908 716 912 716 916 712 916 716 920 716 924 716 924 720 928 716 932 712 
936 716 940 716 944 720 948 716 952 712 952 716 956 716 956 720 960 716 964 712 
968 716 972 720 976 716 980 720 984 720 988 716 988 720 992 720 996 716 996 720 
1000 720 30 polygon
1 1.00 1000 720 1008 720 1012 716 1016 720 1020 720 1024 724 1024 720 1028 720 
1028 716 1032 720 1032 716 1036 720 1040 724 1048 720 1052 724 1056 720 1064 
716 1064 720 1072 720 1072 716 1076 720 1080 724 1084 724 1084 720 1088 724 
1092 724 1096 720 1100 716 1100 720 1104 720 1108 716 1112 720 1112 724 1116 
720 1120 720 1120 716 1124 720 1124 716 1124 720 1128 720 1132 724 1136 720 
1140 720 43 polygon
1 1.00 1140 720 1144 720 1148 716 1148 720 1152 720 1156 720 1156 724 1160 720 
1164 716 1168 720 1172 720 1176 724 1180 720 1184 716 1184 720 1188 720 1188 
724 1192 720 1196 716 1200 720 1204 724 1208 720 1212 724 1216 724 1220 720 
1220 724 1224 724 1228 720 1228 724 1232 724 30 polygon
1 1.00 1232 724 1240 724 1244 720 1248 724 1252 724 1256 728 1256 724 1260 724 
1260 720 1264 724 1264 720 1268 724 1272 728 1280 724 1284 728 1288 724 1296 
720 1296 724 1304 724 1304 720 1308 724 1312 728 1316 728 1316 724 1320 728 
1324 728 1328 724 1332 720 1332 724 1336 724 1340 720 1344 724 1344 728 1348 
724 1352 724 1352 720 1356 724 1356 720 1356 724 1360 724 1364 728 1368 724 
1372 724 43 polygon
1 1.00 1372 724 1376 724 1380 720 1384 724 1388 720 1392 720 1396 724 1400 720 
1404 720 1404 724 1408 720 1412 720 1416 724 1420 720 1424 716 1428 720 1432 
720 1436 716 1436 720 1440 720 20 polygon
(PV) {/Helvetica cf} 2 16 0 1.00 384 744 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
