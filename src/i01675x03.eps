%!PS-Adobe-3.0 EPSF-3.0
%%Title: process_27.eps
%%Creator: XCircuit v3.7 rev55
%%CreationDate: Tue Mar 10 05:40:21 2015
%%Pages: 1
%%BoundingBox: 68 68 409 275
%%DocumentNeededResources: font Helvetica Helvetica-Oblique Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/::arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/::arrow {
% trivial
begingate
1 0.800 0 -40 0 20 2 polygon
1.000 0 0 40 ::arrowhead
endgate
} def

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def


%%EndSetup

%%Page: 8400x020.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
0.7500 inchscale
2.6000 setlinewidth 864 576 translate

0.800 0.800 0.800 scb
1 1.000 -480 384 -480 -256 2 polygon
1 1.000 -448 384 -448 -256 2 polygon
1 1.000 -416 384 -416 -256 2 polygon
1 1.000 -384 384 -384 -256 2 polygon
1 1.000 -352 384 -352 -256 2 polygon
1 1.000 -320 384 -320 -256 2 polygon
1 1.000 -288 384 -288 -256 2 polygon
1 1.000 -256 384 -256 -256 2 polygon
1 1.000 -224 384 -224 -256 2 polygon
1 1.000 -192 384 -192 -256 2 polygon
1 1.000 -160 384 -160 -256 2 polygon
1 1.000 -128 384 -128 -256 2 polygon
1 1.000 -96 384 -96 -256 2 polygon
1 1.000 -64 384 -64 -256 2 polygon
1 1.000 -32 384 -32 -256 2 polygon
1 1.000 0 384 0 -256 2 polygon
1 1.000 32 384 32 -256 2 polygon
1 1.000 64 384 64 -256 2 polygon
1 1.000 96 384 96 -256 2 polygon
1 1.000 128 384 128 -256 2 polygon
1 1.000 160 384 160 -256 2 polygon
1 1.000 192 384 192 -256 2 polygon
1 1.000 224 384 224 -256 2 polygon
1 1.000 256 384 256 -256 2 polygon
1 1.000 288 384 288 -256 2 polygon
1 1.000 320 384 320 -256 2 polygon
1 1.000 352 384 352 -256 2 polygon
1 1.000 384 384 384 -256 2 polygon
1 1.000 416 384 416 -256 2 polygon
1 1.000 448 384 448 -256 2 polygon
1 1.000 480 384 480 -256 2 polygon
1 1.000 512 384 512 -256 2 polygon
1 1.000 544 384 544 -256 2 polygon
1 1.000 576 384 576 -256 2 polygon
1 1.000 -512 384 576 384 2 polygon
1 1.000 -512 352 576 352 2 polygon
1 1.000 -512 320 576 320 2 polygon
1 1.000 -512 288 576 288 2 polygon
1 1.000 -512 256 576 256 2 polygon
1 1.000 -512 224 576 224 2 polygon
1 1.000 -512 192 576 192 2 polygon
1 1.000 -512 160 576 160 2 polygon
1 1.000 -512 128 576 128 2 polygon
1 1.000 -512 96 576 96 2 polygon
1 1.000 -512 64 576 64 2 polygon
1 1.000 -512 32 576 32 2 polygon
1 1.000 -512 0 576 0 2 polygon
1 1.000 -512 -32 576 -32 2 polygon
1 1.000 -512 -64 576 -64 2 polygon
1 1.000 -512 -96 576 -96 2 polygon
1 1.000 -512 -128 576 -128 2 polygon
1 1.000 -512 -160 576 -160 2 polygon
1 1.000 -512 -192 576 -192 2 polygon
1 1.000 -512 -224 576 -224 2 polygon
sce
1 1.000 -512 384 -512 -256 576 -256 3 polygon
(Time) {/Helvetica cf} 2 16 0 1.000 -64 -320 label
1.000 90 80 -304 ::arrow
(0) {/Times-Roman cf} 2 16 0 0.500 -536 -264 label
(5) {/Times-Roman cf} 2 16 0 0.500 -536 -232 label
(10) {/Times-Roman cf} 2 16 0 0.500 -544 -200 label
(15) {/Times-Roman cf} 2 16 0 0.500 -544 -168 label
(20) {/Times-Roman cf} 2 16 0 0.500 -544 -136 label
(25) {/Times-Roman cf} 2 16 0 0.500 -544 -104 label
(30) {/Times-Roman cf} 2 16 0 0.500 -544 -72 label
(35) {/Times-Roman cf} 2 16 0 0.500 -544 -40 label
(40) {/Times-Roman cf} 2 16 0 0.500 -544 -8 label
(45) {/Times-Roman cf} 2 16 0 0.500 -544 24 label
(50) {/Times-Roman cf} 2 16 0 0.500 -544 56 label
(55) {/Times-Roman cf} 2 16 0 0.500 -544 88 label
(60) {/Times-Roman cf} 2 16 0 0.500 -544 120 label
(65) {/Times-Roman cf} 2 16 0 0.500 -544 152 label
(70) {/Times-Roman cf} 2 16 0 0.500 -544 184 label
(75) {/Times-Roman cf} 2 16 0 0.500 -544 216 label
(80) {/Times-Roman cf} 2 16 0 0.500 -544 248 label
(85) {/Times-Roman cf} 2 16 0 0.500 -544 280 label
(90) {/Times-Roman cf} 2 16 0 0.500 -544 312 label
(95) {/Times-Roman cf} 2 16 0 0.500 -544 344 label
(100) {/Times-Roman cf} 2 16 0 0.500 -552 376 label
(%) {/Times-Roman cf} 2 16 0 1.000 -608 64 label
0.000 0.000 1.000 scb
(PV) {/Helvetica cf} 2 16 0 1.000 -286 224 label
0.627 0.125 0.941 scb
(Output) {/Helvetica cf} 2 16 0 1.000 -300 -140 label
1.000 0.000 0.000 scb
1.000 180 64 208 ::arrow
(PV should) {/Helvetica-Oblique cf} 2 16 0 0.700 0 296 label
(have changed!) {/Helvetica-Oblique cf} 2 16 0 0.700 -28 264 label
0.627 0.125 0.941 scb
1 1.000 -512 -128 -448 -128 -448 0 -384 0 -384 -112 -320 -112 -320 -16 -256 -16 
-256 -96 -192 -96 -192 -32 -128 -32 -128 -80 -64 -80 -64 -48 0 -48 0 -72 64 -72 
64 -56 128 -56 128 -68 192 -68 192 -60 256 -60 256 -64 576 -64 26 polygon
0.000 0.000 1.000 scb
1 1.000 -512 100 -504 100 -500 96 -484 96 -480 100 -468 92 -460 100 -450 96 
-446 220 -440 220 -438 216 -434 216 -432 216 -430 218 -428 220 -422 220 -416 
216 -414 216 -412 216 -408 220 -404 220 -402 220 -400 220 -398 216 -396 216 
-394 216 -390 216 -388 218 -386 218 -382 114 -378 118 -376 116 -374 112 -368 
114 -364 116 -362 118 -360 118 -358 116 -354 114 -350 114 -348 114 -344 116 
-340 118 -338 116 -332 114 -330 114 -326 116 -322 116 -320 206 -314 210 -312 
208 -310 206 -308 206 -304 206 -302 206 -286 206 -282 202 -278 202 -274 204 
-272 204 -268 208 -264 206 -262 206 -258 208 -258 206 -254 132 -248 134 -246 
134 -244 134 -240 132 -234 132 -232 134 -230 134 -228 134 -226 132 -222 132 
-218 134 -214 136 -210 136 -208 134 -206 132 -198 134 -198 132 -194 132 -192 
190 -188 190 -186 188 -186 186 -184 188 -174 188 -168 192 -160 188 -152 186 
-148 188 -144 190 -142 190 -136 188 -128 186 -126 146 -124 146 -120 144 -116 
144 -112 146 -110 146 -108 146 -98 146 -96 146 -92 146 -92 144 -88 144 -84 146 
-82 146 -76 150 -72 146 -70 146 -68 146 -66 146 -62 174 -58 170 -56 170 -48 172 
-42 174 -40 172 -36 170 -30 172 -26 174 -24 172 -22 170 -16 170 -14 172 -12 172 
-8 174 -8 172 -2 170 0 154 8 156 12 156 16 156 16 154 22 156 26 156 28 156 30 
156 36 156 42 154 46 156 54 158 60 156 62 156 64 158 66 156 70 156 72 156 78 
154 82 156 84 156 90 158 92 158 96 156 104 156 108 158 118 156 124 156 128 154 
134 154 136 156 142 156 148 156 150 156 154 154 162 154 164 154 174 154 180 156 
182 156 184 156 200 156 204 156 210 154 218 154 226 156 232 156 236 156 238 158 
246 158 254 156 258 156 260 156 266 156 276 156 284 156 292 158 294 160 302 158 
304 156 314 156 326 160 344 160 354 162 362 160 368 160 374 160 378 158 390 158 
396 158 400 160 404 160 406 160 416 156 420 158 426 160 430 160 438 160 454 156 
458 156 466 160 470 160 476 160 484 156 488 156 500 158 510 162 518 160 524 160 
530 160 546 154 556 158 560 160 568 160 576 160 230 polygon
1.000 0.000 0.000 scb
1.000 0 80 -72 generic::arrowhead
1 1.000 72 -72 88 -72 2 polygon
-1.000 180 80 -56 generic::arrowhead
1 1.000 80 -32 80 -16 2 polygon
1 1.000 80 -112 80 -96 2 polygon
1 1.000 80 -112 104 -136 2 polygon
(Control valve) {/Helvetica cf} 2 16 0 0.700 112 -140 label
(hysteresis) {/Helvetica cf} 2 16 0 0.700 128 -168 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
