%!PS-Adobe-3.0 EPSF-3.0
%%Title: i01692x01.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Mon Jan 29 20:18:28 2007
%%Pages: 1
%%BoundingBox: 68 68 424 303
%%DocumentNeededResources: font Helvetica 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/blower {
begingate
1.000 1.000 1.000 scb
241 1.00 0 16 22 0.00 360.00 xcarc
241 1.00 0 -16 22 0.00 360.00 xcarc
sce
1 1.00 -16 38 -30 20 -16 0 0 38 spline
1 1.00 16 38 30 20 16 0 0 38 spline
1 1.00 -16 -38 -30 -20 -16 0 0 -38 spline
1 1.00 16 -38 30 -20 16 0 0 -38 spline
endgate
} def

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

/valve_globe_air {
begingate
1 1.00 -48 32 48 32 2 polygon
1 1.00 -48 -80 -48 -16 48 -80 48 -16 -48 -80 5 polygon
1 1.00 0 -48 0 32 2 polygon
1 1.00 -48 96 48 96 48 32 -48 32 spline
endgate
} def

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
% 776 488 offsets
% 32.00 8.00 gridspace
0.7500 inchscale
2.6000 setlinewidth

1.00 0 648 488 blower
(Air) {/Helvetica cf} 2 16 0 1.00 624 584 label
(blower) {/Helvetica cf} 2 16 0 1.00 592 544 label
1 1.00 840 488 64 0.00 360.00 xcarc
1 1.00 808 584 808 456 872 520 872 360 4 polygon
1 1.00 584 504 626 504 2 polygon
1 1.00 584 472 626 472 2 polygon
1 1.00 712 504 670 504 2 polygon
1 1.00 712 472 670 472 2 polygon
1 1.00 712 504 778 504 2 polygon
1 1.00 712 472 778 472 2 polygon
1 1.00 968 504 902 504 2 polygon
1 1.00 968 472 902 472 2 polygon
1 1.00 1000 504 1032 520 1032 568 968 504 spline
1 1.00 1032 472 1064 504 1064 568 968 472 spline
1 1.00 1032 568 920 632 2 polygon
1 1.00 1064 568 1176 632 2 polygon
1 1.00 920 632 920 808 840 840 3 polygon
1 1.00 840 872 920 840 920 936 3 polygon
1 1.00 1032 1000 920 936 2 polygon
1 1.00 1064 1000 1176 936 2 polygon
1 1.00 1032 1000 1032 1064 2 polygon
1 1.00 1064 1000 1064 1064 2 polygon
1 1.00 1256 760 1176 792 1176 696 3 polygon
1 1.00 1176 696 1176 632 2 polygon
1 1.00 1256 792 1176 824 1176 936 3 polygon
0.824 0.706 0.549 scb
81 1.00 923 636 923 808 925 808 927 809 929 809 931 809 931 808 932 807 933 806 
938 805 941 806 942 808 945 808 946 808 949 808 950 807 951 808 953 808 963 808 
963 809 971 811 979 812 982 813 986 814 989 812 1003 811 1005 812 1010 811 1015 
809 1021 807 1022 807 1030 808 1036 811 1039 812 1045 808 1046 808 1056 805 
1059 803 1064 802 1066 802 1072 804 1076 805 1078 805 1080 805 1083 803 1089 
804 1094 805 1096 805 1097 805 1098 805 1111 800 1114 802 1124 800 1132 799 
1133 800 1135 800 1138 800 1140 800 1156 799 1157 798 1162 798 1166 796 1169 
795 1170 795 1173 793 1173 633 923 633 923 635 68 polygon
sce
1.00 105 800 864 arrow
(Wet feed in) {/Helvetica cf} 2 16 0 1.00 600 888 label
1.00 105 1288 768 arrow
(Dry product) {/Helvetica cf} 2 16 0 1.00 1288 784 label
(out) {/Helvetica cf} 2 16 0 1.00 1360 744 label
1 1.00 584 504 488 504 2 polygon
1 1.00 584 472 488 472 2 polygon
0 1.00 424 552 424 424 488 424 488 552 4 polygon
1 1.00 424 552 488 424 2 polygon
1 1.00 424 424 488 552 2 polygon
1 1.00 424 504 328 504 2 polygon
1 1.00 424 472 328 472 2 polygon
(Filter) {/Helvetica cf} 2 16 0 1.00 408 568 label
1.00 90 296 488 arrow
0.50 90 896 336 valve_globe_air
1 1.00 872 312 872 264 680 264 3 polygon
1 1.00 768 272 776 264 768 256 3 polygon
(Steam) {/Helvetica cf} 2 16 0 1.00 544 256 label
1 1.00 1128 536 32 0.00 360.00 xcarc
1 1.00 1080 576 1104 560 2 polygon
(TT) {/Helvetica cf} 2 16 0 0.70 1112 528 label
1 1.00 1032 336 32 0.00 360.00 xcarc
(Dryer) {/Helvetica cf} 2 16 0 1.00 1000 888 label
(TC) {/Helvetica cf} 2 16 0 0.70 1016 328 label
3 1.00 936 336 1000 336 2 polygon
3 1.00 1064 336 1128 336 1128 504 3 polygon
1 1.00 1144 1032 32 0.00 360.00 xcarc
(TT) {/Helvetica cf} 2 16 0 0.70 1128 1024 label
1 1.00 1064 1032 1112 1032 2 polygon
1 1.00 1216 272 1208 264 1216 256 3 polygon
1 1.00 1344 664 1352 656 1360 664 3 polygon
1 1.00 1344 888 1352 880 1360 888 3 polygon
1 1.00 1256 1040 1264 1032 1256 1024 3 polygon
1 1.00 1120 432 1128 424 1136 432 3 polygon
1 1.00 1072 344 1064 336 1072 328 3 polygon
1 1.00 968 344 960 336 968 328 3 polygon
(SP) {/Helvetica cf} 2 16 0 0.50 992 280 label
3 1.00 1032 304 1032 264 1352 264 1352 1032 1176 1032 5 polygon
1 1.00 1344 448 1352 440 1360 448 3 polygon
1 1.00 1024 296 1032 304 1040 296 3 polygon
(PV) {/Helvetica cf} 2 16 0 0.50 1080 344 label
1 1.00 800 592 808 600 816 592 3 polygon
1 1.00 808 584 808 648 2 polygon
1 1.00 928 632 944 632 2 polygon
1 1.00 960 632 976 632 2 polygon
1 1.00 992 632 1008 632 2 polygon
1 1.00 1024 632 1040 632 2 polygon
1 1.00 1056 632 1072 632 2 polygon
1 1.00 1088 632 1104 632 2 polygon
1 1.00 1120 632 1136 632 2 polygon
1 1.00 1152 632 1168 632 2 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
