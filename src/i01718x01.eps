%!PS-Adobe-3.0 EPSF-3.0
%%Title: i01718x01.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Tue Feb  6 19:31:23 2007
%%Pages: 1
%%BoundingBox: 68 68 409 284
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

%%Page: 8400x020.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 864 607 offsets
0.7500 inchscale
2.6000 setlinewidth

0.800 0.800 0.800 scb
1 1.00 384 991 384 351 2 polygon
1 1.00 416 991 416 351 2 polygon
1 1.00 448 991 448 351 2 polygon
1 1.00 480 991 480 351 2 polygon
1 1.00 512 991 512 351 2 polygon
1 1.00 544 991 544 351 2 polygon
1 1.00 576 991 576 351 2 polygon
1 1.00 608 991 608 351 2 polygon
1 1.00 640 991 640 351 2 polygon
1 1.00 672 991 672 351 2 polygon
1 1.00 704 991 704 351 2 polygon
1 1.00 736 991 736 351 2 polygon
1 1.00 768 991 768 351 2 polygon
1 1.00 800 991 800 351 2 polygon
1 1.00 832 991 832 351 2 polygon
1 1.00 864 991 864 351 2 polygon
1 1.00 896 991 896 351 2 polygon
1 1.00 928 991 928 351 2 polygon
1 1.00 960 991 960 351 2 polygon
1 1.00 992 991 992 351 2 polygon
1 1.00 1024 991 1024 351 2 polygon
1 1.00 1056 991 1056 351 2 polygon
1 1.00 1088 991 1088 351 2 polygon
1 1.00 1120 991 1120 351 2 polygon
1 1.00 1152 991 1152 351 2 polygon
1 1.00 1184 991 1184 351 2 polygon
1 1.00 1216 991 1216 351 2 polygon
1 1.00 1248 991 1248 351 2 polygon
1 1.00 1280 991 1280 351 2 polygon
1 1.00 1312 991 1312 351 2 polygon
1 1.00 1344 991 1344 351 2 polygon
1 1.00 1376 991 1376 351 2 polygon
1 1.00 1408 991 1408 351 2 polygon
1 1.00 1440 991 1440 351 2 polygon
1 1.00 352 991 1440 991 2 polygon
1 1.00 352 959 1440 959 2 polygon
1 1.00 352 927 1440 927 2 polygon
1 1.00 352 895 1440 895 2 polygon
1 1.00 352 863 1440 863 2 polygon
1 1.00 352 831 1440 831 2 polygon
1 1.00 352 799 1440 799 2 polygon
1 1.00 352 767 1440 767 2 polygon
1 1.00 352 735 1440 735 2 polygon
1 1.00 352 703 1440 703 2 polygon
1 1.00 352 671 1440 671 2 polygon
1 1.00 352 639 1440 639 2 polygon
1 1.00 352 607 1440 607 2 polygon
1 1.00 352 575 1440 575 2 polygon
1 1.00 352 543 1440 543 2 polygon
1 1.00 352 511 1440 511 2 polygon
1 1.00 352 479 1440 479 2 polygon
1 1.00 352 447 1440 447 2 polygon
1 1.00 352 415 1440 415 2 polygon
1 1.00 352 383 1440 383 2 polygon
sce
1 1.00 352 991 352 351 1440 351 3 polygon
1.00 90 1112 273 arrow
(0) {/Times-Roman cf} 2 16 0 0.50 328 343 label
(5) {/Times-Roman cf} 2 16 0 0.50 328 375 label
(10) {/Times-Roman cf} 2 16 0 0.50 320 407 label
(15) {/Times-Roman cf} 2 16 0 0.50 320 439 label
(20) {/Times-Roman cf} 2 16 0 0.50 320 471 label
(25) {/Times-Roman cf} 2 16 0 0.50 320 503 label
(30) {/Times-Roman cf} 2 16 0 0.50 320 535 label
(35) {/Times-Roman cf} 2 16 0 0.50 320 567 label
(40) {/Times-Roman cf} 2 16 0 0.50 320 599 label
(45) {/Times-Roman cf} 2 16 0 0.50 320 631 label
(50) {/Times-Roman cf} 2 16 0 0.50 320 663 label
(55) {/Times-Roman cf} 2 16 0 0.50 320 695 label
(60) {/Times-Roman cf} 2 16 0 0.50 320 727 label
(65) {/Times-Roman cf} 2 16 0 0.50 320 759 label
(70) {/Times-Roman cf} 2 16 0 0.50 320 791 label
(75) {/Times-Roman cf} 2 16 0 0.50 320 823 label
(80) {/Times-Roman cf} 2 16 0 0.50 320 855 label
(85) {/Times-Roman cf} 2 16 0 0.50 320 887 label
(90) {/Times-Roman cf} 2 16 0 0.50 320 919 label
(95) {/Times-Roman cf} 2 16 0 0.50 320 951 label
(100) {/Times-Roman cf} 2 16 0 0.50 312 983 label
(%) {/Times-Roman cf} 2 16 0 1.00 256 671 label
0.627 0.125 0.941 scb
(Output) {/Helvetica cf} 2 16 0 1.00 546 577 label
0.000 0.000 1.000 scb
(PV) {/Helvetica cf} 2 16 0 1.00 486 801 label
0.627 0.125 0.941 scb
1 1.00 352 575 512 575 512 639 1056 639 1056 575 1440 575 6 polygon
0.000 0.000 1.000 scb
1 1.00 352 711 356 711 364 715 368 715 372 711 376 711 380 711 384 711 392 711 
396 715 404 715 408 715 412 715 420 713 422 713 424 713 432 713 436 711 440 711 
442 711 446 713 452 713 456 715 468 715 476 713 486 713 492 713 494 713 508 713 
510 715 514 715 516 715 518 715 520 715 522 717 534 721 534 725 536 725 536 729 
540 735 540 739 540 741 542 743 544 749 546 757 546 767 548 775 548 777 548 781 
548 787 550 789 550 791 550 795 552 803 552 807 552 809 552 813 554 821 554 829 
556 831 556 837 558 841 558 843 558 845 560 845 562 847 564 847 564 849 566 849 
568 849 570 849 572 849 574 849 576 849 578 849 582 851 584 851 588 851 598 849 
604 849 612 849 620 849 628 849 632 849 632 847 648 847 652 849 656 849 658 849 
670 847 676 847 678 849 682 849 696 849 700 849 712 845 718 847 722 847 728 847 
732 847 756 845 760 847 764 847 770 847 784 847 790 847 792 847 796 849 800 851 
818 845 820 845 826 849 828 849 846 847 852 849 856 849 868 847 876 847 878 847 
878 849 882 849 884 849 902 845 908 847 912 849 918 849 922 849 928 849 932 847 
936 847 944 849 948 849 964 847 966 847 976 847 990 847 992 847 994 849 998 849 
1014 847 1020 847 1022 849 1024 849 1026 849 1028 849 1030 849 1042 847 1044 
847 1046 847 1048 847 1050 847 1054 847 1054 849 1060 849 1062 849 1062 847 
1064 847 1064 845 1066 845 1068 839 1070 837 1072 835 1074 831 1076 827 1076 
817 1078 809 1080 801 1082 793 1082 789 1084 781 1086 773 1086 755 1088 751 
1090 747 1090 743 1090 741 1092 739 1092 737 1094 733 1096 733 1098 731 1100 
729 1102 729 1104 727 1106 727 1108 725 1110 725 1112 725 1114 725 1116 725 
1118 725 1120 725 1124 725 1126 725 1134 725 1136 725 1138 725 1142 723 1148 
723 1150 725 1156 723 1158 723 1166 725 1168 725 1170 725 1176 725 1178 723 
1182 723 1186 723 1190 723 1194 723 1204 725 1212 725 1214 725 1220 723 1224 
723 1226 725 1238 727 1240 727 1244 727 1248 725 1250 725 1254 725 1256 725 
1258 725 1262 725 1264 725 1272 721 1282 725 1286 725 1294 723 1306 721 1312 
723 1318 725 1322 725 1324 725 1338 723 1342 725 1354 725 1356 725 1362 723 
1366 723 1370 723 1374 723 1382 723 1384 725 1386 725 1388 725 1398 725 1402 
725 1404 725 1408 723 1408 725 1414 725 1416 725 1420 725 1424 725 1428 725 
1430 725 1432 727 1434 727 1436 727 1438 727 263 polygon
sce
(0:00) {/Times-Roman cf} 2 16 0 0.50 338 319 label
(0:05) {/Times-Roman cf} 2 16 0 0.50 496 319 label
(0:10) {/Times-Roman cf} 2 16 0 0.50 656 319 label
(0:15) {/Times-Roman cf} 2 16 0 0.50 816 319 label
(Time \(Minutes : Seconds\)) {/Helvetica cf} 2 16 0 1.00 600 261 label
(0:20) {/Times-Roman cf} 2 16 0 0.50 976 319 label
(0:25) {/Times-Roman cf} 2 16 0 0.50 1136 319 label
(0:30) {/Times-Roman cf} 2 16 0 0.50 1296 319 label
1 1.00 1312 351 1312 343 2 polygon
1 1.00 1152 351 1152 343 2 polygon
1 1.00 992 351 992 343 2 polygon
1 1.00 832 351 832 343 2 polygon
1 1.00 672 351 672 343 2 polygon
1 1.00 512 351 512 343 2 polygon
1 1.00 352 351 352 343 2 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
