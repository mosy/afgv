%!PS-Adobe-3.0 EPSF-3.0
%%Title: i01721x01.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Tue Feb  6 20:06:58 2007
%%Pages: 1
%%BoundingBox: 68 68 409 284
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

%%Page: 8400x020.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 864 607 offsets
% 32.00 2.00 gridspace
0.7500 inchscale
2.6000 setlinewidth

0.800 0.800 0.800 scb
1 1.00 384 991 384 351 2 polygon
1 1.00 416 991 416 351 2 polygon
1 1.00 448 991 448 351 2 polygon
1 1.00 480 991 480 351 2 polygon
1 1.00 512 991 512 351 2 polygon
1 1.00 544 991 544 351 2 polygon
1 1.00 576 991 576 351 2 polygon
1 1.00 608 991 608 351 2 polygon
1 1.00 640 991 640 351 2 polygon
1 1.00 672 991 672 351 2 polygon
1 1.00 704 991 704 351 2 polygon
1 1.00 736 991 736 351 2 polygon
1 1.00 768 991 768 351 2 polygon
1 1.00 800 991 800 351 2 polygon
1 1.00 832 991 832 351 2 polygon
1 1.00 864 991 864 351 2 polygon
1 1.00 896 991 896 351 2 polygon
1 1.00 928 991 928 351 2 polygon
1 1.00 960 991 960 351 2 polygon
1 1.00 992 991 992 351 2 polygon
1 1.00 1024 991 1024 351 2 polygon
1 1.00 1056 991 1056 351 2 polygon
1 1.00 1088 991 1088 351 2 polygon
1 1.00 1120 991 1120 351 2 polygon
1 1.00 1152 991 1152 351 2 polygon
1 1.00 1184 991 1184 351 2 polygon
1 1.00 1216 991 1216 351 2 polygon
1 1.00 1248 991 1248 351 2 polygon
1 1.00 1280 991 1280 351 2 polygon
1 1.00 1312 991 1312 351 2 polygon
1 1.00 1344 991 1344 351 2 polygon
1 1.00 1376 991 1376 351 2 polygon
1 1.00 1408 991 1408 351 2 polygon
1 1.00 1440 991 1440 351 2 polygon
1 1.00 352 991 1440 991 2 polygon
1 1.00 352 959 1440 959 2 polygon
1 1.00 352 927 1440 927 2 polygon
1 1.00 352 895 1440 895 2 polygon
1 1.00 352 863 1440 863 2 polygon
1 1.00 352 831 1440 831 2 polygon
1 1.00 352 799 1440 799 2 polygon
1 1.00 352 767 1440 767 2 polygon
1 1.00 352 735 1440 735 2 polygon
1 1.00 352 703 1440 703 2 polygon
1 1.00 352 671 1440 671 2 polygon
1 1.00 352 639 1440 639 2 polygon
1 1.00 352 607 1440 607 2 polygon
1 1.00 352 575 1440 575 2 polygon
1 1.00 352 543 1440 543 2 polygon
1 1.00 352 511 1440 511 2 polygon
1 1.00 352 479 1440 479 2 polygon
1 1.00 352 447 1440 447 2 polygon
1 1.00 352 415 1440 415 2 polygon
1 1.00 352 383 1440 383 2 polygon
sce
1 1.00 352 991 352 351 1440 351 3 polygon
1.00 90 1112 273 arrow
(0) {/Times-Roman cf} 2 16 0 0.50 328 343 label
(5) {/Times-Roman cf} 2 16 0 0.50 328 375 label
(10) {/Times-Roman cf} 2 16 0 0.50 320 407 label
(15) {/Times-Roman cf} 2 16 0 0.50 320 439 label
(20) {/Times-Roman cf} 2 16 0 0.50 320 471 label
(25) {/Times-Roman cf} 2 16 0 0.50 320 503 label
(30) {/Times-Roman cf} 2 16 0 0.50 320 535 label
(35) {/Times-Roman cf} 2 16 0 0.50 320 567 label
(40) {/Times-Roman cf} 2 16 0 0.50 320 599 label
(45) {/Times-Roman cf} 2 16 0 0.50 320 631 label
(50) {/Times-Roman cf} 2 16 0 0.50 320 663 label
(55) {/Times-Roman cf} 2 16 0 0.50 320 695 label
(60) {/Times-Roman cf} 2 16 0 0.50 320 727 label
(65) {/Times-Roman cf} 2 16 0 0.50 320 759 label
(70) {/Times-Roman cf} 2 16 0 0.50 320 791 label
(75) {/Times-Roman cf} 2 16 0 0.50 320 823 label
(80) {/Times-Roman cf} 2 16 0 0.50 320 855 label
(85) {/Times-Roman cf} 2 16 0 0.50 320 887 label
(90) {/Times-Roman cf} 2 16 0 0.50 320 919 label
(95) {/Times-Roman cf} 2 16 0 0.50 320 951 label
(100) {/Times-Roman cf} 2 16 0 0.50 312 983 label
(%) {/Times-Roman cf} 2 16 0 1.00 256 671 label
0.627 0.125 0.941 scb
(Output) {/Helvetica cf} 2 16 0 1.00 546 529 label
1 1.00 352 527 512 527 512 591 1056 591 1056 527 1440 527 6 polygon
sce
(0:00) {/Times-Roman cf} 2 16 0 0.50 338 319 label
(Time \(Minutes : Seconds\)) {/Helvetica cf} 2 16 0 1.00 600 261 label
1 1.00 1312 351 1312 343 2 polygon
1 1.00 1120 351 1120 343 2 polygon
1 1.00 928 351 928 343 2 polygon
1 1.00 736 351 736 343 2 polygon
1 1.00 544 351 544 343 2 polygon
1 1.00 352 351 352 343 2 polygon
(0:30) {/Times-Roman cf} 2 16 0 0.50 528 319 label
(1:00) {/Times-Roman cf} 2 16 0 0.50 720 319 label
(1:30) {/Times-Roman cf} 2 16 0 0.50 912 319 label
(2:00) {/Times-Roman cf} 2 16 0 0.50 1104 319 label
(2:30) {/Times-Roman cf} 2 16 0 0.50 1296 319 label
0.000 0.000 1.000 scb
(PV) {/Helvetica cf} 2 16 0 1.00 584 739 label
1 1.00 352 655 356 655 360 655 364 651 368 653 370 653 376 653 380 655 384 653 
386 653 388 653 390 653 392 651 394 649 396 651 398 653 406 653 412 653 418 653 
422 649 424 647 432 649 438 653 440 653 444 651 446 651 452 653 454 653 458 655 
462 657 464 657 470 653 478 653 480 653 488 653 492 655 496 655 498 653 500 653 
508 653 516 653 520 653 522 655 532 659 538 663 540 665 544 667 552 671 556 673 
558 673 562 677 564 679 568 679 574 681 580 683 580 685 584 689 586 689 588 691 
592 697 596 697 602 701 608 703 608 705 612 709 614 709 616 713 620 715 624 717 
626 717 630 719 634 721 636 723 640 725 642 725 648 729 654 733 656 733 660 737 
662 739 666 741 672 745 676 747 678 749 680 749 682 753 684 753 690 755 696 757 
704 759 708 761 710 761 710 765 712 765 716 765 718 765 720 767 724 769 728 769 
732 769 736 771 740 771 742 773 744 773 750 777 756 777 760 777 762 779 764 779 
766 779 768 781 772 781 774 783 776 785 778 785 780 785 784 787 784 789 786 789 
788 791 790 791 796 793 800 793 806 795 810 795 814 797 820 797 822 797 824 801 
828 801 832 801 836 801 840 803 846 805 870 811 872 811 874 813 878 813 882 815 
884 817 888 821 890 821 892 821 896 823 898 823 902 825 906 827 910 829 916 829 
922 829 926 831 930 831 938 831 942 833 950 833 952 833 958 835 960 835 970 835 
970 837 974 837 976 841 980 841 982 841 990 843 1002 847 1006 849 1010 849 1014 
849 1016 851 1018 851 1022 853 1026 853 1028 853 1028 855 1038 857 1046 859 
1048 861 1050 863 1052 863 1058 863 1064 863 1066 863 1070 865 1074 869 1078 
869 1082 867 1086 865 1090 865 1092 865 1098 865 1100 865 1106 865 1110 865 
1114 865 1120 863 1124 863 1126 863 1134 863 1138 861 1142 861 1146 861 1148 
861 1156 861 1160 861 1166 861 1168 861 1172 861 1174 859 1178 859 1184 859 
1188 857 1192 857 1196 857 1202 859 1210 857 1216 857 1218 857 1228 857 1234 
857 1236 857 1242 857 1258 855 1260 853 1266 855 1270 857 1274 857 1276 857 
1290 857 1294 857 1298 857 1302 857 1306 857 1308 857 1310 857 1314 857 1320 
857 1322 857 1326 857 1330 855 1336 855 1342 853 1346 853 1352 853 1358 855 
1364 857 1368 857 1370 857 1374 857 1382 857 1384 857 1394 853 1404 853 1410 
855 1414 855 1416 855 1418 855 1420 853 1426 855 1430 855 1432 855 1434 855 
1440 853 263 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
