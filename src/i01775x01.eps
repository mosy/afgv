%!PS-Adobe-3.0 EPSF-3.0
%%Title: 8550x002.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Mon Apr  7 07:27:33 2003
%%Pages: 1
%%BoundingBox: 68 68 449 231
%%DocumentNeededResources: font Helvetica font Helvetica-Oblique 
%%+ font Times-Roman font Symbol 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/dot {
% -10 -10 20 20 bbox
begingate
248  1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

%%Page: 8550x001.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 1149 565 offsets
0.6200 inchscale
2.6000 setlinewidth

1  1.00 445 693 32 0.00 360.00 xcarc
(S) {/Symbol 1.000 cf} 2 16 0 433 677 label
1  1.00 349 693 413 693 2 polygon
1  1.00 397 709 413 693 397 677 3 polygon
1  1.00 429 645 445 661 461 645 3 polygon
1  1.00 445 661 445 533 2 polygon
(+) {/Helvetica 1.000 cf} 2 16 0 397 709 label
(-) {/Helvetica 1.000 cf} 2 16 0 405 637 label
1  1.00 557 709 573 693 557 677 3 polygon
(e) {/Times-Roman 1.000 cf} 2 16 0 509 709 label
1  1.00 845 709 861 693 845 677 3 polygon
(m) {/Times-Roman 1.000 cf} 2 16 0 741 717 label
1  1.00 477 693 573 693 2 polygon
1  1.00 877 741 893 725 909 741 3 polygon
(Loads) {/Helvetica 1.000 cf} 2 16 0 845 845 label
1  1.00 981 389 965 373 981 357 3 polygon
(Gains) {/Helvetica 1.000 cf} 2 16 0 1045 685 label
0  1.00 1021 741 1021 645 1165 645 1165 741 4 polygon
0  1.00 1261 741 1261 645 1405 645 1405 741 4 polygon
1  1.00 1245 709 1261 693 1245 677 3 polygon
1  1.00 1165 693 1261 693 2 polygon
(Lags) {/Helvetica 1.000 cf} 2 16 0 1293 685 label
1  1.00 1485 709 1501 693 1485 677 3 polygon
1  1.00 1405 693 1501 693 2 polygon
(Dead time) {/Helvetica 1.000 cf} 2 16 0 1525 685 label
0  1.00 1501 741 1501 645 1725 645 1725 741 4 polygon
1  1.00 893 693 32 0.00 360.00 xcarc
(S) {/Symbol 1.000 cf} 2 16 0 881 677 label
(q) {/Times-Roman 1.000 cf} 2 16 0 917 805 label
1  1.00 1005 709 1021 693 1005 677 3 polygon
1  1.00 925 693 1021 693 2 polygon
(PID) {/Helvetica 1.000 cf} 2 16 0 613 685 label
0  1.00 573 741 573 645 717 645 717 741 4 polygon
(r) {/Times-Roman 1.000 cf} 2 16 0 309 685 label
(c) {/Times-Roman 1.000 cf} 2 16 0 1805 709 label
1  1.00 893 733 893 821 2 polygon
2  1.00 829 773 829 613 1757 613 1757 773 4 polygon
(Process) {/Helvetica 1.000 cf} 2 16 0 1181 789 label
1  1.00 717 693 861 693 2 polygon
(Controller) {/Helvetica 1.000 cf} 2 16 0 477 789 label
(+) {/Helvetica 1.000 cf} 2 16 0 845 645 label
(The Smith Predictor control strategy) {/Helvetica-Oblique 1.000 cf} 2 16 0 781 949 label
(Gains) {/Helvetica 1.000 cf} 2 16 0 1045 509 label
0  1.00 1021 565 1021 469 1165 469 1165 565 4 polygon
0  1.00 1261 565 1261 469 1405 469 1405 565 4 polygon
1  1.00 1245 533 1261 517 1245 501 3 polygon
1  1.00 1165 517 1261 517 2 polygon
(Lags) {/Helvetica 1.000 cf} 2 16 0 1293 509 label
1  1.00 1485 533 1501 517 1485 501 3 polygon
1  1.00 1405 517 1501 517 2 polygon
(Dead time) {/Helvetica 1.000 cf} 2 16 0 1525 509 label
0  1.00 1501 565 1501 469 1725 469 1725 565 4 polygon
1  1.00 1005 533 1021 517 1005 501 3 polygon
1  1.00 925 517 1021 517 2 polygon
1.00 0 765 693 dot
(S) {/Symbol 1.000 cf} 2 16 0 1441 357 label
1  1.00 1453 373 32 0.00 360.00 xcarc
1.00 0 1453 517 dot
1  1.00 1453 517 1453 405 2 polygon
1  1.00 1437 421 1453 405 1469 421 3 polygon
(+) {/Helvetica 1.000 cf} 2 16 0 1413 413 label
(S) {/Symbol 1.000 cf} 2 16 0 1841 501 label
1  1.00 1853 517 32 0.00 360.00 xcarc
1  1.00 1805 533 1821 517 1805 501 3 polygon
1  1.00 1725 517 1821 517 2 polygon
1  1.00 1725 693 1853 693 1853 549 3 polygon
1  1.00 1837 565 1853 549 1869 565 3 polygon
(+) {/Helvetica 1.000 cf} 2 16 0 1813 549 label
(-) {/Helvetica 1.000 cf} 2 16 0 1797 477 label
1  1.00 1853 485 1853 373 1485 373 3 polygon
1  1.00 1501 389 1485 373 1501 357 3 polygon
(+) {/Helvetica 1.000 cf} 2 16 0 1493 397 label
1  1.00 1421 373 445 373 445 533 3 polygon
(Process model) {/Helvetica 1.000 cf} 2 16 0 733 469 label
1  1.00 925 517 765 517 765 693 3 polygon
3  1.00 381 773 797 773 797 581 1917 581 1917 309 381 309 381 773 7 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
