%!PS-Adobe-3.0 EPSF-3.0
%%Title: 7100x005.eps
%%Creator: Xcircuit v2.0
%%CreationDate: Sun Sep 22 08:38:55 2002
%%Pages: 1
%%BoundingBox: 68 68 267 259
%%DocumentNeededResources: font Helvetica 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.0
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--2/25/99  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.0 2
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/cf { dup type /realtype eq {40 mul /fscale exch def} if dup /xfont exch def
   findfont fscale scalefont setfont } def
/Ss { gsave 0.67 dup scale gsave mty neg rmoveto
   glevel 1 add /glevel exch def } def
/ss { gsave 0.67 dup scale gsave mty 0.5 mul rmoveto
   glevel 1 add /glevel exch def } def
/ns { currentpoint transform   % preserve x position!
   glevel {grestore} repeat /glevel 0 def
   itransform pop currentpoint pop sub 0 rmoveto } def
/ul { showflag 1 eq { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { showflag 1 eq { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave true charpath flattenpath pathbbox pop exch pop sub
   grestore } def
/bs { stW 0 rmoveto } def
/pspc 0 def
/qS { (aa) stW (a a) stW sub 4 div 0 rmoveto } def
/hS { qS qS } def
/textx { dup 1 add copy 0 exch { exch dup type /stringtype eq
	{stringwidth pop add}{exec} ifelse } repeat neg ns } def
/mty { 0 topmat setmatrix (A) true charpath flattenpath pathbbox exch
   pop exch sub exch pop neg grestore } def
/texty { gsave 2 copy pop exec mty } def
/tcenter { textx grestore 0.5 mul 0 rmoveto } def
/tright  { textx grestore fspc sub 0 rmoveto } def
/tmiddle { texty 0.5 mul rmoveto } def
/ttop    { texty fspc sub rmoveto } def
/tshow {{ dup type /stringtype eq {show}{exec} ifelse} repeat ns } def

/label  { gsave translate 0 0 moveto rotate /just exch def just 16 and 0 gt
	{0 1 dtransform gsave pagemat setmatrix idtransform exch grestore
	1 0 dtransform gsave pagemat setmatrix idtransform exch grestore
	dup 0 eq {pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse
	{-1 /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse exch 0 lt
	{-1 /just just dup 12 and 4 ne {12 xor} if def} {1} ifelse scale } if
	/glevel 0 def /showflag 0 def /fspc pspc def
	just 1 and 0 gt {gsave just 2 and 0 gt {tright}{tcenter} ifelse}
	{fspc 0 rmoveto} ifelse
	just 4 and 0 gt {just 8 and 0 gt {ttop}{tmiddle} ifelse}
	{0 fspc rmoveto} ifelse
	/showflag 1 def tshow grestore } def
/pinlabel { hlevel 0 eq { /pspc 20 def label /pspc 0 def }
	{ pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/begingate { /hlevel hlevel 1 add def gsave translate 0 0 moveto dup 0 lt
	{neg 1 sub -1 1 scale} if rotate dup scale } bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore } bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt { newpath } { stroke } ifelse grestore } def
/scb { gsave setrgbcolor } bind def  /sce { grestore } bind def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 setgray } def
/insertion {/PSobj save def /showpage {} def bop translate} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/arrowhead {
% -12 -32 24 36 bbox
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249  1.00 endpath
endgate
} def

/arrow {
% -12 -40 24 80 bbox
begingate
1  0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

%%Page: 7100x001.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 960 512 offsets
0.7500 inchscale
2.6000 setlinewidth

0.600 0.600 0.600 scb
241  1.00 576 768 584 760 576 752 584 744 576 736 584 728 576 720 584 712 576 
704 584 696 576 688 584 680 576 672 584 664 576 656 584 648 576 640 584 632 576 
624 584 616 576 608 584 600 576 592 584 584 576 576 584 568 576 560 584 552 576 
544 584 536 576 528 584 520 576 512 584 504 576 496 584 488 576 480 584 472 576 
464 584 456 576 448 584 440 576 432 584 424 576 416 672 416 664 424 672 432 664 
440 672 448 664 456 672 464 664 472 672 480 664 488 672 496 664 504 672 512 664 
520 672 528 664 536 672 544 664 552 672 560 664 568 672 576 664 584 672 592 664 
600 672 608 664 616 672 624 664 632 672 640 664 648 672 656 664 664 672 672 664 
680 672 688 664 696 672 704 664 712 672 720 664 728 672 736 664 744 672 752 664 
760 672 768 576 768 91 polygon
sce
1  1.00 576 768 584 760 576 752 584 744 576 736 584 728 576 720 584 712 576 704 
584 696 576 688 584 680 576 672 584 664 576 656 584 648 576 640 584 632 576 624 
584 616 576 608 584 600 576 592 584 584 576 576 584 568 576 560 584 552 576 544 
584 536 576 528 584 520 576 512 584 504 576 496 584 488 576 480 584 472 576 464 
584 456 576 448 584 440 576 432 584 424 576 416 672 416 664 424 672 432 664 440 
672 448 664 456 672 464 664 472 672 480 664 488 672 496 664 504 672 512 664 520 
672 528 664 536 672 544 664 552 672 560 664 568 672 576 664 584 672 592 664 600 
672 608 664 616 672 624 664 632 672 640 664 648 672 656 664 664 672 672 664 680 
672 688 664 696 672 704 664 712 672 720 664 728 672 736 664 744 672 752 664 760 
672 768 576 768 91 polygon
1  1.00 672 768 576 752 2 polygon
1  1.00 672 752 576 736 2 polygon
1  1.00 672 736 576 720 2 polygon
1  1.00 672 720 576 704 2 polygon
1  1.00 672 704 576 688 2 polygon
1  1.00 672 688 576 672 2 polygon
1  1.00 672 672 576 656 2 polygon
1  1.00 672 656 576 640 2 polygon
1  1.00 672 640 576 624 2 polygon
1  1.00 672 624 576 608 2 polygon
1  1.00 672 608 576 592 2 polygon
1  1.00 672 592 576 576 2 polygon
1  1.00 672 576 576 560 2 polygon
1  1.00 672 560 576 544 2 polygon
1  1.00 672 544 576 528 2 polygon
1  1.00 672 528 576 512 2 polygon
1  1.00 672 512 576 496 2 polygon
1  1.00 672 496 576 480 2 polygon
1  1.00 672 480 576 464 2 polygon
1  1.00 672 464 576 448 2 polygon
1  1.00 672 448 576 432 2 polygon
1  1.00 672 432 576 416 2 polygon
0.600 0.600 0.600 scb
240  1.00 528 816 528 768 720 768 720 816 4 polygon
sce
0  1.00 528 816 528 768 720 768 720 816 4 polygon
1  1.00 584 768 584 816 2 polygon
1  1.00 664 768 664 816 2 polygon
(Right-handed) {/Helvetica 1.000 cf} 2 16 0 504 880 label
(threads) {/Helvetica 1.000 cf} 2 16 0 552 840 label
241  1.00 544 632 584 616 544 600 544 632 4 polygon
1  1.00 544 632 520 640 352 640 352 592 520 592 544 600 6 polygon
1  1.00 520 640 520 592 2 polygon
1  1.00 520 632 352 632 2 polygon
1  1.00 352 608 520 608 2 polygon
80  1.00 304 640 304 592 352 592 352 640 4 polygon
(Pencil) {/Helvetica 1.000 cf} 2 16 0 336 700 label
1.000 0.000 0.000 scb
241  1.00 564 776 532 792 564 808 564 800 628 800 628 784 564 784 564 776 
8 polygon
(Turn) {/Helvetica 1.000 cf} 2 16 0 632 780 label
sce
0.000 0.000 1.000 scb
241  1.00 592 336 624 288 656 336 640 336 640 384 608 384 608 336 592 336 
8 polygon
(Bolt motion) {/Helvetica 1.000 cf} 2 16 0 528 256 label
sce
(\(held stationary\)) {/Helvetica 1.000 cf} 2 16 0 256 656 label
1.000 0.000 1.000 scb
1.00 105 624 576 arrow
(Thread motion) {/Helvetica 1.000 cf} 2 16 15 688 576 label
sce
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
