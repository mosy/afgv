%!PS-Adobe-3.0 EPSF-3.0
%%Title: i01974x01.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Fri Mar 23 03:26:08 2007
%%Pages: 1
%%BoundingBox: 68 68 409 284
%%DocumentNeededResources: font Helvetica font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def

%%Page: 8400x020.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 864 608 offsets
0.7500 inchscale
2.6000 setlinewidth

0.800 0.800 0.800 scb
1 1.00 384 992 384 352 2 polygon
1 1.00 416 992 416 352 2 polygon
1 1.00 448 992 448 352 2 polygon
1 1.00 480 992 480 352 2 polygon
1 1.00 512 992 512 352 2 polygon
1 1.00 544 992 544 352 2 polygon
1 1.00 576 992 576 352 2 polygon
1 1.00 608 992 608 352 2 polygon
1 1.00 640 992 640 352 2 polygon
1 1.00 672 992 672 352 2 polygon
1 1.00 704 992 704 352 2 polygon
1 1.00 736 992 736 352 2 polygon
1 1.00 768 992 768 352 2 polygon
1 1.00 800 992 800 352 2 polygon
1 1.00 832 992 832 352 2 polygon
1 1.00 864 992 864 352 2 polygon
1 1.00 896 992 896 352 2 polygon
1 1.00 928 992 928 352 2 polygon
1 1.00 960 992 960 352 2 polygon
1 1.00 992 992 992 352 2 polygon
1 1.00 1024 992 1024 352 2 polygon
1 1.00 1056 992 1056 352 2 polygon
1 1.00 1088 992 1088 352 2 polygon
1 1.00 1120 992 1120 352 2 polygon
1 1.00 1152 992 1152 352 2 polygon
1 1.00 1184 992 1184 352 2 polygon
1 1.00 1216 992 1216 352 2 polygon
1 1.00 1248 992 1248 352 2 polygon
1 1.00 1280 992 1280 352 2 polygon
1 1.00 1312 992 1312 352 2 polygon
1 1.00 1344 992 1344 352 2 polygon
1 1.00 1376 992 1376 352 2 polygon
1 1.00 1408 992 1408 352 2 polygon
1 1.00 1440 992 1440 352 2 polygon
1 1.00 352 992 1440 992 2 polygon
1 1.00 352 960 1440 960 2 polygon
1 1.00 352 928 1440 928 2 polygon
1 1.00 352 896 1440 896 2 polygon
1 1.00 352 864 1440 864 2 polygon
1 1.00 352 832 1440 832 2 polygon
1 1.00 352 800 1440 800 2 polygon
1 1.00 352 768 1440 768 2 polygon
1 1.00 352 736 1440 736 2 polygon
1 1.00 352 704 1440 704 2 polygon
1 1.00 352 672 1440 672 2 polygon
1 1.00 352 640 1440 640 2 polygon
1 1.00 352 608 1440 608 2 polygon
1 1.00 352 576 1440 576 2 polygon
1 1.00 352 544 1440 544 2 polygon
1 1.00 352 512 1440 512 2 polygon
1 1.00 352 480 1440 480 2 polygon
1 1.00 352 448 1440 448 2 polygon
1 1.00 352 416 1440 416 2 polygon
1 1.00 352 384 1440 384 2 polygon
sce
1 1.00 352 992 352 352 1440 352 3 polygon
(Time) {/Helvetica cf} 2 16 0 1.00 784 256 label
1.00 90 928 272 arrow
(0) {/Times-Roman cf} 2 16 0 0.50 328 344 label
(5) {/Times-Roman cf} 2 16 0 0.50 328 376 label
(10) {/Times-Roman cf} 2 16 0 0.50 320 408 label
(15) {/Times-Roman cf} 2 16 0 0.50 320 440 label
(20) {/Times-Roman cf} 2 16 0 0.50 320 472 label
(25) {/Times-Roman cf} 2 16 0 0.50 320 504 label
(30) {/Times-Roman cf} 2 16 0 0.50 320 536 label
(35) {/Times-Roman cf} 2 16 0 0.50 320 568 label
(40) {/Times-Roman cf} 2 16 0 0.50 320 600 label
(45) {/Times-Roman cf} 2 16 0 0.50 320 632 label
(50) {/Times-Roman cf} 2 16 0 0.50 320 664 label
(55) {/Times-Roman cf} 2 16 0 0.50 320 696 label
(60) {/Times-Roman cf} 2 16 0 0.50 320 728 label
(65) {/Times-Roman cf} 2 16 0 0.50 320 760 label
(70) {/Times-Roman cf} 2 16 0 0.50 320 792 label
(75) {/Times-Roman cf} 2 16 0 0.50 320 824 label
(80) {/Times-Roman cf} 2 16 0 0.50 320 856 label
(85) {/Times-Roman cf} 2 16 0 0.50 320 888 label
(90) {/Times-Roman cf} 2 16 0 0.50 320 920 label
(95) {/Times-Roman cf} 2 16 0 0.50 320 952 label
(100) {/Times-Roman cf} 2 16 0 0.50 312 984 label
1 1.00 448 352 448 320 2 polygon
1 1.00 544 352 544 320 2 polygon
1 1.00 640 352 640 320 2 polygon
1 1.00 736 352 736 320 2 polygon
1 1.00 832 352 832 320 2 polygon
1 1.00 928 352 928 320 2 polygon
1 1.00 1024 352 1024 320 2 polygon
1 1.00 1120 352 1120 320 2 polygon
1 1.00 1216 352 1216 320 2 polygon
1 1.00 1312 352 1312 320 2 polygon
1 1.00 1408 352 1408 320 2 polygon
(%) {/Times-Roman cf} 2 16 0 1.00 256 672 label
0.000 0.000 1.000 scb
(PV) {/Helvetica cf} 2 16 0 1.00 968 688 label
0.627 0.125 0.941 scb
(Output) {/Helvetica cf} 2 16 0 1.00 416 592 label
1 1.00 352 576 736 576 2 polygon
1 1.00 736 576 736 480 1440 480 3 polygon
0.000 0.000 1.000 scb
1 1.00 352 660 360 660 362 662 366 662 368 660 370 660 372 660 374 662 378 660 
380 660 382 660 384 660 386 660 390 660 392 662 394 662 402 660 404 660 408 660 
410 660 416 658 420 658 428 660 430 660 434 660 438 662 442 662 444 662 446 660 
450 660 454 660 458 662 460 662 464 660 470 660 472 660 474 660 474 662 482 662 
486 662 492 662 494 662 496 660 500 660 502 660 508 662 510 662 514 662 518 660 
524 662 528 662 530 662 532 664 534 664 538 664 542 666 546 666 548 666 552 666 
556 664 560 664 566 664 568 664 570 666 582 664 586 664 590 662 590 660 594 660 
596 660 600 660 602 662 604 662 614 660 622 658 624 660 626 660 634 660 640 658 
648 660 650 660 652 660 654 660 654 662 658 662 660 662 666 662 672 660 678 660 
682 662 684 662 690 662 694 662 698 662 700 662 702 662 710 664 712 662 714 662 
716 662 718 662 720 662 724 662 726 662 728 662 730 662 734 662 736 662 738 662 
740 662 740 664 742 664 744 664 746 664 748 664 750 664 752 666 754 666 754 668 
756 668 758 670 762 672 764 674 766 674 770 676 772 676 774 678 776 678 778 678 
780 678 782 680 131 polygon
1 1.00 782 680 786 684 788 684 790 686 792 686 794 686 796 688 798 688 802 690 
804 690 806 696 808 696 810 696 814 696 816 696 818 698 820 698 820 700 822 702 
824 704 826 704 828 704 830 704 834 710 836 710 840 714 842 714 844 714 846 716 
848 716 850 716 852 716 858 716 860 716 864 720 868 722 880 724 882 726 884 726 
886 728 888 728 888 730 890 732 894 732 894 734 896 734 900 734 902 734 908 736 
908 738 910 740 912 742 916 744 918 744 920 744 922 748 924 750 928 752 930 752 
932 752 938 752 942 754 946 756 948 758 950 760 952 762 960 768 962 770 964 770 
970 768 972 768 976 768 982 772 984 772 992 774 994 774 1000 774 1002 778 1008 
784 1012 784 1034 794 1034 796 1040 800 1042 802 1044 802 1052 802 1054 802 
1056 806 1058 808 1058 810 1062 810 1066 812 1072 814 1074 816 1076 816 1078 
816 1080 818 1082 818 1088 820 1090 820 1098 826 1102 826 1110 828 1112 828 
1116 830 1120 832 1122 832 1130 834 1132 838 1132 840 1138 842 1142 844 1148 
846 1150 846 1154 848 1156 850 1174 856 1176 858 1178 860 1182 862 1190 866 
1190 868 1194 868 1196 868 1200 868 1206 868 1208 868 1210 870 1214 872 1216 
876 1220 880 1226 882 1228 882 1230 882 1246 892 1248 894 1254 894 1258 894 
1264 896 1270 898 1276 902 1278 904 1284 906 1288 906 1294 908 1300 912 1302 
914 1306 916 1308 918 1310 918 1312 920 1316 922 1320 924 1322 926 1330 928 
1332 928 1334 928 1336 928 1344 932 1348 934 1354 936 1358 936 1364 936 1372 
940 1374 942 1374 944 1380 944 1382 946 1382 948 1388 948 1390 948 1392 950 
1396 950 1396 952 1402 956 1408 958 1410 958 1412 958 1418 960 1420 960 1422 
962 1424 964 1426 964 1430 966 1432 966 1432 968 1434 968 1436 970 1438 970 
1440 970 190 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
