%!PS-Adobe-3.0 EPSF-3.0
%%Title: i02082x01.eps
%%Creator: XCircuit v3.7 rev26
%%CreationDate: Tue Jan 14 03:46:28 2014
%%Pages: 1
%%BoundingBox: 68 68 514 430
%%DocumentNeededResources: font Helvetica Helvetica-Oblique 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/pid::signal_air {
begingate
1 1.000 0 16 -16 -16 2 polygon
1 1.000 16 16 0 -16 2 polygon
1 1.000 -64 0 64 0 2 polygon
endgate
} def

/pid::main_front {
begingate
1 1.000 0 0 64 0.000 360.000 xcarc
1 1.000 -64 0 64 0 2 polygon
endgate
} def

/pid::field {
begingate
1 1.000 0 0 64 0.000 360.000 xcarc
endgate
} def

/pid::valve_positioner {
begingate
1 1.000 16 -96 16 32 2 polygon
1 1.000 -32 32 64 32 2 polygon
1 1.000 -32 96 64 96 64 32 -32 32 spline
0 1.000 16 0 16 -48 64 -48 64 0 4 polygon
1 1.000 16 80 16 112 -64 112 -64 0 -64 -16 16 -16 6 polygon
1 1.000 -80 64 -48 48 2 polygon
1 1.000 -80 48 -48 32 2 polygon
1 1.000 -32 -128 -32 -64 64 -128 64 -64 -32 -128 5 polygon
(P) {/Helvetica cf} 2 16 0 1.000 28 -40 label
endgate
} def

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/generic::arrow {
% nonetwork
begingate
1 0.800 0 -40 0 20 2 polygon
1.000 0 0 40 generic::arrowhead
endgate
} def


%%EndSetup

%%Page: i02078x01 1
%%PageOrientation: Portrait
/pgsave save def bop
% 32.00 8.00 gridspace
0.7500 inchscale
2.6000 setlinewidth 1024 1219 translate

1.000 0 -384 -464 pid::signal_air
1.000 0 -128 -336 pid::signal_air
1.000 1.000 0.000 scb
497 1.000 -512 0 64 0.000 360.000 xcarc
sce
1 1.000 -512 0 64 0.000 360.000 xcarc
1.000 1.000 0.000 scb
497 1.000 352 0 64 0.000 360.000 xcarc
sce
1.000 0 352 0 pid::main_front
1.000 1.000 0.000 scb
497 1.000 0 -336 64 0.000 360.000 xcarc
sce
1.000 0 0 -336 pid::field
1.000 1.000 0.000 scb
497 1.000 -672 -352 -576 -352 -576 -416 -672 -416 spline
496 1.000 -624 -448 -624 -496 -576 -496 -576 -448 4 polygon
497 1.000 -672 -576 -672 -512 -576 -576 -576 -512 -672 -576 5 polygon
sce
1.000 0 -640 -448 pid::valve_positioner
1.000 0 -512 -464 pid::signal_air
1 1.000 0 -400 0 -464 2 polygon
1 1.000 0 -448 0 -480 16 -464 -16 -464 spline
(IAS) {/Helvetica cf} 2 16 0 0.750 -24 -504 label
1 1.000 -480 -544 35 0.000 360.000 xcarc
1 1.000 -512 -528 -560 -480 2 polygon
0.000 0.000 1.000 scb
(Output range:) {/Helvetica cf} 2 16 0 0.750 -440 200 label
(4 to 20 mA) {/Helvetica-Oblique cf} 2 16 0 0.750 -440 168 label
(4 to 20 mA) {/Helvetica-Oblique cf} 2 16 0 0.750 -88 224 label
(Output display range:) {/Helvetica cf} 2 16 0 0.750 488 -64 label
(Output signal range:) {/Helvetica cf} 2 16 0 0.750 488 -144 label
(4 to 20 mA) {/Helvetica-Oblique cf} 2 16 0 0.750 488 -176 label
(0 to 100%) {/Helvetica-Oblique cf} 2 16 0 0.750 488 -96 label
0 1.000 472 -32 472 -192 792 -192 792 -32 4 polygon
1 1.000 472 -112 792 -112 2 polygon
1.000 165 280 80 generic::arrow
1.000 285 432 -72 generic::arrow
1 1.000 -456 232 -456 152 2 polygon
1.000 180 -512 112 generic::arrow
(Input range:) {/Helvetica cf} 2 16 0 0.750 -208 -136 label
(Output range:) {/Helvetica cf} 2 16 0 0.750 16 -136 label
(4 to 20 mA) {/Helvetica-Oblique cf} 2 16 0 0.750 -208 -168 label
0 1.000 -240 -104 -240 -184 224 -184 224 -104 4 polygon
1 1.000 -16 -104 -16 -184 2 polygon
1.000 180 0 -224 generic::arrow
(Input range:) {/Helvetica cf} 2 16 0 0.750 -736 -264 label
0 1.000 -768 -232 -768 -312 -304 -312 -304 -232 4 polygon
1 1.000 -544 -232 -544 -312 2 polygon
1.000 225 -544 -416 generic::arrow
1 0.900 -528 -400 -512 -384 -512 -312 3 polygon
(Stem stroke:) {/Helvetica cf} 2 16 0 0.750 -512 -264 label
(Input \(PV\) signal range:) {/Helvetica cf} 2 16 0 0.750 -80 256 label
sce
(PV) {/Helvetica cf} 2 16 0 0.500 256 -24 label
(Output) {/Helvetica cf} 2 16 0 0.500 280 -88 label
0.000 0.000 1.000 scb
(Input LRV:) {/Helvetica cf} 2 16 0 0.750 -744 200 label
(Input URV:) {/Helvetica cf} 2 16 0 0.750 -744 168 label
sce
(A) {/Helvetica cf} 2 16 0 0.750 -488 -568 label
1.000 0 -384 -848 pid::signal_air
1.000 1.000 0.000 scb
497 1.000 -672 -736 -576 -736 -576 -800 -672 -800 spline
496 1.000 -624 -832 -624 -880 -576 -880 -576 -832 4 polygon
497 1.000 -672 -960 -672 -896 -576 -960 -576 -896 -672 -960 5 polygon
sce
1.000 0 -640 -832 pid::valve_positioner
1.000 0 -512 -848 pid::signal_air
1 1.000 -480 -928 35 0.000 360.000 xcarc
1 1.000 -512 -912 -560 -864 2 polygon
0.000 0.000 1.000 scb
(Input range:) {/Helvetica cf} 2 16 0 0.750 -736 -648 label
0 1.000 -768 -616 -768 -696 -304 -696 -304 -616 4 polygon
1 1.000 -544 -616 -544 -696 2 polygon
1.000 225 -544 -800 generic::arrow
1 0.900 -528 -784 -512 -768 -512 -696 3 polygon
(Stem stroke:) {/Helvetica cf} 2 16 0 0.750 -512 -648 label
sce
1.000 0 -256 -464 pid::signal_air
1.000 90 -192 -400 pid::signal_air
1.000 90 -192 -528 pid::signal_air
1.000 90 -192 -656 pid::signal_air
1.000 90 -192 -784 pid::signal_air
1.000 180 -256 -848 pid::signal_air
(B) {/Helvetica cf} 2 16 0 0.750 -488 -952 label
(Desired control valve sequencing:) {/Helvetica-Oblique cf} 2 16 0 1.000 96 
-624 label
1.000 0.000 0.000 scb
497 1.000 624 -720 304 -704 304 -736 624 -720 4 polygon
497 1.000 304 -800 624 -784 624 -816 304 -800 4 polygon
sce
(0%) {/Helvetica cf} 2 16 0 0.500 296 -664 label
(100%) {/Helvetica cf} 2 16 0 0.500 608 -664 label
1 1.000 304 -688 304 -672 2 polygon
1 1.000 624 -688 624 -672 2 polygon
1 1.000 464 -688 464 -672 2 polygon
(50%) {/Helvetica cf} 2 16 0 0.500 448 -664 label
(\(open\)) {/Helvetica cf} 2 16 0 0.500 240 -728 label
(\(shut\)) {/Helvetica cf} 2 16 0 0.500 640 -728 label
(\(shut\)) {/Helvetica cf} 2 16 0 0.500 240 -808 label
(\(open\)) {/Helvetica cf} 2 16 0 0.500 640 -808 label
0 1.000 80 -576 80 -848 720 -848 720 -576 4 polygon
0.000 0.000 1.000 scb
(3 to 15 PSI) {/Helvetica-Oblique cf} 2 16 0 0.750 32 -168 label
0 1.000 -240 232 -240 152 -752 152 -752 232 4 polygon
sce
(FT) {/Helvetica cf} 2 16 0 1.000 -536 -16 label
(FIC) {/Helvetica cf} 2 16 0 1.000 320 16 label
(FY) {/Helvetica cf} 2 16 0 1.000 -24 -352 label
(FV) {/Helvetica cf} 2 16 0 0.750 -500 -544 label
(FV) {/Helvetica cf} 2 16 0 0.750 -500 -928 label
(FV-A) {/Helvetica cf} 2 16 0 1.000 112 -736 label
(FV-B) {/Helvetica cf} 2 16 0 1.000 112 -816 label
(Allen-Bradley MicroLogix) {/Helvetica cf} 2 16 0 0.750 424 56 label
(1100 PLC controller) {/Helvetica cf} 2 16 0 0.750 424 24 label
0.000 0.000 1.000 scb
(ADC count range:) {/Helvetica cf} 2 16 0 0.750 -88 168 label
(3120 to 15600 counts) {/Helvetica-Oblique cf} 2 16 0 0.750 -88 136 label
(SCP instruction) {/Helvetica cf} 2 16 0 0.750 272 256 label
(Input Min.:) {/Helvetica cf} 2 16 0 0.750 296 224 label
(Input Max.:) {/Helvetica cf} 2 16 0 0.750 296 192 label
(Scaled Min.:) {/Helvetica cf} 2 16 0 0.750 296 160 label
(Scaled Max.:) {/Helvetica cf} 2 16 0 0.750 296 128 label
0 1.000 -96 296 -96 120 640 120 640 296 4 polygon
1 1.000 256 296 256 120 2 polygon
sce
(with IF2OF2 analog card) {/Helvetica cf} 2 16 0 0.750 424 -8 label
3 1.000 288 0 -448 0 2 polygon
3 1.000 64 -336 352 -336 352 -64 3 polygon
1.000 0.000 0.000 scb
(?) {/Helvetica-Oblique cf} 2 16 0 0.750 -576 200 label
(?) {/Helvetica-Oblique cf} 2 16 0 0.750 -576 168 label
(?) {/Helvetica-Oblique cf} 2 16 0 0.750 456 224 label
(?) {/Helvetica-Oblique cf} 2 16 0 0.750 464 192 label
(?) {/Helvetica-Oblique cf} 2 16 0 0.750 480 160 label
(?) {/Helvetica-Oblique cf} 2 16 0 0.750 488 128 label
(?) {/Helvetica-Oblique cf} 2 16 0 0.750 -720 -296 label
(?) {/Helvetica-Oblique cf} 2 16 0 0.750 -488 -296 label
(?) {/Helvetica-Oblique cf} 2 16 0 0.750 -488 -680 label
(?) {/Helvetica-Oblique cf} 2 16 0 0.750 -720 -680 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
