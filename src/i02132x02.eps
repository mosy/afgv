%!PS-Adobe-3.0 EPSF-3.0
%%Title: i02132x02.eps
%%Creator: XCircuit v3.7 rev55
%%CreationDate: Mon Jul  6 05:17:21 2015
%%Pages: 1
%%BoundingBox: 68 68 476 321
%%DocumentNeededResources: font Helvetica Helvetica-Bold Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/analog::inductor {
begingate
1 1.000 20 -22 20 -38 0 -42 0 -18 spline
1 1.000 -20 -14 -20 -26 0 -22 0 -18 spline
1 1.000 20 38 20 22 0 18 0 42 spline
1 1.000 20 18 20 2 0 -2 0 22 spline
1 1.000 20 -2 20 -18 0 -22 0 2 spline
1 1.000 -20 26 -20 14 0 18 0 22 spline
1 1.000 -20 6 -20 -6 0 -2 0 2 spline
1 1.000 0 -42 0 -64 2 polygon
1 1.000 0 42 0 64 2 polygon
1.000 0.000 0.000 scb
(l.1) {/Times-Roman cf} 2 9 0 1.000 0 64 pinlabel
(l.2) {/Times-Roman cf} 2 13 0 1.000 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:L%i %pl.1 %pl.2 1.0U) {/Times-Roman cf} 2 0 0 1.000 -208 -160 infolabel
(sim:l %pl.1 %pl.2) {/Times-Roman cf} 2 0 0 1.000 -208 -208 infolabel
endgate
} def

/analog::gnd {
% trivial
begingate
1 1.000 0 0 0 -32 2 polygon
1 1.000 -32 -32 32 -32 2 polygon
1 1.000 -18 -46 18 -46 2 polygon
1 1.000 -4 -60 4 -60 2 polygon
0.933 0.604 0.000 scb
(GND) {/Times-Roman cf} 2 1 0 1.000 0 0 pinglobal
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def

/liec_dig::no_pushbutton {
begingate
1 1.000 -32 0 32 0 2 polygon
1 1.000 0 32 0 0 2 polygon
1 1.000 -64 -16 -16 -16 2 polygon
1.000 0 -16 -16 generic::dot
1 1.000 16 -16 64 -16 2 polygon
1.000 0 16 -16 generic::dot
endgate
} def

/liec_dig::no_contact {
begingate
1 1.000 -64 0 -16 0 2 polygon
1 1.000 -16 32 -16 -32 2 polygon
1 1.000 16 0 64 0 2 polygon
1 1.000 16 32 16 -32 2 polygon
endgate
} def

/liec_dig::nc_pushbutton {
begingate
1 1.000 16 -16 64 -16 2 polygon
1.000 0 16 -16 generic::dot
1 1.000 -32 -24 32 -24 2 polygon
1 1.000 0 -24 0 24 2 polygon
1 1.000 -64 -16 -16 -16 2 polygon
1.000 0 -16 -16 generic::dot
endgate
} def

/liec_dig::relay_coil {
begingate
1 1.000 0 0 32 0.000 360.000 xcarc
1 1.000 -64 0 -32 0 2 polygon
1 1.000 32 0 64 0 2 polygon
endgate
} def

/liec_dig::nc_contact {
begingate
1.000 0 0 0 liec_dig::no_contact
1 1.000 32 32 -32 -32 2 polygon
endgate
} def


%%EndSetup

%%Page: i02132x02 1
%%PageOrientation: Portrait
/pgsave save def bop
% 32.00 8.00 gridspace
0.7500 inchscale
2.6000 setlinewidth 1136 528 translate

1.000 90 -256 352 analog::inductor
1.000 90 -80 352 analog::inductor
1 1.000 -304 320 -32 320 2 polygon
1 1.000 -304 304 -32 304 2 polygon
1.000 270 -168 272 analog::inductor
1 1.000 -224 272 -256 272 -256 224 3 polygon
1 1.000 -112 272 -80 272 -80 224 3 polygon
0 1.000 -576 456 -576 440 -528 440 -528 456 4 polygon
1 1.000 -536 456 -536 440 2 polygon
1 1.000 -568 456 -568 440 2 polygon
0 1.000 -752 216 -752 200 -704 200 -704 216 4 polygon
1 1.000 -712 216 -712 200 2 polygon
1 1.000 -744 216 -744 200 2 polygon
(L1) {/Helvetica cf} 2 16 0 1.000 -720 576 label
(L2) {/Helvetica cf} 2 16 0 1.000 352 576 label
1.000 0 -32 176 analog::gnd
0 1.000 -272 224 -272 192 -240 192 -240 224 4 polygon
0 1.000 -96 224 -96 192 -64 192 -64 224 4 polygon
0 1.000 -368 416 -368 384 -336 384 -336 416 4 polygon
0 1.000 -208 416 -208 384 -176 384 -176 416 4 polygon
0 1.000 -160 416 -160 384 -128 384 -128 416 4 polygon
0 1.000 0 416 0 384 32 384 32 416 4 polygon
1 1.000 -192 384 -144 352 2 polygon
1 1.000 -192 352 -144 384 2 polygon
1.000 0.000 0.000 scb
(X1) {/Helvetica cf} 2 16 0 0.500 -268 200 label
(X2) {/Helvetica cf} 2 16 0 0.500 -92 200 label
sce
1 1.000 -16 352 16 352 16 384 3 polygon
1 1.000 -320 352 -352 352 -352 384 3 polygon
1.000 0.000 0.000 scb
(H1) {/Helvetica cf} 2 16 0 0.500 -364 392 label
(H2) {/Helvetica cf} 2 16 0 0.500 -204 392 label
(H3) {/Helvetica cf} 2 16 0 0.500 -156 392 label
(H4) {/Helvetica cf} 2 16 0 0.500 4 392 label
sce
1 1.000 -704 528 -704 448 -576 448 3 polygon
0 1.000 240 456 240 440 192 440 192 456 4 polygon
1 1.000 200 456 200 440 2 polygon
1 1.000 232 456 232 440 2 polygon
1 1.000 368 528 368 448 240 448 3 polygon
0 1.000 -816 -80 -816 -112 -784 -112 -784 -80 4 polygon
0 1.000 -592 -80 -592 -112 -560 -112 -560 -80 4 polygon
1.000 0 -336 -80 liec_dig::no_pushbutton
1 1.000 -784 -96 -752 -96 2 polygon
1 1.000 -624 -96 -592 -96 2 polygon
1.000 0 -336 -240 liec_dig::no_contact
1 1.000 -880 -64 -880 -96 -816 -96 3 polygon
1 1.000 -400 -240 -496 -240 -496 -128 -464 -96 4 polygon
1 1.000 -272 -240 -176 -240 -176 -128 -208 -96 4 polygon
1 1.000 -560 -96 -464 -96 2 polygon
0 1.000 -240 -80 -240 -112 -208 -112 -208 -80 4 polygon
0 1.000 -464 -80 -464 -112 -432 -112 -432 -80 4 polygon
1 1.000 -432 -96 -400 -96 2 polygon
1.000 0 -688 -80 liec_dig::nc_pushbutton
1 1.000 -272 -96 -240 -96 2 polygon
1.000 0 96 -96 liec_dig::relay_coil
1.000 0 416 -96 liec_dig::nc_contact
1 1.000 -272 208 -704 208 2 polygon
1 1.000 544 192 544 208 -64 208 3 polygon
(Start) {/Helvetica cf} 2 16 0 1.000 -384 -32 label
(Stop) {/Helvetica cf} 2 16 0 1.000 -736 -32 label
1 1.000 -208 -96 32 -96 2 polygon
1 1.000 160 -96 352 -96 2 polygon
(M) {/Helvetica cf} 2 16 0 1.000 80 -112 label
(M) {/Helvetica cf} 2 16 0 1.000 -352 -192 label
(OL) {/Helvetica cf} 2 16 0 1.000 384 -48 label
0.000 0.000 1.000 scb
(1) {/Helvetica-Bold cf} 2 16 0 0.750 -496 224 label
(2) {/Helvetica-Bold cf} 2 16 0 0.750 384 224 label
(3) {/Helvetica-Bold cf} 2 16 0 0.750 -848 224 label
(4) {/Helvetica-Bold cf} 2 16 0 0.750 -528 -80 label
(5) {/Helvetica-Bold cf} 2 16 0 0.750 -80 -80 label
(6) {/Helvetica-Bold cf} 2 16 0 0.750 256 -80 label
(3) {/Helvetica-Bold cf} 2 16 0 0.750 -864 -80 label
(4) {/Helvetica-Bold cf} 2 16 0 0.750 -464 -224 label
sce
1 1.000 -32 176 -64 208 2 polygon
1 1.000 -880 -64 -880 208 -752 208 3 polygon
1 1.000 480 -96 544 -96 544 208 3 polygon
0 1.000 -720 560 -720 528 -688 528 -688 560 4 polygon
0 1.000 352 560 352 528 384 528 384 560 4 polygon
1.000 0.000 0.000 scb
(L1) {/Helvetica cf} 2 16 0 0.500 -712 536 label
(L2) {/Helvetica cf} 2 16 0 0.500 360 536 label
(A) {/Helvetica cf} 2 16 0 0.500 -808 -104 label
(B) {/Helvetica cf} 2 16 0 0.500 -584 -104 label
(C) {/Helvetica cf} 2 16 0 0.500 -456 -104 label
(D) {/Helvetica cf} 2 16 0 0.500 -232 -104 label
(Terminal labels shown as red letters) {/Helvetica cf} 2 16 0 1.000 -128 -208 
label
0.000 0.000 1.000 scb
(Wire labels shown as blue numbers) {/Helvetica cf} 2 16 0 1.000 -128 -256 
label
(L1) {/Helvetica-Bold cf} 2 16 0 0.750 -656 464 label
(L2) {/Helvetica-Bold cf} 2 16 0 0.750 288 464 label
(H1) {/Helvetica-Bold cf} 2 16 0 0.750 -464 464 label
(H4) {/Helvetica-Bold cf} 2 16 0 0.750 96 464 label
sce
1 1.000 -528 448 -384 448 -352 416 3 polygon
1 1.000 192 448 48 448 16 416 3 polygon
1 1.000 -192 416 -192 448 -144 448 -144 416 4 polygon
(480x120 VAC) {/Helvetica cf} 2 16 0 1.000 0 304 label
(control power transformer) {/Helvetica cf} 2 16 0 0.500 8 280 label
(Blk) {/Helvetica cf} 2 16 0 0.500 -656 416 label
(Blu) {/Helvetica cf} 2 16 0 0.500 -512 176 label
(Blk) {/Helvetica cf} 2 16 0 0.500 288 416 label
(Blk) {/Helvetica cf} 2 16 0 0.500 96 416 label
(Blk) {/Helvetica cf} 2 16 0 0.500 -464 416 label
(Blu) {/Helvetica cf} 2 16 0 0.500 -848 176 label
(Blu) {/Helvetica cf} 2 16 0 0.500 0 176 label
(Blu) {/Helvetica cf} 2 16 0 0.500 -80 -128 label
(Blu) {/Helvetica cf} 2 16 0 0.500 256 -128 label
(Blu) {/Helvetica cf} 2 16 0 0.500 -544 -128 label
0.000 0.000 1.000 scb
(5) {/Helvetica-Bold cf} 2 16 0 0.750 -224 -224 label
sce
(F1) {/Helvetica cf} 2 16 0 1.000 -576 472 label
(F2) {/Helvetica cf} 2 16 0 1.000 192 472 label
(F3) {/Helvetica cf} 2 16 0 1.000 -752 232 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
