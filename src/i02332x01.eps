%!PS-Adobe-3.0 EPSF-3.0
%%Title: i02332x01.eps
%%Creator: Xcircuit v3.0
%%CreationDate: Sun Apr  8 13:43:41 2007
%%Pages: 1
%%BoundingBox: 68 68 464 330
%%DocumentNeededResources: font Helvetica font Helvetica-Oblique 
%%+ font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 2.4
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--5/16/01  (tim@bach.ece.jhu.edu)
%  The Johns Hopkins University
%
%%BeginResource: procset XCIRCproc 2.4 1
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {exec}
	ifelse } repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {show}{exec} ifelse}
	repeat grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate { /hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/makeparm  {3 string cvs dup length 1 add string /tstr exch def tstr exch
	1 exch putinterval tstr 0 (v) putinterval tstr cvn} bind def
/beginparm { -1 1 {makeparm exch def} for
	dup type /arraytype eq { aload length -1 1 {makeparm exch def}
	for } if begingate } bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if 
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if 
  style dup 256 ge exch 480 lt and { gsave 1 setgray eofill grestore } if
  style 16 and 0 gt { gsave style 224 and -5 bitshift dup 7 lt
	{gar exch get ppaint} { pop eofill } ifelse grestore } if
  style 8 and 0 gt style 512 eq or { newpath } { stroke } ifelse grestore } def

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def bop rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

/bin_arrow {
begingate
241 1.00 32 0 16 16 16 -16 32 0 4 polygon
1 1.00 16 0 -16 0 2 polygon
endgate
} def

/dot {
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/no_pushbutton {
begingate
1 1.00 -32 0 32 0 2 polygon
1 1.00 0 32 0 0 2 polygon
1 1.00 -64 -16 -16 -16 2 polygon
1.00 0 -16 -16 dot
1 1.00 16 -16 64 -16 2 polygon
1.00 0 16 -16 dot
endgate
} def

/no_input {
begingate
1.00 0 -160 8 no_pushbutton
1 1.00 -224 56 224 56 2 polygon
1 1.00 -224 -56 224 -56 2 polygon
1 1.00 -272 56 -272 -56 -224 -56 -224 56 spline
1 1.00 272 56 272 -56 224 -56 224 56 spline
endgate
} def

/bin_or {
begingate
1 1.00 0 0 64 0.00 360.00 xcarc
(OR) {/Helvetica cf} 2 16 0 1.00 -32 -16 label
1 1.00 -64 128 -64 -128 2 polygon
endgate
} def

/jumper {
% trivial
begingate
1 1.00 0 0 10 -90.00 90.00 xcarc
1 1.00 0 10 0 16 2 polygon
1 1.00 0 -10 0 -16 2 polygon
1.000 0.000 0.000 scb
(a) {/Times-Roman cf} 2 1 0 1.00 0 16 pinlabel
(a) {/Times-Roman cf} 2 13 0 1.00 0 -16 pinlabel
endgate
} def

%%Page: i02328x01.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 1398 927 offsets
0.6000 inchscale
2.6000 setlinewidth

0 1.00 1350 1263 1350 1167 1446 1167 1446 1263 4 polygon
(S) {/Helvetica cf} 2 16 0 1.00 1382 1199 label
0 1.00 1350 1167 1350 1071 1446 1071 1446 1167 4 polygon
(0) {ss} (R) {/Helvetica cf} 4 16 0 1.00 1382 1103 label
1.00 0 1318 1215 bin_arrow
1.00 0 1318 1119 bin_arrow
1 1.00 1446 1215 1494 1215 2 polygon
0 1.00 1350 783 1350 687 1446 687 1446 783 4 polygon
(S) {/Helvetica cf} 2 16 0 1.00 1382 719 label
0 1.00 1350 687 1350 591 1446 591 1446 687 4 polygon
(0) {ss} (R) {/Helvetica cf} 4 16 0 1.00 1382 623 label
1.00 0 1318 735 bin_arrow
1.00 0 1318 639 bin_arrow
1 1.00 1446 735 1494 735 2 polygon
1.00 0 578 1327 no_input
1 1.00 1642 1159 1642 1271 1690 1271 1690 1159 spline
1 1.00 2058 1159 2058 1271 2010 1271 2010 1159 spline
(Fwd run contactor) {/Helvetica cf} 2 16 0 1.00 1698 1199 label
1 1.00 1690 1271 2010 1271 2 polygon
1 1.00 1690 1159 2010 1159 2 polygon
1 1.00 1642 679 1642 791 1690 791 1690 679 spline
1 1.00 2058 679 2058 791 2010 791 2010 679 spline
1 1.00 1690 791 2010 791 2 polygon
1 1.00 1690 679 2010 679 2 polygon
(Rvs run contactor) {/Helvetica cf} 2 16 0 1.00 1698 719 label
1 1.00 1494 1215 1622 1215 2 polygon
1.00 0 1622 1215 bin_arrow
1 1.00 1494 735 1622 735 2 polygon
1.00 0 1622 735 bin_arrow
(Fwd pushbutton) {/Helvetica cf} 2 16 0 1.00 530 1319 label
1.00 0 578 431 no_input
(Rvs pushbutton) {/Helvetica cf} 2 16 0 1.00 530 423 label
1.00 0 578 879 no_input
(Stop pushbutton) {/Helvetica cf} 2 16 0 1.00 514 871 label
1 1.00 838 879 918 879 2 polygon
1.00 0 1142 1119 bin_or
1 1.00 1206 1119 1302 1119 2 polygon
1 1.00 838 1327 1270 1327 1270 1215 1302 1215 4 polygon
1.00 0 1142 639 bin_or
1 1.00 1206 639 1302 639 2 polygon
1.00 0 1270 639 jumper
1 1.00 1270 623 1270 431 838 431 3 polygon
1 1.00 1270 655 1270 735 1302 735 3 polygon
1.00 0 1046 735 bin_arrow
1.00 0 1046 543 bin_arrow
1.00 0 1046 1215 bin_arrow
1.00 0 1046 1023 bin_arrow
1 1.00 1030 1023 1014 1023 1014 927 1590 927 1590 735 5 polygon
1.00 0 1590 735 dot
1.00 0 1542 927 jumper
1 1.00 1542 943 1542 1215 2 polygon
1.00 0 1542 1215 dot
1 1.00 1030 735 1014 735 1014 831 1542 831 1542 911 5 polygon
1 1.00 918 879 918 1215 1030 1215 3 polygon
1 1.00 918 879 918 543 1030 543 3 polygon
1.00 0 918 879 dot
3 1.00 870 1439 870 319 2 polygon
3 1.00 1606 1439 1606 319 2 polygon
(Input from field) {/Helvetica-Oblique cf} 2 16 0 1.00 438 1423 label
(Output to field) {/Helvetica-Oblique cf} 2 16 0 1.00 1702 1423 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
