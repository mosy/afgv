%!PS-Adobe-3.0 EPSF-3.0
%%Title: i02674x01.eps
%%Creator: XCircuit v3.6 rev164
%%CreationDate: Thu Dec 30 09:28:59 2010
%%Pages: 1
%%BoundingBox: 68 68 526 411
%%DocumentNeededResources: font Helvetica Helvetica-Bold Courier 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.3
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--7/13/05  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.3 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate
	0 0 moveto neg rotate dup scale cvx exec image grestore } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/plc::contact_NO {
begingate
1 1.000 -96 0 -32 0 2 polygon
1 1.000 -32 32 -32 -32 2 polygon
1 1.000 96 0 32 0 2 polygon
1 1.000 32 32 32 -32 2 polygon
endgate
} def

/plc::contact_NC {
begingate
1 1.000 -96 0 -32 0 2 polygon
1 1.000 -32 32 -32 -32 2 polygon
1 1.000 96 0 32 0 2 polygon
1 1.000 32 32 32 -32 2 polygon
1 1.000 16 32 -16 -32 2 polygon
endgate
} def


%%EndSetup

%%Page: 1 1
%%PageOrientation: Portrait
/pgsave save def bop
0.7500 inchscale
2.6000 setlinewidth 1056 960 translate

(PLC program listing) {/Helvetica cf} 2 16 0 1.000 -784 464 label
(<SP> - <PV>) {/Courier cf} 2 16 0 0.500 -96 360 label
(<Error>) {/Courier cf} 2 16 0 0.500 640 376 label
1 1.000 768 384 736 384 2 polygon
1 1.000 632 400 624 400 624 368 632 368 4 polygon
1 1.000 728 400 736 400 736 368 728 368 4 polygon
1 1.000 624 384 592 384 2 polygon
(Math) {/Helvetica-Bold cf} 2 16 0 0.750 -96 264 label
1 1.000 768 256 736 256 2 polygon
1 1.000 632 272 624 272 624 240 632 240 4 polygon
1 1.000 728 272 736 272 736 240 728 240 4 polygon
1 1.000 624 256 592 256 2 polygon
(<Bias> + \(<K_p> * <K_i> * <Error> * <scan_time> / 1000\)) {/Courier cf} 2 16 
0 0.500 -96 232 label
0 1.000 -112 296 -112 216 592 216 592 296 4 polygon
(<Bias>) {/Courier cf} 2 16 0 0.500 640 248 label
1.000 0 -672 256 plc::contact_NO
(Auto) {/Courier cf} 2 16 0 0.500 -696 304 label
1.000 0 -448 256 plc::contact_NO
1.000 0 -224 256 plc::contact_NO
1 1.000 -576 256 -544 256 2 polygon
1 1.000 -352 256 -320 256 2 polygon
1 1.000 -464 272 -432 256 -464 240 3 polygon
1 1.000 -208 272 -240 256 -208 240 3 polygon
(<Output>) {/Courier cf} 2 16 0 0.500 -528 304 label
(0) {/Courier cf} 2 16 0 0.500 -416 304 label
(<Output>) {/Courier cf} 2 16 0 0.500 -304 304 label
(100) {/Courier cf} 2 16 0 0.500 -192 304 label
(Math) {/Helvetica-Bold cf} 2 16 0 0.750 -96 136 label
1 1.000 632 144 624 144 624 112 632 112 4 polygon
1 1.000 624 128 592 128 2 polygon
0 1.000 -112 168 -112 88 592 88 592 168 4 polygon
1.000 0 -672 128 plc::contact_NO
(Auto) {/Courier cf} 2 16 0 0.500 -696 176 label
1 1.000 -576 128 -544 128 2 polygon
1 1.000 768 128 736 128 2 polygon
1 1.000 728 144 736 144 736 112 728 112 4 polygon
(<K_p> * <K_d> * \(<Error> - <Error_last>\) / 10) {/Courier cf} 2 16 0 0.500 
-96 104 label
(<Deriv>) {/Courier cf} 2 16 0 0.500 640 120 label
0 1.000 -112 40 -112 -40 592 -40 592 40 4 polygon
1.000 0 -672 0 plc::contact_NO
(Auto) {/Courier cf} 2 16 0 0.500 -696 48 label
1 1.000 -576 0 -544 0 2 polygon
1 1.000 632 16 624 16 624 -16 632 -16 4 polygon
1 1.000 624 0 592 0 2 polygon
1 1.000 768 0 736 0 2 polygon
1 1.000 728 16 736 16 736 -16 728 -16 4 polygon
(Math) {/Helvetica-Bold cf} 2 16 0 0.750 -96 8 label
(<Output>) {/Courier cf} 2 16 0 0.500 632 -8 label
1 1.000 -544 128 -112 128 2 polygon
1 1.000 -128 256 -112 256 2 polygon
1 1.000 -112 0 -544 0 2 polygon
(\(<K_p> * <Error>\) + <Bias> + <Deriv>) {/Courier cf} 2 16 0 0.500 -104 -24 
label
(Math) {/Helvetica-Bold cf} 2 16 0 0.750 -96 392 label
0 1.000 -112 424 -112 344 592 344 592 424 4 polygon
1 1.000 -112 384 -768 384 2 polygon
1.000 0 -672 -640 plc::contact_NO
1 1.000 -672 -664 -672 -616 2 polygon
497 1.000 -672 -616 -680 -640 -672 -632 -664 -640 -672 -616 5 polygon
(100_ms_clock) {/Courier cf} 2 16 0 0.500 -736 -592 label
0 1.000 -160 -600 -160 -680 544 -680 544 -600 4 polygon
1 1.000 768 -640 736 -640 2 polygon
1 1.000 584 -624 576 -624 576 -656 584 -656 4 polygon
1 1.000 728 -624 736 -624 736 -656 728 -656 4 polygon
1 1.000 576 -640 544 -640 2 polygon
(Copy) {/Helvetica-Bold cf} 2 16 0 0.750 -144 -632 label
(<Error>) {/Courier cf} 2 16 0 0.500 -144 -664 label
(<Error_last>) {/Courier cf} 2 16 0 0.500 584 -648 label
1 1.000 -160 -640 -576 -640 2 polygon
0 1.000 -112 -88 -112 -168 592 -168 592 -88 4 polygon
(Copy) {/Helvetica-Bold cf} 2 16 0 0.750 -96 -120 label
1.000 0 -672 -128 plc::contact_NC
1 1.000 -576 -128 -112 -128 2 polygon
(Auto) {/Courier cf} 2 16 0 0.500 -696 -64 label
(<PV>) {/Courier cf} 2 16 0 0.500 -96 -152 label
1 1.000 768 -128 736 -128 2 polygon
1 1.000 632 -112 624 -112 624 -144 632 -144 4 polygon
1 1.000 728 -112 736 -112 736 -144 728 -144 4 polygon
1 1.000 624 -128 592 -128 2 polygon
(<SP>) {/Courier cf} 2 16 0 0.500 656 -136 label
0 1.000 -112 -216 -112 -296 592 -296 592 -216 4 polygon
(Copy) {/Helvetica-Bold cf} 2 16 0 0.750 -96 -248 label
1.000 0 -672 -256 plc::contact_NC
1 1.000 -576 -256 -112 -256 2 polygon
(Auto) {/Courier cf} 2 16 0 0.500 -696 -208 label
1 1.000 768 -256 736 -256 2 polygon
1 1.000 632 -240 624 -240 624 -272 632 -272 4 polygon
1 1.000 728 -240 736 -240 736 -272 728 -272 4 polygon
1 1.000 624 -256 592 -256 2 polygon
(<Output>) {/Courier cf} 2 16 0 0.500 -96 -280 label
(<Bias>) {/Courier cf} 2 16 0 0.500 640 -264 label
0 1.000 -112 -344 -112 -424 592 -424 592 -344 4 polygon
(Copy) {/Helvetica-Bold cf} 2 16 0 0.750 -96 -376 label
1 1.000 -576 -384 -112 -384 2 polygon
1 1.000 768 -384 736 -384 2 polygon
1 1.000 632 -368 624 -368 624 -400 632 -400 4 polygon
1 1.000 728 -368 736 -368 736 -400 728 -400 4 polygon
1 1.000 624 -384 592 -384 2 polygon
(<Output>) {/Courier cf} 2 16 0 0.500 632 -392 label
1 1.000 -688 -368 -656 -384 -688 -400 3 polygon
1.000 0 -672 -384 plc::contact_NO
(<Output>) {/Courier cf} 2 16 0 0.500 -752 -336 label
(110) {/Courier cf} 2 16 0 0.500 -640 -336 label
(110) {/Courier cf} 2 16 0 0.500 -96 -408 label
0 1.000 -112 -472 -112 -552 592 -552 592 -472 4 polygon
(Copy) {/Helvetica-Bold cf} 2 16 0 0.750 -96 -504 label
1 1.000 -576 -512 -112 -512 2 polygon
1 1.000 768 -512 736 -512 2 polygon
1 1.000 632 -496 624 -496 624 -528 632 -528 4 polygon
1 1.000 728 -496 736 -496 736 -528 728 -528 4 polygon
1 1.000 624 -512 592 -512 2 polygon
(<Output>) {/Courier cf} 2 16 0 0.500 632 -520 label
1 1.000 -656 -496 -688 -512 -656 -528 3 polygon
1.000 0 -672 -512 plc::contact_NO
(<Output>) {/Courier cf} 2 16 0 0.500 -752 -464 label
(-10) {/Courier cf} 2 16 0 0.500 -640 -464 label
(-10) {/Courier cf} 2 16 0 0.500 -96 -536 label
1 1.000 -768 432 -768 -688 2 polygon
1 1.000 768 432 768 -688 2 polygon
0.604 0.604 0.604 scb
0 3.000 -800 448 -800 -704 800 -704 800 448 4 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
