%!PS-Adobe-3.0 EPSF-3.0
%%Title: i02895x02.eps
%%Creator: XCircuit v3.7 rev26
%%CreationDate: Thu Nov  7 05:29:40 2013
%%Pages: 1
%%BoundingBox: 68 68 512 379
%%DocumentNeededResources: font Helvetica Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def

/generic::jumper {
% trivial
begingate
1 1.000 0 0 10 -90.000 90.000 xcarc
1 1.000 0 10 0 16 2 polygon
1 1.000 0 -10 0 -16 2 polygon
1.000 0.000 0.000 scb
(a) {/Times-Roman cf} 2 1 0 1.000 0 16 pinlabel
(a) {/Times-Roman cf} 2 13 0 1.000 0 -16 pinlabel
endgate
} def


%%EndSetup

%%Page: i03997x01.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
0.7273 inchscale
2.6000 setlinewidth 967 879 translate

0.824 0.706 0.549 scb
497 1.000 544 176 192 0.000 360.000 xcarc
sce
1 1.000 544 176 192 0.000 360.000 xcarc
0.604 0.604 0.604 scb
497 1.000 448 72 16 0.000 360.000 xcarc
sce
1 1.000 448 72 16 0.000 360.000 xcarc
1 1.000 456 84 434 66 2 polygon
1 1.000 462 78 440 60 2 polygon
0.604 0.604 0.604 scb
497 1.000 512 72 16 0.000 360.000 xcarc
sce
1 1.000 512 72 16 0.000 360.000 xcarc
1 1.000 520 84 498 66 2 polygon
1 1.000 526 78 504 60 2 polygon
0.604 0.604 0.604 scb
497 1.000 576 72 16 0.000 360.000 xcarc
sce
1 1.000 576 72 16 0.000 360.000 xcarc
1 1.000 584 84 562 66 2 polygon
1 1.000 590 78 568 60 2 polygon
0.604 0.604 0.604 scb
497 1.000 640 72 16 0.000 360.000 xcarc
sce
1 1.000 640 72 16 0.000 360.000 xcarc
1 1.000 648 84 626 66 2 polygon
1 1.000 654 78 632 60 2 polygon
0.604 0.604 0.604 scb
497 1.000 512 304 16 0.000 360.000 xcarc
sce
1 1.000 512 304 16 0.000 360.000 xcarc
1 1.000 520 316 498 298 2 polygon
1 1.000 526 310 504 292 2 polygon
0.604 0.604 0.604 scb
497 1.000 576 304 16 0.000 360.000 xcarc
sce
1 1.000 576 304 16 0.000 360.000 xcarc
1 1.000 584 316 562 298 2 polygon
1 1.000 590 310 568 292 2 polygon
1 1.000 512 352 512 336 2 polygon
1 1.000 504 344 520 344 2 polygon
1 1.000 568 344 584 344 2 polygon
(Loop power) {/Helvetica cf} 2 16 0 0.700 472 248 label
0 1.000 528 128 528 112 560 112 560 128 4 polygon
1 1.000 528 120 512 120 512 104 3 polygon
1 1.000 512 120 448 120 448 104 3 polygon
1 1.000 560 120 576 120 576 104 3 polygon
1 1.000 576 120 640 120 640 104 3 polygon
0 1.000 528 152 528 136 560 136 560 152 4 polygon
1 1.000 528 144 448 144 448 128 3 polygon
1 1.000 512 144 512 128 2 polygon
1 1.000 560 144 576 144 576 128 3 polygon
0 1.000 528 176 528 160 560 160 560 176 4 polygon
1 1.000 560 168 576 168 576 152 3 polygon
1 1.000 528 168 512 168 512 152 3 polygon
1 1.000 512 184 512 200 544 216 576 200 576 184 5 polygon
1.000 0 544 216 generic::dot
1 1.000 576 216 576 208 2 polygon
1 1.000 572 212 580 212 2 polygon
1 1.000 508 212 516 212 2 polygon
0 1.000 416 96 416 48 480 48 480 96 4 polygon
0 1.000 480 96 480 48 544 48 544 96 4 polygon
0 1.000 544 96 544 48 608 48 608 96 4 polygon
0 1.000 608 96 608 48 672 48 672 96 4 polygon
0 1.000 480 328 480 280 544 280 544 328 4 polygon
0 1.000 544 328 544 280 608 280 608 328 4 polygon
(Sensor) {/Helvetica cf} 2 16 0 0.700 504 16 label
(Temperature) {/Helvetica cf} 2 16 0 1.000 424 440 label
(transmitter) {/Helvetica cf} 2 16 0 1.000 440 400 label
0.800 0.800 0.800 scb
496 1.000 -640 240 -640 80 -352 80 -352 240 4 polygon
sce
0 1.000 -640 240 -640 80 -352 80 -352 240 4 polygon
0.604 0.604 0.604 scb
497 1.000 -528 128 16 0.000 360.000 xcarc
sce
1 1.000 -528 128 16 0.000 360.000 xcarc
1 1.000 -520 140 -542 122 2 polygon
1 1.000 -514 134 -536 116 2 polygon
0.604 0.604 0.604 scb
497 1.000 -464 128 16 0.000 360.000 xcarc
sce
1 1.000 -464 128 16 0.000 360.000 xcarc
1 1.000 -456 140 -478 122 2 polygon
1 1.000 -450 134 -472 116 2 polygon
0 1.000 -560 152 -560 104 -496 104 -496 152 4 polygon
0 1.000 -496 152 -496 104 -432 104 -432 152 4 polygon
(24 VDC power supply) {/Helvetica cf} 2 16 0 1.000 -704 272 label
0.000 0.000 1.000 scb
1 2.000 -528 192 -528 160 2 polygon
1 2.000 -544 176 -512 176 2 polygon
1 2.000 -480 176 -448 176 2 polygon
0.824 0.706 0.549 scb
496 1.000 -192 304 -192 16 224 16 224 304 4 polygon
0.604 0.604 0.604 scb
497 1.000 -16 48 16 0.000 360.000 xcarc
sce
1 1.000 -16 48 16 0.000 360.000 xcarc
1 1.000 -8 60 -30 42 2 polygon
1 1.000 -2 54 -24 36 2 polygon
0.604 0.604 0.604 scb
497 1.000 48 48 16 0.000 360.000 xcarc
sce
1 1.000 48 48 16 0.000 360.000 xcarc
1 1.000 56 60 34 42 2 polygon
1 1.000 62 54 40 36 2 polygon
0 1.000 -48 72 -48 24 16 24 16 72 4 polygon
0 1.000 16 72 16 24 80 24 80 72 4 polygon
1 1.000 48 96 48 80 2 polygon
1 1.000 56 88 40 88 2 polygon
1 1.000 -8 88 -24 88 2 polygon
0 1.000 -192 304 -192 16 224 16 224 304 4 polygon
0 3.000 -128 256 -128 160 -80 160 -80 256 4 polygon
1 3.000 -128 208 -80 208 2 polygon
0 3.000 -48 256 -48 160 0 160 0 256 4 polygon
1 3.000 -48 208 0 208 2 polygon
0 3.000 32 256 32 160 80 160 80 256 4 polygon
1 3.000 32 208 80 208 2 polygon
0 3.000 112 256 112 160 160 160 160 256 4 polygon
1 3.000 112 208 160 208 2 polygon
0 1.000 -160 288 -160 128 192 128 192 288 4 polygon
(Panel-mounted indicator) {/Helvetica cf} 2 16 0 1.000 -200 376 label
(Temperature sensor) {/Helvetica cf} 2 16 0 1.000 -224 -480 label
(Red) {/Helvetica cf} 2 16 0 0.700 544 -464 label
0.604 0.604 0.604 scb
497 1.000 696 -512 16 0.000 360.000 xcarc
sce
1 1.000 696 -512 16 0.000 360.000 xcarc
1 1.000 704 -500 682 -518 2 polygon
1 1.000 710 -506 688 -524 2 polygon
0.604 0.604 0.604 scb
497 1.000 688 -592 16 0.000 360.000 xcarc
sce
1 1.000 688 -592 16 0.000 360.000 xcarc
1 1.000 696 -580 674 -598 2 polygon
1 1.000 702 -586 680 -604 2 polygon
0 1.000 664 -488 664 -536 728 -536 728 -488 4 polygon
0 1.000 656 -568 656 -616 720 -616 720 -568 4 polygon
(\(4-20 mA input\)) {/Helvetica cf} 2 16 0 1.000 -128 328 label
0.604 0.604 0.604 scb
497 1.000 688 -432 16 0.000 360.000 xcarc
sce
1 1.000 688 -432 16 0.000 360.000 xcarc
1 1.000 696 -420 674 -438 2 polygon
1 1.000 702 -426 680 -444 2 polygon
0 1.000 656 -408 656 -456 720 -456 720 -408 4 polygon
1 1.000 552 -512 680 -512 2 polygon
1 1.000 600 -496 608 -432 672 -432 544 -504 spline
1 1.000 600 -528 608 -592 672 -592 544 -520 spline
1 10.000 -608 -512 544 -512 2 polygon
0.604 0.604 0.604 scb
1 8.000 -608 -512 544 -512 2 polygon
sce
(White) {/Helvetica cf} 2 16 0 0.700 536 -584 label
(White) {/Helvetica cf} 2 16 0 0.700 584 -504 label
1 1.000 592 304 736 304 736 496 -320 496 -320 128 -448 128 6 polygon
1 1.000 512 56 512 -64 2 polygon
1 1.000 576 56 576 -64 2 polygon
1 1.000 448 56 448 -64 2 polygon
0.804 0.000 0.000 scb
1 1.000 48 32 48 -32 -528 -32 -528 112 4 polygon
1.000 0 -16 -32 generic::jumper
1 1.000 -16 -48 -16 -96 288 -96 288 304 496 304 5 polygon
1 1.000 -16 -16 -16 32 2 polygon
1 1.000 704 -432 768 -432 768 -128 576 -128 576 -64 5 polygon
1 1.000 712 -512 832 -512 832 -192 784 -192 4 polygon
1.000 270 768 -192 generic::jumper
1 1.000 752 -192 512 -192 512 -64 3 polygon
1 1.000 704 -592 896 -592 896 -256 848 -256 4 polygon
1.000 270 832 -256 generic::jumper
1.000 270 768 -256 generic::jumper
1 1.000 784 -256 816 -256 2 polygon
1 1.000 752 -256 448 -256 448 -64 3 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
