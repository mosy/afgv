%!PS-Adobe-3.0 EPSF-3.0
%%Title: i02954x01.eps
%%Creator: XCircuit v3.4 rev27
%%CreationDate: Fri Oct 12 05:43:40 2007
%%Pages: 1
%%BoundingBox: 68 68 477 332
%%DocumentNeededResources: font Helvetica font Helvetica-Oblique 
%%+ font Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.3
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--7/13/05  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.3 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate
	0 0 moveto neg rotate dup scale cvx exec image grestore } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/valve_globe_air {
begingate
1 1.00 -48 32 48 32 2 polygon
1 1.00 -48 -80 -48 -16 48 -80 48 -16 -48 -80 5 polygon
1 1.00 0 -48 0 32 2 polygon
1 1.00 -48 96 48 96 48 32 -48 32 spline
endgate
} def

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/tube_tee {
begingate
1 5.00 16 16 -16 16 2 polygon
1 5.00 0 16 0 0 2 polygon
endgate
} def

/dot {
begingate
248 1.00 0 0 6 0.00 360.00 xcarc
endgate
} def

/gauge {
begingate
0.604 0.604 0.604 scb
241 1.00 0 8 48 0.00 360.00 xcarc
sce
1 1.00 0 44 0 36 2 polygon
1 1.00 10 42 8 34 2 polygon
1 1.00 19 38 15 30 2 polygon
1 1.00 27 31 21 25 2 polygon
1 1.00 33 23 25 18 2 polygon
1 1.00 36 13 27 11 2 polygon
1 1.00 37 4 27 4 2 polygon
1 1.00 35 -5 26 -2 2 polygon
1 1.00 31 -13 23 -8 2 polygon
1 1.00 25 -20 19 -13 2 polygon
1 1.00 17 -25 13 -17 2 polygon
1 1.00 8 -28 7 -19 2 polygon
1 1.00 0 44 0 36 2 polygon
1 1.00 -10 42 -8 34 2 polygon
1 1.00 -19 38 -15 30 2 polygon
1 1.00 -27 31 -21 25 2 polygon
1 1.00 -33 23 -25 18 2 polygon
1 1.00 -36 13 -27 11 2 polygon
1 1.00 -37 4 -27 4 2 polygon
1 1.00 -35 -5 -26 -2 2 polygon
1 1.00 -31 -13 -23 -8 2 polygon
1 1.00 -25 -20 -19 -13 2 polygon
1 1.00 -17 -25 -13 -17 2 polygon
1 1.00 -8 -28 -7 -19 2 polygon
1.00 0 0 8 dot
0.604 0.604 0.604 scb
241 1.00 -8 -40 -8 -56 8 -56 8 -40 -8 -40 5 polygon
sce
1 1.00 0 8 48 0.00 360.00 xcarc
1 1.00 -8 -40 -8 -56 8 -56 8 -40 4 polygon
endgate
} def


%%EndSetup

%%Page: 5400x001.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
0.7500 inchscale
2.6000 setlinewidth 544 672 translate

0.361 0.675 0.933 scb
240 1.00 -32 16 -32 -416 384 -416 384 16 4 polygon
sce
1 2.00 384 288 384 -416 -32 -416 -32 288 4 polygon
1 2.00 512 352 256 352 256 -400 3 polygon
1 1.00 260 -406 2 -180.00 180.00 xcarc
1 1.00 270 -390 4 -180.00 180.00 xcarc
1 1.00 280 -358 5 -180.00 180.00 xcarc
1 1.00 288 -314 6 -180.00 180.00 xcarc
1 1.00 294 -264 7 -180.00 180.00 xcarc
1 1.00 300 -204 8 -180.00 180.00 xcarc
1 1.00 306 -136 10 -180.00 180.00 xcarc
1 1.00 314 -50 12 -180.00 180.00 xcarc
(bubbles) {/Helvetica-Oblique cf} 2 16 0 0.75 270 -104 label
1.00 0 752 400 valve_globe_air
1 1.00 752 400 688 400 688 496 752 496 752 480 5 polygon
1 1.00 512 384 512 320 608 384 608 320 512 384 5 polygon
1 2.00 608 352 704 352 2 polygon
1 2.00 800 352 896 352 2 polygon
1 1.00 912 352 880 352 896 336 896 368 spline
(dip) {/Helvetica cf} 2 16 0 1.00 280 216 label
(tube) {/Helvetica cf} 2 16 0 1.00 264 176 label
(Pressure ) {/Helvetica cf} 2 16 0 1.00 720 280 label
(regulator) {/Helvetica cf} 2 16 0 1.00 720 240 label
(needle valve) {/Helvetica cf} 2 16 0 1.00 464 288 label
1 2.00 512 32 448 32 448 352 3 polygon
1 1.00 560 352 560 416 2 polygon
1 1.00 528 416 592 416 2 polygon
(Compressed) {/Helvetica cf} 2 16 0 1.00 896 384 label
(air supply) {/Helvetica cf} 2 16 0 1.00 928 352 label
1 1.00 -48 -400 -96 -400 2 polygon
-1.00 180 -80 -400 arrowhead
1 1.00 -48 128 -96 128 2 polygon
1.00 0 -80 128 arrowhead
1 1.00 -80 112 -80 -64 2 polygon
(Measurement) {/Helvetica cf} 2 16 0 1.00 -288 -128 label
1 1.00 -80 -208 -80 -384 2 polygon
(0%) {/Times-Roman cf} 2 16 0 1.00 -176 -416 label
(100%) {/Times-Roman cf} 2 16 0 1.00 -208 112 label
1.00 0 448 336 tube_tee
(Water) {/Helvetica cf} 2 16 0 1.00 56 -200 label
1.00 90 984 32 gauge
1 3.00 992 32 1016 64 2 polygon
(\(100 PSI\)) {/Helvetica cf} 2 16 0 1.00 928 312 label
(11 ft) {/Times-Roman cf} (span = ) {/Helvetica cf} 4 16 0 1.00 -272 -168 label
(Pressure gauge) {/Helvetica cf} 2 16 0 1.00 848 96 label
1 2.00 928 32 512 32 2 polygon
(\(senses water) {/Helvetica-Oblique cf} 2 16 0 1.00 872 -56 label
(level remotely\)) {/Helvetica-Oblique cf} 2 16 0 1.00 872 -96 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
