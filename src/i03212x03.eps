%!PS-Adobe-3.0 EPSF-3.0
%%Title: i03212x03.eps
%%Creator: XCircuit v3.7 rev55
%%CreationDate: Wed Oct 15 07:11:27 2014
%%Pages: 1
%%BoundingBox: 68 68 445 260
%%DocumentNeededResources: font Helvetica Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/::dot {
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
endgate
} def

/::socket_8pin {
begingate
0.604 0.604 0.604 scb
240 1.000 -160 160 -160 -160 160 -160 160 160 4 polygon
240 1.000 -160 160 -160 224 160 224 160 160 4 polygon
241 1.000 -80 224 -80 160 2 polygon
241 1.000 0 224 0 160 2 polygon
241 1.000 80 224 80 160 2 polygon
240 1.000 -160 -224 -160 -160 160 -160 160 -224 4 polygon
241 1.000 -80 -160 -80 -224 2 polygon
241 1.000 0 -160 0 -224 2 polygon
241 1.000 80 -160 80 -224 2 polygon
sce
0 1.000 -160 160 -160 -160 160 -160 160 160 4 polygon
0 1.000 -160 160 -160 224 160 224 160 160 4 polygon
1 1.000 -80 224 -80 160 2 polygon
1 1.000 0 224 0 160 2 polygon
1 1.000 80 224 80 160 2 polygon
0 1.000 -160 -224 -160 -160 160 -160 160 -224 4 polygon
1 1.000 -80 -160 -80 -224 2 polygon
1 1.000 0 -160 0 -224 2 polygon
1 1.000 80 -160 80 -224 2 polygon
1 1.000 0 0 16 0.000 360.000 xcarc
1 1.000 -4 -24 4 -24 4 -16 -4 -16 spline
1.000 0 -80 32 ::dot
1.000 0 -80 -32 ::dot
1.000 0 80 32 ::dot
1.000 0 80 -32 ::dot
1.000 0 -32 80 ::dot
1.000 0 32 80 ::dot
1.000 0 -32 -80 ::dot
1.000 0 32 -80 ::dot
1 1.000 0 0 112 0.000 360.000 xcarc
0.800 0.800 0.800 scb
241 1.000 -120 192 16 0.000 360.000 xcarc
sce
1 1.000 -114 206 -134 186 2 polygon
1 1.000 -108 200 -128 180 2 polygon
1 1.000 -120 192 16 0.000 360.000 xcarc
0.800 0.800 0.800 scb
241 1.000 -40 192 16 0.000 360.000 xcarc
sce
1 1.000 -34 206 -54 186 2 polygon
1 1.000 -28 200 -48 180 2 polygon
1 1.000 -40 192 16 0.000 360.000 xcarc
0.800 0.800 0.800 scb
241 1.000 40 192 16 0.000 360.000 xcarc
sce
1 1.000 46 206 26 186 2 polygon
1 1.000 52 200 32 180 2 polygon
1 1.000 40 192 16 0.000 360.000 xcarc
0.800 0.800 0.800 scb
241 1.000 120 192 16 0.000 360.000 xcarc
sce
1 1.000 126 206 106 186 2 polygon
1 1.000 132 200 112 180 2 polygon
1 1.000 120 192 16 0.000 360.000 xcarc
0.800 0.800 0.800 scb
241 1.000 -120 -192 16 0.000 360.000 xcarc
sce
1 1.000 -114 -178 -134 -198 2 polygon
1 1.000 -108 -184 -128 -204 2 polygon
1 1.000 -120 -192 16 0.000 360.000 xcarc
0.800 0.800 0.800 scb
241 1.000 -40 -192 16 0.000 360.000 xcarc
sce
1 1.000 -34 -178 -54 -198 2 polygon
1 1.000 -28 -184 -48 -204 2 polygon
1 1.000 -40 -192 16 0.000 360.000 xcarc
0.800 0.800 0.800 scb
241 1.000 40 -192 16 0.000 360.000 xcarc
sce
1 1.000 46 -178 26 -198 2 polygon
1 1.000 52 -184 32 -204 2 polygon
1 1.000 40 -192 16 0.000 360.000 xcarc
0.800 0.800 0.800 scb
241 1.000 120 -192 16 0.000 360.000 xcarc
sce
1 1.000 126 -178 106 -198 2 polygon
1 1.000 132 -184 112 -204 2 polygon
1 1.000 120 -192 16 0.000 360.000 xcarc
endgate
} def

/::inductor {
begingate
1 1.000 20 -28 20 -44 0 -48 0 -24 spline
1 1.000 -20 -20 -20 -32 0 -28 0 -24 spline
1 1.000 20 32 20 16 0 12 0 36 spline
1 1.000 20 12 20 -4 0 -8 0 16 spline
1 1.000 20 -8 20 -24 0 -28 0 -4 spline
1 1.000 -20 20 -20 8 0 12 0 16 spline
1 1.000 -20 0 -20 -12 0 -8 0 -4 spline
1 1.000 0 -48 0 -64 2 polygon
1 1.000 0 36 0 48 2 polygon
1.000 0.000 0.000 scb
(l.1) {/Times-Roman cf} 2 9 0 1.000 0 48 pinlabel
(l.2) {/Times-Roman cf} 2 13 0 1.000 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:L%i %pl.1 %pl.2 1.0U) {/Times-Roman cf} 2 0 0 1.000 -208 -160 infolabel
(sim:l %pl.1 %pl.2) {/Times-Roman cf} 2 0 0 1.000 -208 -208 infolabel
endgate
} def

/::relay_8pin {
begingate
0.824 0.706 0.549 scb
241 1.000 -112 96 -96 112 -80 112 -112 80 spline
241 1.000 -112 -96 -96 -112 -80 -112 -112 -80 spline
241 1.000 112 96 96 112 80 112 112 80 spline
241 1.000 112 -96 96 -112 80 -112 112 -80 spline
241 1.000 -112 80 -80 112 80 112 112 80 112 -80 80 -112 -80 -112 -112 -80 -112 
80 9 polygon
sce
1 1.000 -112 80 -112 -80 2 polygon
1 1.000 112 80 112 -80 2 polygon
1 1.000 -80 112 80 112 2 polygon
1 1.000 -80 -112 80 -112 2 polygon
1 1.000 -96 112 -112 96 -112 80 -80 112 spline
1 1.000 -96 -112 -112 -96 -112 -80 -80 -112 spline
1 1.000 96 -112 112 -96 112 -80 80 -112 spline
1 1.000 96 112 112 96 112 80 80 112 spline
3 1.000 0 0 16 0.000 360.000 xcarc
3 1.000 -4 -24 4 -24 4 -16 -4 -16 spline
0.898 0.898 0.898 scb
1.000 0 -80 32 ::dot
1.000 0 -80 -32 ::dot
1.000 0 80 32 ::dot
1.000 0 80 -32 ::dot
1.000 0 -32 80 ::dot
1.000 0 32 80 ::dot
1.000 0 -32 -80 ::dot
1.000 0 32 -80 ::dot
sce
1.000 90 -8 40 ::inductor
1 1.000 -56 40 -80 40 -80 32 3 polygon
1 1.000 56 40 80 40 80 32 3 polygon
241 1.000 -36 -40 -32 -48 -28 -40 -36 -40 4 polygon
241 1.000 -36 -68 -32 -60 -28 -68 -36 -68 4 polygon
1 1.000 -32 -68 -32 -80 2 polygon
1 1.000 -32 -44 -32 -32 -80 -32 3 polygon
1 1.000 -32 84 -32 96 -96 96 -96 -60 -16 -60 5 polygon
241 1.000 36 -40 32 -48 28 -40 36 -40 4 polygon
241 1.000 36 -68 32 -60 28 -68 36 -68 4 polygon
1 1.000 32 -68 32 -80 2 polygon
1 1.000 32 -44 32 -32 80 -32 3 polygon
1 1.000 32 84 32 96 96 96 96 -60 16 -60 5 polygon
endgate
} def

/::terminal_strip_2 {
begingate
0 1.000 -80 48 -80 -48 -48 -48 -48 48 4 polygon
1 1.000 -64 32 8 0.000 360.000 xcarc
1 1.000 -68 25 -58 37 2 polygon
1 1.000 -61 39 -70 28 2 polygon
1 1.000 -64 -32 8 0.000 360.000 xcarc
1 1.000 -68 -39 -58 -27 2 polygon
1 1.000 -61 -25 -70 -36 2 polygon
0 1.000 -32 48 -32 -48 0 -48 0 48 4 polygon
1 1.000 -16 32 8 0.000 360.000 xcarc
1 1.000 -20 25 -10 37 2 polygon
1 1.000 -13 39 -22 28 2 polygon
1 1.000 -16 -32 8 0.000 360.000 xcarc
1 1.000 -20 -39 -10 -27 2 polygon
1 1.000 -13 -25 -22 -36 2 polygon
0 1.000 16 48 16 -48 48 -48 48 48 4 polygon
1 1.000 32 32 8 0.000 360.000 xcarc
1 1.000 28 25 38 37 2 polygon
1 1.000 35 39 26 28 2 polygon
1 1.000 32 -32 8 0.000 360.000 xcarc
1 1.000 28 -39 38 -27 2 polygon
1 1.000 35 -25 26 -36 2 polygon
0 1.000 64 48 64 -48 96 -48 96 48 4 polygon
1 1.000 80 32 8 0.000 360.000 xcarc
1 1.000 76 25 86 37 2 polygon
1 1.000 83 39 74 28 2 polygon
1 1.000 80 -32 8 0.000 360.000 xcarc
1 1.000 76 -39 86 -27 2 polygon
1 1.000 83 -25 74 -36 2 polygon
0.604 0.604 0.604 scb
0 2.000 -96 64 -96 -64 112 -64 112 64 4 polygon
endgate
} def

/::switch5 {
begingate
1.000 0.000 0.000 scb
241 1.000 -8 16 -8 32 -16 32 -16 40 16 40 16 32 8 32 8 16 -8 16 9 polygon
0.604 0.604 0.604 scb
240 1.000 -16 16 -16 -32 16 -32 16 16 4 polygon
sce
1 2.000 -8 -32 -8 -40 -16 -48 3 polygon
1 2.000 8 -32 8 -40 16 -48 3 polygon
0 1.000 -16 16 -16 -32 16 -32 16 16 4 polygon
endgate
} def

/::real_batt {
begingate
1 1.000 -80 32 -32 128 80 128 32 32 -80 32 5 polygon
0 1.000 -80 32 -80 -128 32 -128 32 32 4 polygon
1 1.000 32 -128 80 -32 80 128 3 polygon
1 5.000 0 80 0 112 2 polygon
1 5.000 -48 48 -48 80 2 polygon
1.000 0.000 0.000 scb
(+) {/Helvetica cf} 2 16 0 1.000 -40 32 label
sce
(-) {/Helvetica cf} 2 16 0 1.000 8 64 label
0.000 0.000 1.000 scb
1 1.000 -24 -48 48 0.000 360.000 xcarc
1.000 0.647 0.000 scb
241 1.000 -16 -8 -32 -32 -24 -32 -40 -56 -32 -56 -48 -80 -16 -48 -24 -48 -8 -24 
-16 -24 -8 -8 -16 -8 12 polygon
endgate
} def

/::lamp2 {
begingate
1 1.000 0 30 32 0.000 360.000 xcarc
1 0.250 32 56 -32 56 8 24 -8 24 spline
1 1.000 -8 0 -8 24 2 polygon
1 1.000 8 0 8 24 2 polygon
0.824 0.706 0.549 scb
241 1.000 -24 8 -16 0 -16 -32 16 -32 16 0 24 8 8 0 -8 0 -24 8 9 polygon
sce
1 1.000 -24 8 -16 0 -16 -32 16 -32 16 0 24 8 6 polygon
1 2.000 -8 -32 -8 -40 -16 -48 -16 -56 4 polygon
1 2.000 8 -32 8 -40 16 -48 16 -56 4 polygon
endgate
} def


%%EndSetup

%%Page: 00280x01.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
0.7500 inchscale
2.6000 setlinewidth 720 480 translate

1.000 0 128 96 ::socket_8pin
1.000 0 128 96 ::relay_8pin
1 1.000 168 136 184 136 2 polygon
1.000 0 672 96 ::terminal_strip_2
1.000 270 432 -16 ::switch5
1 1.000 480 0 608 0 608 48 3 polygon
1 1.000 480 -32 656 -32 656 48 3 polygon
1.000 0 -384 64 ::real_batt
(Battery) {/Helvetica cf} 2 16 0 1.000 -464 -112 label
(N.O.) {/Helvetica cf} 2 16 0 1.000 400 64 label
(switch) {/Helvetica cf} 2 16 0 1.000 384 24 label
-1.000 /sv 180 736 -80 ::lamp2
1 1.000 752 -32 752 48 2 polygon
1 1.000 720 -32 720 -16 704 -16 704 48 4 polygon
(Lamp) {/Helvetica cf} 2 16 0 1.000 688 -176 label
0.804 0.000 0.000 scb
1 1.000 -384 176 -384 352 0 352 0 320 8 304 5 polygon
1 1.000 -432 144 -432 432 656 432 656 144 4 polygon
1 1.000 656 144 672 184 688 184 704 144 4 polygon
1 1.000 608 144 608 352 256 352 256 320 248 304 5 polygon
1 1.000 8 304 16 320 16 344 80 344 80 320 88 304 6 polygon
1 1.000 8 -112 0 -128 0 -224 848 -224 848 192 752 192 752 144 7 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
