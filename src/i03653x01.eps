%!PS-Adobe-3.0 EPSF-3.0
%%Title: i03653x01.eps
%%Creator: XCircuit v3.6 rev164
%%CreationDate: Sat May 21 05:34:52 2011
%%Pages: 1
%%BoundingBox: 68 68 427 346
%%DocumentNeededResources: font Helvetica Helvetica-Oblique 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.3
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--7/13/05  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.3 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate
	0 0 moveto neg rotate dup scale cvx exec image grestore } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def


%%EndSetup

%%Page: i02425x01.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
0.4500 inchscale
2.6000 setlinewidth 1170 2378 translate

0.824 0.706 0.549 scb
240 1.000 128 -448 128 -672 32 -672 32 -448 4 polygon
sce
0 1.000 128 -448 128 -672 32 -672 32 -448 4 polygon
(Fieldbus junction block) {/Helvetica cf} 2 19 0 1.000 264 -376 label
0.800 0.800 0.800 scb
240 1.000 32 -480 32 -512 16 -512 16 -480 4 polygon
sce
0 1.000 32 -480 32 -512 16 -512 16 -480 4 polygon
0.800 0.800 0.800 scb
240 1.000 32 -544 32 -576 16 -576 16 -544 4 polygon
sce
0 1.000 32 -544 32 -576 16 -576 16 -544 4 polygon
0.800 0.800 0.800 scb
240 1.000 32 -608 32 -640 16 -640 16 -608 4 polygon
sce
0 1.000 32 -608 32 -640 16 -640 16 -608 4 polygon
0.800 0.800 0.800 scb
240 1.000 144 -480 144 -512 128 -512 128 -480 4 polygon
sce
0 1.000 144 -480 144 -512 128 -512 128 -480 4 polygon
0.800 0.800 0.800 scb
240 1.000 144 -544 144 -576 128 -576 128 -544 4 polygon
sce
0 1.000 144 -544 144 -576 128 -576 128 -544 4 polygon
0.800 0.800 0.800 scb
240 1.000 144 -608 144 -640 128 -640 128 -608 4 polygon
sce
0 1.000 144 -608 144 -640 128 -640 128 -608 4 polygon
1.000 0.000 0.000 scb
1 4.000 144 -496 928 -496 2 polygon
sce
(. . .) {/Helvetica cf} 2 19 0 1.000 992 -496 label
0.604 0.604 0.604 scb
241 1.000 16 -480 8 -480 0 -488 -16 -488 -16 -504 0 -504 8 -512 16 -512 16 -480 
9 polygon
sce
1 1.000 16 -480 8 -480 0 -488 -16 -488 -16 -504 0 -504 8 -512 16 -512 16 -480 
9 polygon
1 1.000 8 -480 8 -512 2 polygon
1 1.000 0 -488 0 -504 2 polygon
("Home run" cable) {/Helvetica cf} 2 19 0 1.000 720 -472 label
(\("brick"\)) {/Helvetica cf} 2 19 0 1.000 144 -424 label
(Terminating resistor) {/Helvetica cf} 2 19 0 1.000 -52 -504 label
(To DCS interface) {/Helvetica-Oblique cf} 2 16 0 1.000 1024 -512 label
0.000 0.000 1.000 scb
(XD_Scale) {/Helvetica cf} 2 16 0 1.500 144 -960 label
(OUT_Scale) {/Helvetica cf} 2 16 0 1.500 128 -1056 label
(L_Type) {/Helvetica cf} 2 16 0 1.500 176 -864 label
0 1.000 480 -896 480 -992 80 -992 80 -896 4 polygon
0 1.000 480 -992 480 -1088 80 -1088 80 -992 4 polygon
0 1.000 480 -800 480 -896 80 -896 80 -800 4 polygon
0 1.000 880 -896 880 -992 480 -992 480 -896 4 polygon
0 1.000 880 -992 880 -1088 480 -1088 480 -992 4 polygon
0 1.000 880 -800 880 -896 480 -896 480 -800 4 polygon
497 1.000 -288 -720 112 0.000 360.000 xcarc
sce
1 1.000 -288 -720 112 0.000 360.000 xcarc
0.000 0.000 1.000 scb
1 1.000 80 -944 -160 -816 2 polygon
1.000 300 -180 -804 generic::arrowhead
sce
(10 feet) {/Helvetica cf} 2 16 90 1.000 -176 -1328 label
(4 feet) {/Helvetica cf} 2 16 360 1.000 -440 -1952 label
(Level transmitter) {/Helvetica cf} 2 16 0 1.000 -744 -736 label
0.800 0.800 0.800 scb
496 1.000 -576 -896 -576 -1856 -192 -1856 -192 -896 4 polygon
497 1.000 -576 -960 -192 -960 -192 -896 -576 -896 spline
497 1.000 -576 -832 -192 -832 -192 -896 -576 -896 spline
497 1.000 -576 -1920 -192 -1920 -192 -1856 -576 -1856 spline
sce
1 1.000 -576 -960 -192 -960 -192 -896 -576 -896 spline
1 1.000 -576 -832 -192 -832 -192 -896 -576 -896 spline
1 1.000 -576 -1920 -192 -1920 -192 -1856 -576 -1856 spline
1 1.000 -576 -896 -576 -1856 2 polygon
1 1.000 -192 -896 -192 -1856 2 polygon
1 3.000 -288 -832 -288 -896 2 polygon
(Fuel storage tank) {/Helvetica cf} 2 16 0 1.000 -552 -1360 label
1 1.000 -176 -896 -144 -896 2 polygon
1.000 0 -160 -896 generic::arrowhead
1 1.000 -176 -1856 -144 -1856 2 polygon
-1.000 180 -160 -1856 generic::arrowhead
1 1.000 -160 -912 -160 -1312 2 polygon
1 1.000 -160 -1472 -160 -1840 2 polygon
1 1.000 -576 -1920 -576 -1952 2 polygon
1.000 90 -192 -1936 generic::arrowhead
1 1.000 -192 -1920 -192 -1952 2 polygon
-1.000 270 -576 -1936 generic::arrowhead
1 1.000 -560 -1936 -464 -1936 2 polygon
1 1.000 -304 -1936 -208 -1936 2 polygon
1.000 0.000 0.000 scb
1 4.000 -80 -720 -112 -624 16 -624 -176 -720 spline
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
