%!PS-Adobe-3.0 EPSF-3.0
%%Title: i04001x01.eps
%%Creator: XCircuit v3.7 rev26
%%CreationDate: Fri Sep  7 05:22:12 2012
%%Pages: 1
%%BoundingBox: 68 68 454 314
%%DocumentNeededResources: font Helvetica Helvetica-Oblique Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.7
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--11/1/10  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.7 2
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce translate 0 0 moveto neg rotate dup type /nametype
	eq not { dup abs currentlinewidth exch div setlinewidth } { pop }
	ifelse dup abs scale clipped 1 and 1 eq {/clipped clipped 1 add def}
	if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0 1.000 0 0 pinlabel
endgate
} def


%%EndSetup

%%Page: i03997x01.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 32.00 8.00 gridspace
0.7500 inchscale
2.6000 setlinewidth 336 -320 translate

0.824 0.706 0.549 scb
497 1.000 768 1200 192 0.000 360.000 xcarc
sce
1 1.000 768 1200 192 0.000 360.000 xcarc
0.604 0.604 0.604 scb
497 1.000 672 1096 16 0.000 360.000 xcarc
sce
1 1.000 672 1096 16 0.000 360.000 xcarc
1 1.000 680 1108 658 1090 2 polygon
1 1.000 686 1102 664 1084 2 polygon
0.604 0.604 0.604 scb
497 1.000 736 1096 16 0.000 360.000 xcarc
sce
1 1.000 736 1096 16 0.000 360.000 xcarc
1 1.000 744 1108 722 1090 2 polygon
1 1.000 750 1102 728 1084 2 polygon
0.604 0.604 0.604 scb
497 1.000 800 1096 16 0.000 360.000 xcarc
sce
1 1.000 800 1096 16 0.000 360.000 xcarc
1 1.000 808 1108 786 1090 2 polygon
1 1.000 814 1102 792 1084 2 polygon
0.604 0.604 0.604 scb
497 1.000 864 1096 16 0.000 360.000 xcarc
sce
1 1.000 864 1096 16 0.000 360.000 xcarc
1 1.000 872 1108 850 1090 2 polygon
1 1.000 878 1102 856 1084 2 polygon
0.604 0.604 0.604 scb
497 1.000 736 1328 16 0.000 360.000 xcarc
sce
1 1.000 736 1328 16 0.000 360.000 xcarc
1 1.000 744 1340 722 1322 2 polygon
1 1.000 750 1334 728 1316 2 polygon
0.604 0.604 0.604 scb
497 1.000 800 1328 16 0.000 360.000 xcarc
sce
1 1.000 800 1328 16 0.000 360.000 xcarc
1 1.000 808 1340 786 1322 2 polygon
1 1.000 814 1334 792 1316 2 polygon
1 1.000 800 1376 800 1360 2 polygon
1 1.000 728 1368 744 1368 2 polygon
1 1.000 792 1368 808 1368 2 polygon
(Loop power) {/Helvetica cf} 2 16 0 0.700 696 1272 label
0 1.000 752 1152 752 1136 784 1136 784 1152 4 polygon
1 1.000 752 1144 736 1144 736 1128 3 polygon
1 1.000 736 1144 672 1144 672 1128 3 polygon
1 1.000 784 1144 800 1144 800 1128 3 polygon
1 1.000 800 1144 864 1144 864 1128 3 polygon
0 1.000 752 1176 752 1160 784 1160 784 1176 4 polygon
1 1.000 752 1168 672 1168 672 1152 3 polygon
1 1.000 736 1168 736 1152 2 polygon
1 1.000 784 1168 800 1168 800 1152 3 polygon
0 1.000 752 1200 752 1184 784 1184 784 1200 4 polygon
1 1.000 784 1192 800 1192 800 1176 3 polygon
1 1.000 752 1192 736 1192 736 1176 3 polygon
1 1.000 736 1208 736 1224 768 1240 800 1224 800 1208 5 polygon
1.000 0 768 1240 generic::dot
1 1.000 800 1240 800 1232 2 polygon
1 1.000 796 1236 804 1236 2 polygon
1 1.000 732 1236 740 1236 2 polygon
0 1.000 640 1120 640 1072 704 1072 704 1120 4 polygon
0 1.000 704 1120 704 1072 768 1072 768 1120 4 polygon
0 1.000 768 1120 768 1072 832 1072 832 1120 4 polygon
0 1.000 832 1120 832 1072 896 1072 896 1120 4 polygon
0 1.000 704 1352 704 1304 768 1304 768 1352 4 polygon
0 1.000 768 1352 768 1304 832 1304 832 1352 4 polygon
(Sensor) {/Helvetica cf} 2 16 0 0.700 728 1040 label
(Temperature) {/Helvetica cf} 2 16 0 1.000 312 1240 label
(transmitter) {/Helvetica cf} 2 16 0 1.000 328 1200 label
1 1.000 816 1328 992 1328 2 polygon
1 1.000 720 1328 656 1328 656 1408 992 1408 4 polygon
0.000 0.000 1.000 scb
1 1.000 1008 1424 1024 1424 1024 1312 1008 1312 4 polygon
1 1.000 1024 1368 1040 1368 2 polygon
sce
1 3.000 736 1000 752 976 760 944 736 1080 spline
1 3.000 784 976 808 984 800 1080 768 944 spline
1.000 0.000 0.000 scb
1 2.000 784 976 808 984 800 1080 768 944 spline
sce
1 10.000 64 1296 768 720 768 944 48 1040 spline
0.604 0.604 0.604 scb
1 3.000 -64 976 160 976 2 polygon
1 3.000 176 960 176 640 2 polygon
1 3.000 160 624 -64 624 2 polygon
1 3.000 -80 640 -80 960 2 polygon
1 3.000 -80 968 -72 976 -64 976 -80 960 spline
1 3.000 176 968 168 976 160 976 176 960 spline
1 3.000 176 632 168 624 160 624 176 640 spline
1 3.000 -80 632 -72 624 -64 624 -80 640 spline
240 1.000 -64 960 -64 864 160 864 160 960 4 polygon
sce
0 1.000 -32 816 -32 784 0 784 0 816 4 polygon
0 1.000 16 816 16 784 48 784 48 816 4 polygon
0 1.000 64 816 64 784 96 784 96 816 4 polygon
0 1.000 -32 768 -32 736 0 736 0 768 4 polygon
0 1.000 16 768 16 736 48 736 48 768 4 polygon
0 1.000 64 768 64 736 96 736 96 768 4 polygon
0 1.000 -32 720 -32 688 0 688 0 720 4 polygon
0 1.000 16 720 16 688 48 688 48 720 4 polygon
0 1.000 64 720 64 688 96 688 96 720 4 polygon
0 1.000 -32 672 -32 640 0 640 0 672 4 polygon
0 1.000 16 672 16 640 96 640 96 672 4 polygon
(0) {/Helvetica cf} 2 16 0 0.700 -24 648 label
(1) {/Helvetica cf} 2 16 0 0.700 -24 696 label
(2) {/Helvetica cf} 2 16 0 0.700 24 696 label
(3) {/Helvetica cf} 2 16 0 0.700 72 696 label
(4) {/Helvetica cf} 2 16 0 0.700 -24 744 label
(5) {/Helvetica cf} 2 16 0 0.700 24 744 label
(6) {/Helvetica cf} 2 16 0 0.700 72 744 label
(7) {/Helvetica cf} 2 16 0 0.700 -24 792 label
(8) {/Helvetica cf} 2 16 0 0.700 24 792 label
(9) {/Helvetica cf} 2 16 0 0.700 72 792 label
(Enter) {/Helvetica cf} 2 16 0 0.700 24 648 label
0.604 0.604 0.604 scb
240 1.000 16 980 16 1044 80 1044 80 980 4 polygon
sce
0 1.000 16 980 16 1044 80 1044 80 980 4 polygon
0 1.000 -16 856 -16 824 16 824 16 856 4 polygon
0 1.000 32 856 32 824 64 824 64 856 4 polygon
0 1.000 80 856 80 824 112 824 112 856 4 polygon
0 1.000 128 856 128 824 160 824 160 856 4 polygon
(J) {/Helvetica cf} 2 16 0 0.700 -56 832 label
(K) {/Helvetica cf} 2 16 0 0.700 -8 832 label
(E) {/Helvetica cf} 2 16 0 0.700 40 832 label
(T) {/Helvetica cf} 2 16 0 0.700 88 832 label
(S) {/Helvetica cf} 2 16 0 0.700 136 832 label
0 1.000 -64 856 -64 824 -32 824 -32 856 4 polygon
0 1.000 112 768 112 736 144 736 144 768 4 polygon
0 1.000 112 720 112 688 144 688 144 720 4 polygon
(F) {ns} (o) {Ss} {/Helvetica cf} 5 16 0 0.600 116 696 label
(C) {ns} (o) {Ss} {/Helvetica cf} 5 16 0 0.600 116 744 label
0.800 0.800 0.800 scb
496 1.000 128 816 128 784 160 784 160 816 4 polygon
sce
(mV) {/Helvetica cf} 2 16 0 0.400 132 796 label
(mV) {/Helvetica cf} 2 16 0 0.700 108 872 label
0 1.000 128 816 128 784 160 784 160 816 4 polygon
(Millivolt source) {/Helvetica cf} 2 16 0 1.000 -80 576 label
0.000 0.000 1.000 scb
(To 24 VDC) {/Helvetica-Oblique cf} 2 16 0 1.000 1056 1376 label
(loop power) {/Helvetica-Oblique cf} 2 16 0 1.000 1064 1336 label
sce
(copper-wire cable) {/Helvetica cf} 2 16 360 1.000 560 840 label
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
