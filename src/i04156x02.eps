%!PS-Adobe-3.0 EPSF-3.0
%%Title: i04156x02.eps
%%Creator: XCircuit v3.4 rev27
%%CreationDate: Sun Dec  6 09:31:08 2009
%%Pages: 1
%%BoundingBox: 68 68 380 224
%%DocumentNeededResources: font Helvetica 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.3
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--7/13/05  (tim.edwards@multigig.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-present)
%
%%BeginResource: procset XCIRCproc 3.3 0
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } def
/ol { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg /rotval exch def
	/just exch def just 384 and 0 gt {/mshow {pop} def} {/mshow {show}
	def} ifelse just 16 and 0 gt {gsave rotval rotate 0 1 dtransform
	gsave pagemat setmatrix idtransform exch grestore 1 0 dtransform
	gsave pagemat setmatrix idtransform exch grestore dup abs 1e-9 lt
	{pop mul 0 gt} {3 1 roll pop pop 0 lt} ifelse grestore {-1 /rotval
	rotval neg def /just just dup 3 and 1 ne {3 xor} if def} {1} ifelse
	exch -1e-9 lt {-1 /rotval rotval neg def /just just dup 12 and
	4 ne {12 xor} if def} {1} ifelse scale } if /showflag 0 def
	/fspc pspc def /Bline 0 def /Tabs 0 array def /fscale 1.0 def
	/kY 0 def gsave dup 1 add copy 0 exch 1 0 dtransform exch atan rotate
	{exch dup type /stringtype eq {true charpath flattenpath} {dup type
	/arraytype eq {exec} {12 string cvs true charpath flattenpath} ifelse}
	ifelse} repeat pop pathbbox grestore 3 -1 roll pop 3 1 roll just
	1 and 0 gt {just 2 and 0 gt {exch pop neg fspc sub} {exch sub 0.5
	mul neg} ifelse} {pop neg fspc add} ifelse exch Bline exch just 4
	and 0 gt {just 8 and 0 gt {exch pop neg fspc sub} {add 0.5 mul neg}
	ifelse} {pop neg fspc add} ifelse rotval rotate Kn currentpoint
	translate /showflag 1 def /Bline 0 def /Tabs 0 array def /fscale
	1.0 def /kY 0 def {dup type /stringtype eq {mshow} {dup type
	/arraytype eq {exec} {12 string cvs mshow} ifelse} ifelse} repeat
	grestore } def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate
	0 0 moveto neg rotate dup scale cvx exec image grestore } def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array
	astore def gsave sce translate 0 0 moveto neg rotate dup abs scale
	} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end} bind def

/hlevel 0 def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore} def     

/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 0 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef } def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog

% XCircuit output starts here.

%%BeginSetup

/arrowhead {
% trivial
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 1.00 endpath
endgate
} def

/arrow {
% trivial
begingate
1 0.80 0 -40 0 20 2 polygon
1.00 0 0 40 arrowhead
endgate
} def


%%EndSetup

%%Page: i00667x01.eps 1
%%PageOrientation: Portrait
/pgsave save def bop
% 32.00 8.00 gridspace
0.7500 inchscale
2.6000 setlinewidth 954 672 translate

(Time) {/Helvetica cf} 2 16 0 1.00 -224 -416 label
1.00 90 -64 -400 arrow
(Detector signal) {/Helvetica cf} 2 16 270 1.00 -672 -304 label
1.00 360 -680 24 arrow
1 1.00 -640 112 -640 -368 384 -368 3 polygon
0.000 0.000 1.000 scb
(Substance 1) {/Helvetica cf} 2 16 0 0.70 -344 -160 label
(Substance 2) {/Helvetica cf} 2 16 0 0.70 -48 56 label
1 1.00 -636 -344 -632 -340 -624 -344 -620 -344 -616 -344 -612 -344 -608 -344 
-600 -340 -592 -340 -592 -344 -588 -344 -584 -344 -580 -344 -576 -344 -568 -340 
-560 -340 -552 -340 -548 -344 -544 -344 -538 -344 -534 -344 -532 -342 -530 -342 
-524 -340 -520 -342 -516 -342 -510 -344 -504 -344 -502 -344 -494 -342 -488 -340 
-482 -340 -476 -342 -464 -344 -456 -344 -452 -346 -448 -346 -442 -346 -436 -346 
-422 -346 -418 -348 -410 -348 -406 -348 -404 -346 -398 -346 -388 -348 -384 -346 
-378 -344 -374 -342 -370 -340 -366 -336 -364 -332 -360 -330 -358 -324 -356 -320 
-350 -312 -348 -308 -346 -300 -344 -296 -344 -292 -342 -286 -340 -276 -338 -270 
-336 -264 -334 -260 -334 -254 -332 -244 -328 -238 -328 -234 -324 -228 -322 -220 
-320 -218 -318 -212 -316 -206 -314 -206 -312 -204 -312 -200 -310 -198 -308 -196 
-306 -194 -304 -192 -302 -190 -300 -188 -296 -186 -294 -184 -292 -182 -290 -182 
-288 -182 -286 -182 -282 -182 -278 -182 -276 -182 -272 -182 -270 -182 -264 -184 
-260 -184 -258 -186 -252 -190 -246 -196 -242 -196 -238 -200 -232 -208 -228 -214 
-226 -218 -222 -224 -222 -228 -220 -234 -218 -238 -216 -246 -210 -260 -208 -264 
-208 -270 -206 -280 -204 -284 -202 -290 -200 -298 -200 -304 -200 -310 -196 -314 
-194 -318 -192 -326 -188 -330 -180 -336 -178 -336 -170 -338 -164 -340 -158 -342 
-148 -344 -146 -344 -140 -342 -136 -344 -134 -342 -124 -342 -122 -342 -114 -340 
-110 -338 -104 -340 -100 -342 -84 -346 -80 -344 -70 -342 -64 -340 -60 -338 -56 
-338 -52 -340 -40 -340 -38 -340 -30 -338 -28 -338 -22 -338 -16 -340 -10 -340 -8 
-338 -6 -332 2 -302 6 -264 10 -206 16 -108 16 -62 18 20 20 32 22 36 24 36 24 34 
26 24 26 18 26 -20 28 -298 30 -318 32 -324 34 -328 36 -336 38 -336 40 -336 42 
-336 44 -338 50 -338 54 -340 56 -340 62 -340 64 -340 66 -338 72 -338 76 -338 78 
-336 80 -336 82 -336 88 -336 94 -338 98 -338 114 -336 116 -336 122 -338 130 
-340 136 -340 138 -340 144 -338 154 -340 164 -342 176 -340 178 -340 182 -340 
196 -338 200 -338 210 -342 222 -344 230 -344 234 -342 238 -342 242 -342 246 
-342 250 -344 270 -342 272 -342 274 -342 278 -342 282 -342 286 -342 290 -342 
298 -344 316 -346 318 -346 330 -344 338 -344 340 -344 344 -344 354 -342 358 
-342 362 -342 366 -342 374 -342 378 -344 232 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
