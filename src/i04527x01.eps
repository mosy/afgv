%!PS-Adobe-3.0
%%Title: i04527x01.eps
%%Creator: XCircuit v0.0 rev-1440391347
%%CreationDate: Mon Aug 30 13:55:02 2021
%%Pages: 1
%%BoundingBox: 0 0 612 792
%%DocumentNeededResources: font Helvetica Helvetica-Oblique Times-Roman 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.9
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--4/12/16  (tim@opencircuitdesign.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-2012)
%  Open Circuit Design (2012-2016)
%
%%BeginResource: procset XCIRCproc 3.9 1
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } if } def
/ol { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/MR { /twidth exch def } def
/CRx { } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto CRx } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg
	/rotval exch def /twidth 100000 def /just exch def just 128 and
	0 gt {/mshow {pop} def} {/mshow {show} def} ifelse just 16 and 0
	gt {gsave rotval rotate 0 1 dtransform gsave pagemat setmatrix
	idtransform exch grestore 1 0 dtransform gsave pagemat setmatrix
	idtransform exch grestore dup abs 1e-9 lt {pop mul 0 gt} {3 1 roll
	pop pop 0 lt} ifelse grestore {-1 /rotval rotval neg def /just just
	dup 3 and 1 ne {3 xor} if def} {1} ifelse exch -1e-9 lt {-1 /rotval
	rotval neg def /just just dup 12 and 4 ne {12 xor} if def} {1}
	ifelse scale } if /showflag 0 def /fspc pspc def /Bline 0 def
	/numlines 0 def /padding 0 array def /Tabs 0 array def
	/fscale 1.0 def /kY 0 def gsave /CRx { linewid padding
	aload pop numlines 1 add dup /numlines exch def array astore
	/padding exch def /linewid 0 def } def dup 1 add copy dup 1 0
	dtransform exch atan rotate {exch dup type /stringtype eq {gsave dup
	gsave newpath 0 0 moveto true charpath flattenpath pathbbox pop exch
	pop exch pop grestore currentpoint pop add dup /linewid exch def twidth
	ge {grestore CR exch 1 add dup 2 add {CR} exch 1 roll exch} {grestore}
	ifelse true charpath flattenpath} {dup type /arraytype eq {exec} {12
	string cvs true charpath flattenpath} ifelse} ifelse} repeat
	CRx /CRx {padding aload pop just 1280 and 0 gt {blockwid exch sub just
	1024 and 0 gt {0.5 mul} if} {pop 0} ifelse 0 rmoveto numlines 1 sub
	dup /numlines exch def array astore /padding exch def} def exch pop
	pathbbox grestore 4 copy pop exch pop exch sub /blockwid exch def
	3 -1 roll pop 3 1 roll just 1 and 0 gt {just 2 and
	0 gt {exch pop neg fspc sub} {exch sub 0.5 mul neg} ifelse} {pop neg
	fspc add} ifelse exch Bline exch just 4 and 0 gt {just 8 and 0 gt
	{exch pop neg fspc sub} {add 0.5 mul neg} ifelse} {pop neg fspc add}
	ifelse rotval rotate Kn currentpoint translate /showflag 1 def /Bline
	0 def /Tabs 0 array def /fscale 1.0 def /kY 0 def CRx {dup type
	/stringtype eq {mshow} {dup type /arraytype eq {exec} {12 string cvs
	mshow} ifelse} ifelse} repeat grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce dup type /nametype eq { pop } if translate 0 0 moveto
	neg rotate dup type /nametype eq not { dup abs currentlinewidth exch
	div setlinewidth } { pop } ifelse dup abs scale clipped 1 and 1 eq
	{/clipped clipped 1 add def} if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog
% XCircuit output starts here.

%%BeginSetup

/plc::PLC_powersupply {
begingate
0.800 0.800 0.800 scb
240 1.000 -112 240 -112 -240 112 -240 112 240 4 polygon
sce
0 1.000 -112 240 -112 -240 112 -240 112 240 4 polygon
(Power) {/Helvetica cf} 2 16 0.000 1.000 -64 192 label
(supply) {/Helvetica cf} 2 16 0.000 1.000 -64 152 label
1 1.000 -80 -208 16 0.000 360.000 xcarc
1 1.000 -72 -196 -92 -216 2 polygon
1 1.000 -68 -200 -88 -220 2 polygon
1 1.000 -80 -160 16 0.000 360.000 xcarc
1 1.000 -72 -148 -92 -168 2 polygon
1 1.000 -68 -152 -88 -172 2 polygon
1 1.000 -80 -112 16 0.000 360.000 xcarc
1 1.000 -72 -100 -92 -120 2 polygon
1 1.000 -68 -104 -88 -124 2 polygon
(L1) {/Helvetica cf} 2 16 0.000 0.700 -56 -120 label
(Gnd) {/Helvetica cf} 2 16 0.000 0.700 -56 -216 label
(L2/N) {/Helvetica cf} 2 16 0.000 0.700 -56 -168 label
endgate
} def

/plc::plc_processor {
begingate
0.600 0.600 0.600 scb
240 1.000 -64 240 -64 -240 64 -240 64 240 4 polygon
sce
0 1.000 -64 240 -64 -240 64 -240 64 240 4 polygon
(Processor) {/Helvetica cf} 2 16 0.000 0.500 -48 208 label
0 1.000 -40 176 -40 160 40 160 40 176 4 polygon
0 1.000 -40 144 -40 128 40 128 40 144 4 polygon
1 1.000 -32 80 16 0.000 360.000 xcarc
1 1.000 32 80 16 0.000 360.000 xcarc
1 1.000 -32 -216 -32 -168 32 -168 32 -216 16 -216 16 -224 -16 -224 -16 -216 -32 
-216 9 polygon
endgate
} def

/plc::1746_IB8 {
begingate
0.600 0.600 0.600 scb
240 1.000 -64 240 -64 -240 64 -240 64 240 4 polygon
sce
0 1.000 -64 240 -64 -240 64 -240 64 240 4 polygon
(Input) {/Helvetica cf} 2 16 0.000 0.700 -32 208 label
1 1.000 32 -48 11 0.000 360.000 xcarc
1 1.000 38 -40 23 -52 2 polygon
1 1.000 41 -44 26 -56 2 polygon
1 1.000 32 -16 11 0.000 360.000 xcarc
1 1.000 38 -8 23 -20 2 polygon
1 1.000 41 -12 26 -24 2 polygon
1 1.000 32 16 11 0.000 360.000 xcarc
1 1.000 38 24 23 12 2 polygon
1 1.000 41 20 26 8 2 polygon
1 1.000 32 -80 11 0.000 360.000 xcarc
1 1.000 38 -72 23 -84 2 polygon
1 1.000 41 -76 26 -88 2 polygon
1 1.000 32 -112 11 0.000 360.000 xcarc
1 1.000 38 -104 23 -116 2 polygon
1 1.000 41 -108 26 -120 2 polygon
1 1.000 32 -144 11 0.000 360.000 xcarc
1 1.000 38 -136 23 -148 2 polygon
1 1.000 41 -140 26 -152 2 polygon
1 1.000 32 -176 11 0.000 360.000 xcarc
1 1.000 38 -168 23 -180 2 polygon
1 1.000 41 -172 26 -184 2 polygon
1 1.000 32 -208 11 0.000 360.000 xcarc
1 1.000 38 -200 23 -212 2 polygon
1 1.000 41 -204 26 -216 2 polygon
0 1.000 -8 192 -8 184 8 184 8 192 4 polygon
0 1.000 24 192 24 184 40 184 40 192 4 polygon
0 1.000 -8 176 -8 168 8 168 8 176 4 polygon
0 1.000 24 176 24 168 40 168 40 176 4 polygon
0 1.000 -8 160 -8 152 8 152 8 160 4 polygon
0 1.000 24 160 24 152 40 152 40 160 4 polygon
0 1.000 -8 144 -8 136 8 136 8 144 4 polygon
0 1.000 24 144 24 136 40 136 40 144 4 polygon
(0) {/Helvetica cf} 2 16 0.000 0.400 -24 184 label
(1) {/Helvetica cf} 2 16 0.000 0.400 -24 168 label
(2) {/Helvetica cf} 2 16 0.000 0.400 -24 152 label
(3) {/Helvetica cf} 2 16 0.000 0.400 -24 136 label
(4) {/Helvetica cf} 2 16 0.000 0.400 48 184 label
(5) {/Helvetica cf} 2 16 0.000 0.400 48 168 label
(6) {/Helvetica cf} 2 16 0.000 0.400 48 152 label
(7) {/Helvetica cf} 2 16 0.000 0.400 48 136 label
(IN0) {/Helvetica cf} 2 16 0.000 0.500 -24 72 label
(IN1) {/Helvetica cf} 2 16 0.000 0.500 -24 40 label
(IN2) {/Helvetica cf} 2 16 0.000 0.500 -24 8 label
(IN3) {/Helvetica cf} 2 16 0.000 0.500 -24 -24 label
(IN4) {/Helvetica cf} 2 16 0.000 0.500 -24 -56 label
(IN5) {/Helvetica cf} 2 16 0.000 0.500 -24 -88 label
(IN6) {/Helvetica cf} 2 16 0.000 0.500 -24 -120 label
(IN7) {/Helvetica cf} 2 16 0.000 0.500 -24 -152 label
(COM) {/Helvetica cf} 2 16 0.000 0.500 -32 -184 label
1 1.000 32 48 11 0.000 360.000 xcarc
1 1.000 38 56 23 44 2 polygon
1 1.000 41 52 26 40 2 polygon
1 1.000 32 80 11 0.000 360.000 xcarc
1 1.000 38 88 23 76 2 polygon
1 1.000 41 84 26 72 2 polygon
(COM) {/Helvetica cf} 2 16 0.000 0.500 -32 -216 label
1 1.000 -64 112 64 112 2 polygon
endgate
} def

/generic::jumper {
% trivial
begingate
1 1.000 0 0 10 -90.000 90.000 xcarc
1 1.000 0 10 0 16 2 polygon
1 1.000 0 -10 0 -16 2 polygon
1.000 0.000 0.000 scb
(a) {/Times-Roman cf} 2 1 0.000 1.000 0 16 pinlabel
(a) {/Times-Roman cf} 2 13 0.000 1.000 0 -16 pinlabel
endgate
} def

/plc::1746_OA8 {
begingate
0.600 0.600 0.600 scb
496 1.000 -64 240 -64 -240 64 -240 64 240 4 polygon
sce
0 1.000 -64 240 -64 -240 64 -240 64 240 4 polygon
1 1.000 -64 112 64 112 2 polygon
1 1.000 31 80 11 0.000 360.000 xcarc
1 1.000 22 76 37 88 2 polygon
1 1.000 25 72 40 84 2 polygon
1 1.000 31 48 11 0.000 360.000 xcarc
1 1.000 22 44 37 56 2 polygon
1 1.000 25 40 40 52 2 polygon
1 1.000 31 16 11 0.000 360.000 xcarc
1 1.000 22 12 37 24 2 polygon
1 1.000 25 8 40 20 2 polygon
1 1.000 31 -16 11 0.000 360.000 xcarc
1 1.000 22 -20 37 -8 2 polygon
1 1.000 25 -24 40 -12 2 polygon
1 1.000 31 -48 11 0.000 360.000 xcarc
1 1.000 22 -52 37 -40 2 polygon
1 1.000 25 -56 40 -44 2 polygon
1 1.000 31 -80 11 0.000 360.000 xcarc
1 1.000 22 -84 37 -72 2 polygon
1 1.000 25 -88 40 -76 2 polygon
1 1.000 31 -112 11 0.000 360.000 xcarc
1 1.000 22 -116 37 -104 2 polygon
1 1.000 25 -120 40 -108 2 polygon
1 1.000 31 -144 11 0.000 360.000 xcarc
1 1.000 22 -148 37 -136 2 polygon
1 1.000 25 -152 40 -140 2 polygon
1 1.000 31 -176 11 0.000 360.000 xcarc
1 1.000 22 -180 37 -168 2 polygon
1 1.000 25 -184 40 -172 2 polygon
1 1.000 31 -208 11 0.000 360.000 xcarc
1 1.000 22 -212 37 -200 2 polygon
1 1.000 25 -216 40 -204 2 polygon
(VAC 1) {/Helvetica cf} 2 16 0.000 0.500 -48 72 label
(OUT1) {/Helvetica cf} 2 16 0.000 0.500 -40 8 label
(OUT2) {/Helvetica cf} 2 16 0.000 0.500 -40 -24 label
(OUT3) {/Helvetica cf} 2 16 0.000 0.500 -40 -56 label
(OUT4) {/Helvetica cf} 2 16 0.000 0.500 -40 -120 label
(OUT5) {/Helvetica cf} 2 16 0.000 0.500 -40 -152 label
(OUT6) {/Helvetica cf} 2 16 0.000 0.500 -40 -184 label
(OUT7) {/Helvetica cf} 2 16 0.000 0.500 -40 -216 label
(VAC 2) {/Helvetica cf} 2 16 0.000 0.500 -48 -88 label
(OUT0) {/Helvetica cf} 2 16 0.000 0.500 -40 40 label
0 1.000 24 192 24 184 40 184 40 192 4 polygon
0 1.000 -8 192 -8 184 8 184 8 192 4 polygon
0 1.000 24 176 24 168 40 168 40 176 4 polygon
0 1.000 -8 176 -8 168 8 168 8 176 4 polygon
0 1.000 24 160 24 152 40 152 40 160 4 polygon
0 1.000 -8 160 -8 152 8 152 8 160 4 polygon
0 1.000 24 144 24 136 40 136 40 144 4 polygon
0 1.000 -8 144 -8 136 8 136 8 144 4 polygon
(Output) {/Helvetica cf} 2 16 0.000 0.700 -48 208 label
(0) {/Helvetica cf} 2 16 0.000 0.400 -24 184 label
(1) {/Helvetica cf} 2 16 0.000 0.400 -24 168 label
(2) {/Helvetica cf} 2 16 0.000 0.400 -24 152 label
(3) {/Helvetica cf} 2 16 0.000 0.400 -24 136 label
(6) {/Helvetica cf} 2 16 0.000 0.400 48 152 label
(7) {/Helvetica cf} 2 16 0.000 0.400 48 136 label
(4) {/Helvetica cf} 2 16 0.000 0.400 48 184 label
(5) {/Helvetica cf} 2 16 0.000 0.400 48 168 label
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 0.000 1.000 0 0 pinlabel
endgate
} def

/euro::tempswitch-NO {
begingate
1 1.000 28 -64 28 -32 56 36 3 polygon
1 1.000 28 64 28 32 60 32 3 polygon
1 1.000 40 0 16 0 2 polygon
1 1.000 4 0 -16 0 2 polygon
0 1.000 -16 24 -16 -24 -64 -24 -64 24 4 polygon
1 1.000 -40 0 8 16 0.000 360.000 ellipse
1 1.000 -48 0 -32 0 2 polygon
endgate
} def

/euro::lamp {
begingate
1 1.000 0 0 32 0.000 360.000 xcarc
1 1.000 -23 -22 23 22 2 polygon
1 1.000 -22 22 22 -22 2 polygon
1 1.000 0 32 0 64 2 polygon
1 1.000 0 -32 0 -64 2 polygon
endgate
} def

/euro::preasureswotch {
begingate
1 1.000 60 -64 60 -32 28 32 3 polygon
1 1.000 60 32 60 64 2 polygon
1 1.000 44 0 20 0 2 polygon
1 1.000 8 0 -12 0 2 polygon
0 1.000 -12 24 -12 -24 -60 -24 -60 24 4 polygon
(P) {/Helvetica cf} 2 1045 0.000 1.000 -36 0 label
endgate
} def

/euro::relecoil {
begingate
0 1.000 -64 -32 -64 32 68 32 68 -32 4 polygon
1 1.000 4 -32 4 -64 2 polygon
1 1.000 4 32 4 64 2 polygon
endgate
} def

/euro::pushbutton {
begingate
1 1.000 0 0 0 32 -32 96 3 polygon
1 1.000 0 96 0 128 2 polygon
1 1.000 -16 64 -40 64 2 polygon
1 1.000 -52 64 -72 64 2 polygon
1 1.000 -84 64 -104 64 2 polygon
1 1.000 -92 80 -104 80 2 polygon
1 1.000 -104 80 -104 48 2 polygon
1 1.000 -104 48 -92 48 2 polygon
endgate
} def


%%EndSetup

%%Page: i04527x01 1
%%PageOrientation: Portrait
%%PageBoundingBox: 0 0 612 792
/pgsave save def bop
% 32.00 2.00 gridspace
0.7500 inchscale
2.6000 setlinewidth 1274 1516 translate

0.824 0.706 0.549 scb
496 1.000 -450 394 -450 -86 350 -86 350 394 4 polygon
sce
0 1.000 -450 394 -450 -86 350 -86 350 394 4 polygon
1.000 0.000 -338 154 plc::PLC_powersupply
1.000 0.000 -146 154 plc::plc_processor
1.000 0.000 142 154 plc::1746_IB8
(Slot 0) {/Helvetica cf} 2 16 0.000 0.700 -178 442 label
(Slot 1) {/Helvetica cf} 2 16 0.000 0.700 -34 442 label
(Slot 2) {/Helvetica cf} 2 16 0.000 0.700 102 442 label
(Slot 3) {/Helvetica cf} 2 16 0.000 0.700 238 442 label
0.000 0.000 1.000 scb
(\(processor\)) {/Helvetica-Oblique cf} 2 16 0.000 0.500 -194 410 label
(\(discrete input\)) {/Helvetica-Oblique cf} 2 16 0.000 0.500 78 410 label
(\(discrete output\)) {/Helvetica-Oblique cf} 2 16 0.000 0.500 -82 410 label
(\(unused\)) {/Helvetica-Oblique cf} 2 16 0.000 0.500 254 410 label
0.804 0.000 0.000 scb
1 1.000 30 -70 30 -66 2 polygon
1 1.000 -434 42 -562 42 2 polygon
1 1.000 -434 -6 -562 -6 2 polygon
sce
(220 VAC) {/Helvetica cf} 2 16 0.000 1.000 -738 22 label
(power) {/Helvetica cf} 2 16 0.000 1.000 -706 -14 label
0.804 0.000 0.000 scb
1 1.000 -402 42 -306 42 -306 10 3 polygon
1.000 0.000 -306 -6 generic::jumper
1 1.000 -306 -22 -306 -214 2 polygon
1 1.000 -306 -406 -306 -214 2 polygon
1 1.000 46 42 42 42 2 polygon
sce
1.000 0.000 -2 154 plc::1746_OA8
(Lamp) {/Helvetica cf} 2 16 0.000 1.000 -82 -166 label
(Solenoid) {/Helvetica cf} 2 16 0.000 1.000 -106 -472 label
0.804 0.000 0.000 scb
1 1.000 -402 42 -386 74 -50 74 -50 234 18 234 5 polygon
1 1.000 -402 -6 -258 -6 -258 -118 174 -118 174 -66 5 polygon
1.000 0.000 46 -118 generic::jumper
1.000 0.000 94 -118 generic::jumper
1 1.000 46 -102 46 10 42 10 3 polygon
1 1.000 94 -102 94 170 42 170 3 polygon
1 1.000 30 -214 46 -214 46 -134 3 polygon
1 1.000 94 -134 94 -374 30 -374 3 polygon
1.000 0.000 -258 -118 generic::dot
1 1.000 -258 -118 -258 -214 -98 -214 3 polygon
1.000 0.000 -258 -214 generic::dot
1 1.000 -258 -214 -258 -374 -98 -374 3 polygon
1 1.000 -306 -406 -306 -518 174 -518 3 polygon
1 1.000 142 -518 142 -198 174 -198 3 polygon
1.000 0.000 142 -518 generic::dot
1.000 0.000 142 -358 generic::dot
1 1.000 142 -358 174 -358 2 polygon
1 1.000 302 -198 302 42 186 42 3 polygon
1 1.000 302 -358 334 -358 334 106 186 106 4 polygon
1 1.000 302 -518 366 -518 366 234 186 234 4 polygon
sce
(8 bar) {/Helvetica cf} 2 16 0.000 0.700 206 -676 label
(C) {ns} (o) {Ss} (250 ) {/Helvetica cf} 6 16 0.000 0.700 200 -158 label
0.804 0.000 0.000 scb
1.000 0.000 -50 74 generic::dot
1 1.000 -50 74 18 74 2 polygon
1 1.000 174 -42 174 -32 2 polygon
0.600 0.600 0.600 scb
496 1.000 -30 354 -30 286 58 286 58 354 4 polygon
496 1.000 114 352 114 284 202 284 202 352 4 polygon
sce
1.000 270.000 238 -226 euro::tempswitch-NO
1.000 90.000 -34 -214 euro::lamp
1.000 270.000 240 -578 euro::preasureswotch
1.000 90.000 -32 -370 euro::relecoil
1.000 270.000 302 -358 euro::pushbutton
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
