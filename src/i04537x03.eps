%!PS-Adobe-3.0 EPSF-3.0
%%Title: i04537x03.eps
%%Creator: XCircuit v0.0 rev42827597
%%CreationDate: Tue Oct 27 13:17:56 2020
%%Pages: 1
%%BoundingBox: 68 68 391 319
%%DocumentNeededResources: font Helvetica Helvetica-Bold Helvetica-Oblique 
%%+ font Times-Roman Courier 
%%EndComments
%%BeginProlog
%
%  PostScript prolog for output from xcircuit
%  Version: 3.9
%
%  Electrical circuit (and otherwise general) drawing program
%
%  Written by Tim Edwards 8/5/93--4/12/16  (tim@opencircuitdesign.com)
%  The Johns Hopkins University (1993-2004)
%  MultiGiG, Inc. (2004-2012)
%  Open Circuit Design (2012-2016)
%
%%BeginResource: procset XCIRCproc 3.9 1
%
% supporting definitions --- these are the primary xcircuit types.

/XCIRCsave save def
/topmat matrix currentmatrix def

/fontslant { /slant exch def [1 0 slant 1 0 0] 
    exch findfont exch makefont dup length dict /ndict exch def
    { 1 index /FID ne { ndict 3 1 roll put } { pop pop } ifelse } forall
    ndict definefont pop} def
/ul { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave 
   currentpoint topmat setmatrix 0 0 moveto 2 index stringwidth pop (_)
   false charpath flattenpath pathbbox grestore exch pop 1 index
   sub setlinewidth exch pop currentpoint 3 -1 roll add moveto 0
   rlineto stroke moveto } if } if } def
/ol { count 0 gt { dup type /stringtype eq showflag 1 eq and { gsave gsave
   currentpoint topmat setmatrix 2 index stringwidth pop 3 index
   true charpath flattenpath pathbbox grestore exch pop
   exch pop topmat setmatrix (_) true charpath pathbbox grestore
   exch pop 1 index sub setlinewidth exch pop currentpoint
   exch 4 1 roll exch sub add moveto pop 0 rlineto stroke
   moveto } if } if } def
/stW { gsave currentpoint newpath moveto true charpath flattenpath
	pathbbox pop exch pop sub grestore } def
/Ts {mark Tabs aload pop counttomark 1 add array astore /Tabs exch def Tabs
	0 currentpoint pop put} def
/Tbn {mark Tabs aload pop counttomark dup 2 add 1 roll cleartomark 1 sub} def
/Tb { 0 1 Tbn {Tabs exch get dup currentpoint pop lt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/Tf { Tbn -1 0 {Tabs exch get dup currentpoint pop gt
	{currentpoint exch pop moveto exit} {pop} ifelse } for } def
/qS { (aa) stW (a a) stW sub 4 div 0 Kn } def
/hS { qS qS } def
/pspc 0 def
/cf0 { scalefont setfont } bind def
/Kn { dup kY add /kY exch def rmoveto } bind def
/ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.33 mul neg Kn} def
/Ss { /fscale fscale 0.67 mul def currentfont 0.67 cf0 0 fscale0 fscale mul
	0.67 mul Kn } def
/ns { 0 kY neg Kn /kY 0 def /fscale 1.0 def xfont0 1.0 cf0 } def
/MR { /twidth exch def } def
/CRx { } def
/CR { ns 0 /Bline Bline fscale0 neg add def Bline moveto CRx } def
/cf { dup type /realtype ne {1.0} if exch findfont exch kY 0 eq
	{ 40 mul dup /fscale0 exch def cf0 /xfont0 currentfont def}
	{fscale0 mul fscale mul cf0} ifelse } def
/ctmk { counttomark dup 2 add -1 roll pop } bind def
/label { gsave translate 0 0 moveto dup scale neg
	/rotval exch def /twidth 100000 def /just exch def just 128 and
	0 gt {/mshow {pop} def} {/mshow {show} def} ifelse just 16 and 0
	gt {gsave rotval rotate 0 1 dtransform gsave pagemat setmatrix
	idtransform exch grestore 1 0 dtransform gsave pagemat setmatrix
	idtransform exch grestore dup abs 1e-9 lt {pop mul 0 gt} {3 1 roll
	pop pop 0 lt} ifelse grestore {-1 /rotval rotval neg def /just just
	dup 3 and 1 ne {3 xor} if def} {1} ifelse exch -1e-9 lt {-1 /rotval
	rotval neg def /just just dup 12 and 4 ne {12 xor} if def} {1}
	ifelse scale } if /showflag 0 def /fspc pspc def /Bline 0 def
	/numlines 0 def /padding 0 array def /Tabs 0 array def
	/fscale 1.0 def /kY 0 def gsave /CRx { linewid padding
	aload pop numlines 1 add dup /numlines exch def array astore
	/padding exch def /linewid 0 def } def dup 1 add copy dup 1 0
	dtransform exch atan rotate {exch dup type /stringtype eq {gsave dup
	gsave newpath 0 0 moveto true charpath flattenpath pathbbox pop exch
	pop exch pop grestore currentpoint pop add dup /linewid exch def twidth
	ge {grestore CR exch 1 add dup 2 add {CR} exch 1 roll exch} {grestore}
	ifelse true charpath flattenpath} {dup type /arraytype eq {exec} {12
	string cvs true charpath flattenpath} ifelse} ifelse} repeat
	CRx /CRx {padding aload pop just 1280 and 0 gt {blockwid exch sub just
	1024 and 0 gt {0.5 mul} if} {pop 0} ifelse 0 rmoveto numlines 1 sub
	dup /numlines exch def array astore /padding exch def} def exch pop
	pathbbox grestore 4 copy pop exch pop exch sub /blockwid exch def
	3 -1 roll pop 3 1 roll just 1 and 0 gt {just 2 and
	0 gt {exch pop neg fspc sub} {exch sub 0.5 mul neg} ifelse} {pop neg
	fspc add} ifelse exch Bline exch just 4 and 0 gt {just 8 and 0 gt
	{exch pop neg fspc sub} {add 0.5 mul neg} ifelse} {pop neg fspc add}
	ifelse rotval rotate Kn currentpoint translate /showflag 1 def /Bline
	0 def /Tabs 0 array def /fscale 1.0 def /kY 0 def CRx {dup type
	/stringtype eq {mshow} {dup type /arraytype eq {exec} {12 string cvs
	mshow} ifelse} ifelse} repeat grestore endclip} def
/pinlabel { 4 index 32 and 0 ne hlevel 0 eq or { /pspc 10 def label
	/pspc 0 def } { pop pop pop pop pop {pop} repeat } ifelse } def
/pinglobal { pinlabel } def
/infolabel { pinlabel } def
/graphic { gsave 4 index cvx exec /DataSource get resetfile translate 0 0
	moveto neg rotate dup scale cvx exec image grestore endclip} def

/scb { setrgbcolor } bind def  /sce { defColor aload pop scb } bind def
/cRedef {/defColor currentcolor 3 array astore def} def
/begingate {dup type /dicttype ne {1 dict} if begin	% default params
	dup type /dicttype ne {1 dict} if begin		% instanced params
	/hlevel hlevel 1 add def /defColor currentcolor sce 3 array astore
	def gsave sce dup type /nametype eq { pop } if translate 0 0 moveto
	neg rotate dup type /nametype eq not { dup abs currentlinewidth exch
	div setlinewidth } { pop } ifelse dup abs scale clipped 1 and 1 eq
	{/clipped clipped 1 add def} if} bind def
/endgate { /hlevel hlevel 1 sub def grestore defColor aload pop cRedef
	scb end end endclip} bind def

/hlevel 0 def
/endclip {clipped 1 and 1 eq {grestore /clipped clipped 1 sub def} if} def
/tmpa [1 0 0 1 0 0] def
/gar {8 8 true tmpa {<c0 c0 00 00 0c 0c 00 00>} imagemask} bind
{8 8 true tmpa {<30 70 60 02 03 07 06 20>} imagemask} bind
{8 8 true tmpa {<0c 1e 1e 0c c0 e1 e1 c0>} imagemask} bind
{8 8 true tmpa {<0f 0f 0f 0f f0 f0 f0 f0>} imagemask} bind
{8 8 true tmpa {<3f f3 e1 e1 f3 3f 1e 1e>} imagemask} bind
{8 8 true tmpa {<df cf 8f 9f fd fc f8 f9>} imagemask} bind
{8 8 true tmpa {<ff 3f 3f ff ff f3 f3 ff>} imagemask} bind 7 array astore def
/ppaint { gsave clip tmpa dup setmatrix pathbbox neg exch neg 4 2 roll
  neg 4 -1 roll 2 copy gt {exch} if 8 div ceiling 8 mul 4 2 roll neg 2 copy
  gt {exch} if 8 div ceiling 8 mul 3 -1 roll -8 5 -1 roll
  { 3 index exch 5 exch put dup -8 3 index { 3 index
  exch 4 exch put 3 index exec } for } for pop pop pop pop grestore } bind def
/setstyles {
  currentlinewidth mul setlinewidth /style exch def style 2048 and 0 gt
  clipped 1 and 0 eq and {clip newpath /clipped clipped 1 add def} {
  style 1 and 0 gt not {closepath} if
  style 1024 and 0 gt {2 setlinecap 0 setlinejoin} if
  style 2 and 0 gt {currentlinewidth 4 mul dup 2 array astore 0 setdash} if
  style 4 and 0 gt {0.5 currentlinewidth 4 mul 2 array astore 0 setdash} if
  gsave style 16 and 0 gt { style 224 and -5 bitshift style 256 and 0 gt {
  7 exch sub 8 div dup 1 exch sub currentrgbcolor 3 array astore
  {3 copy mul add 4 1 roll pop} forall pop pop setrgbcolor eofill}
  {dup 7 lt {gar exch get ppaint} {pop eofill} ifelse} ifelse}
  {style 256 and 0 gt {1 setgray eofill} if} ifelse grestore style 8 and 0 gt 
  style 512 eq or {newpath} {stroke} ifelse grestore endclip} ifelse} def     

/addtoy {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll add
	4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtoy1 {1 exch addtoy pop} def
/addtoy3 {3 exch addtoy pop} def
/addtoy4 {4 exch addtoy pop} def
/addtox {exch dup dup 2 mul 3 add 1 roll -1 1 { 4 1 roll dup 4 1 roll 3 -1 roll
	add exch 4 -1 roll 2 mul 1 add index 2 mul 2 add 2 roll} for pop} def
/addtox1 {1 exch addtox pop} def
/addtox3 {3 exch addtox pop} def
/addtox4 {4 exch addtox pop} def
/polygon { gsave /num exch def moveto num 1 sub {lineto} repeat setstyles } def
/xcarc   { gsave newpath arc setstyles } def
/elb { matrix currentmatrix 7 -1 roll 7 -1 roll translate 5 1 roll 4 -1 roll
	3 index div 1 scale } def
/ele { 0 4 1 roll 0 4 1 roll } bind def
/ellipse { gsave elb newpath ele arc setmatrix setstyles } def
/pellip  { elb ele arc setmatrix } def
/nellip  { elb ele arcn setmatrix } def
/spline  { gsave moveto curveto setstyles } def
/polyc   { {lineto} repeat } bind def
/beginpath { gsave moveto } bind def
/endpath { setstyles } bind def
/bop	 { 1 setlinecap 2 setlinejoin 6 setmiterlimit 0 0 0 scb cRedef
	/clipped 0 def} def
/psinsertion {/PSobj save def /showpage {} def /setpagedevice {pop} def bop
	rotate translate dup scale} def
/end_insert {PSobj restore} def
/setpagemat {/pagemat matrix currentmatrix def} def
/inchscale  {setpagemat 0.375 mul dup scale} def
/cmscale    {setpagemat 0.35433071 mul dup scale} def

%%EndResource
%%EndProlog
% XCircuit output starts here.

%%BeginSetup

/generic::arrowhead {
% nonetwork
begingate
8 -28 beginpath
3 -18 3 -15 0 0 curveto
-3 -15 -3 -18 -8 -28 curveto
-2 -26 2 -26 8 -28 curveto
249 
1.000 endpath
endgate
} def

/analog::npn {
begingate
1 1.000 -48 0 -64 0 2 polygon
1 1.000 -48 48 -48 -48 2 polygon
1 1.000 0 48 -48 22 2 polygon
1 1.000 0 48 0 64 2 polygon
1 1.000 0 -48 -48 -22 2 polygon
1 1.000 0 -48 0 -64 2 polygon
1.000 120.000 0 -48 generic::arrowhead
1.000 0.000 0.000 scb
(C) {/Times-Roman cf} 2 9 0.000 1.000 0 64 pinlabel
(B) {/Times-Roman cf} 2 7 0.000 1.000 -64 0 pinlabel
(E) {/Times-Roman cf} 2 13 0.000 1.000 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:Q%i %pC %pB %pE npn) {/Times-Roman cf} 2 4 0.000 1.000 -244 -139 
infolabel
(sim:b %pB %pE %pC) {/Times-Roman cf} 2 4 0.000 1.000 -244 -187 infolabel
endgate
} def

/analog::diode {
begingate
248 1.000 -18 -16 0 16 18 -16 3 polygon
1 1.000 0 -48 0 -16 2 polygon
1 1.000 0 48 0 16 2 polygon
1 1.000 -18 16 18 16 2 polygon
1.000 0.000 0.000 scb
(d.m) {/Times-Roman cf} 2 9 0.000 1.000 0 48 pinlabel
(d.p) {/Times-Roman cf} 2 13 0.000 1.000 0 -48 pinlabel
endgate
} def

/analog::resistor {
begingate
1 1.000 0 64 0 36 2 polygon
1 1.000 0 -64 0 -36 2 polygon
1 1.000 0 -36 14 -30 -14 -18 14 -6 -14 6 14 18 -14 30 0 36 8 polygon
1.000 0.000 0.000 scb
(r.1) {/Times-Roman cf} 2 9 0.000 1.000 0 64 pinlabel
(r.2) {/Times-Roman cf} 2 13 0.000 1.000 0 -64 pinlabel
0.180 0.545 0.341 scb
(spice:R%i %pr.1 %pr.2 1.0K) {/Times-Roman cf} 2 0 0.000 1.000 -208 -160 
infolabel
(sim:r %pr.1 %pr.2) {/Times-Roman cf} 2 0 0.000 1.000 -208 -208 infolabel
endgate
} def

/analog::vdd {
% trivial
begingate
1 1.000 0 0 0 32 2 polygon
1 1.000 -32 32 32 32 2 polygon
(Vdd) {/Times-Roman cf} 2 17 0.000 0.900 0 38 label
0.933 0.604 0.000 scb
(Vdd) {/Times-Roman cf} 2 13 0.000 1.000 0 0 pinglobal
endgate
} def

/generic::dot {
% trivial
begingate
248 1.000 0 0 6 0.000 360.000 xcarc
1.000 0.000 0.000 scb
(x) {/Times-Roman cf} 2 29 -0.000 1.000 0 0 pinlabel
endgate
} def


%%EndSetup

%%Page: i04536x01 1
%%PageOrientation: Portrait
/pgsave save def bop
0.7500 inchscale
2.6000 setlinewidth 1568 736 translate

0.800 0.800 0.800 scb
496 1.000 -1184 384 -1184 -480 -192 -480 -192 384 4 polygon
sce
-1.000 /sv 0.000 -640 160 analog::npn
1 1.000 -528 184 -560 168 2 polygon
1 1.000 -556 176 -560 168 -552 166 3 polygon
1 1.000 -528 160 -560 144 2 polygon
1 1.000 -556 152 -560 144 -552 142 3 polygon
1.000 180.000 -480 160 analog::diode
1 1.000 -272 248 -240 232 2 polygon
1 1.000 -244 240 -240 232 -248 230 3 polygon
1 1.000 -272 224 -240 208 2 polygon
1 1.000 -244 216 -240 208 -248 206 3 polygon
-1.000 /sv 180.000 -320 240 analog::diode
1 1.000 -320 240 32 0.000 360.000 xcarc
0 1.000 -432 240 -432 80 -672 80 -672 240 4 polygon
1.000 90.000 -880 272 analog::diode
1.000 0.000 -832 -48 analog::resistor
1.000 90.000 -736 48 analog::resistor
(. . .) {/Helvetica cf} 2 16 0.000 1.000 -272 48 label
(To interface circuitry) {/Helvetica-Oblique cf} 2 16 0.000 0.500 -448 8 label
1 1.000 -1200 272 16 0.000 360.000 xcarc
1 1.000 -1192 284 -1212 264 2 polygon
1 1.000 -1188 280 -1208 260 2 polygon
1 1.000 -1200 144 16 0.000 360.000 xcarc
1 1.000 -1192 156 -1212 136 2 polygon
1 1.000 -1188 152 -1208 132 2 polygon
1 1.000 -1200 16 16 0.000 360.000 xcarc
1 1.000 -1192 28 -1212 8 2 polygon
1 1.000 -1188 24 -1208 4 2 polygon
1 1.000 -1184 144 -1120 144 2 polygon
1 1.000 -1200 -368 16 0.000 360.000 xcarc
1 1.000 -1192 -356 -1212 -376 2 polygon
1 1.000 -1188 -360 -1208 -380 2 polygon
1 1.000 -1184 -368 -1120 -368 2 polygon
(\(typical\)) {/Helvetica cf} 2 16 0.000 1.000 -704 -48 label
(Koyo C0-00DD1-D) {/Helvetica-Bold cf} 2 16 0.000 1.000 -672 -192 label
(discrete outputs) {/Helvetica-Bold cf} 2 16 0.000 1.000 -656 -240 label
1.000 90.000 -400 48 analog::resistor
1 1.000 -480 112 -480 48 -464 48 3 polygon
1.000 0.000 -320 128 analog::resistor
1.000 0.000 -480 304 analog::vdd
1 1.000 -832 16 -832 48 -800 48 3 polygon
1.000 0.000 -832 48 generic::dot
-1.000 /sv 0.000 -960 48 analog::npn
1 1.000 -896 48 -832 48 2 polygon
1.000 360.000 -1056 48 analog::diode
1 1.000 -928 48 64 0.000 360.000 xcarc
1 1.000 -1056 96 -1056 144 -960 144 -960 112 4 polygon
1 1.000 -1056 0 -1056 -48 -960 -48 -960 -16 4 polygon
1 1.000 -672 48 -640 48 -640 96 3 polygon
1.000 0.000 -1056 -48 generic::dot
1 1.000 -1056 -48 -1056 -112 -1056 -144 -832 -144 -832 -112 5 polygon
(COM) {/Courier cf} 2 16 0.000 1.000 -1312 -384 label
1 1.000 -1120 144 -1056 144 2 polygon
1.000 0.000 -1056 144 generic::dot
1 1.000 -480 304 -480 208 2 polygon
1.000 0.000 -480 304 generic::dot
1 1.000 -336 48 -320 48 -320 64 3 polygon
1.000 0.000 -320 48 generic::dot
1 1.000 -320 48 -288 48 2 polygon
1 1.000 -480 304 -320 304 -320 288 3 polygon
1 1.000 -640 224 -640 272 -832 272 3 polygon
1 1.000 -928 272 -1184 272 2 polygon
(+V) {/Courier cf} 2 16 0.000 1.000 -1280 256 label
(Y1) {/Courier cf} 2 16 0.000 1.000 -1280 128 label
(Y2) {/Courier cf} 2 16 0.000 1.000 -1280 0 label
1 1.000 -1200 -112 16 0.000 360.000 xcarc
1 1.000 -1192 -100 -1212 -120 2 polygon
1 1.000 -1188 -104 -1208 -124 2 polygon
1 1.000 -1200 -240 16 0.000 360.000 xcarc
1 1.000 -1192 -228 -1212 -248 2 polygon
1 1.000 -1188 -232 -1208 -252 2 polygon
(Y3) {/Courier cf} 2 16 0.000 1.000 -1280 -128 label
(Y4) {/Courier cf} 2 16 0.000 1.000 -1280 -256 label
1 1.000 -1120 -368 -1056 -368 -1056 -144 3 polygon
1.000 0.000 -1056 -144 generic::dot
0 1.000 -1184 384 -1184 -480 -192 -480 -192 384 4 polygon
pgsave restore showpage

%%Trailer
XCIRCsave restore
%%EOF
